class Main : Object;

struct ListItem {
  string vname;
  int value;
}


struct Test {
  string s;
  int n;
  array!ListItem list;
}


void dumpList (const ref array!ListItem list) {
  writeln("  list length: ", list.length);
  foreach (auto idx, const ref auto val; list) {
    print("   %d: %q=%s", idx, val.vname, val.value);
  }
}


void test00 () {
  array!Test ss;

  dictionary!(string, array!Test) i2s;

  ss.length = 2;

  ss[0].s = "string 1";
  ss[0].n = 42;
  ss[0].list.length = 2;
  ss[0].list[0].vname = "item 0";
  ss[0].list[0].value = 1;
  ss[0].list[1].vname = "item 1";
  ss[0].list[1].value = 2;

  ss[1].s = "string 2";
  ss[1].n = 666;
  ss[1].list.length = 3;
  ss[1].list[0].vname = "item 2";
  ss[1].list[0].value = 3;
  ss[1].list[1].vname = "item 3";
  ss[1].list[1].value = 4;
  ss[1].list[2].vname = "item 4";
  ss[1].list[2].value = 5;

  i2s.put("key", ss);

  ss.length = 0;

  ss.length += 1;
  ss[0].s = "string 3";
  ss[0].n = 69;
  ss[0].list.length = 1;
  ss[0].list[0].vname = "item 5";
  ss[0].list[0].value = 6;
  i2s.put("another_key", ss);
  ss.length = 0;

  writeln(i2s.length);

  for (auto idx = i2s.firstIndex();
       i2s.isValidIndex(idx);
       idx = i2s.nextIndex(idx))
  {
    auto key = i2s.keyAtIndex(idx);
    auto val = i2s.valueAtIndex(idx);
    //array!Test *val = i2s.valueAtIndex(idx);
    //writeln(key, " : ", val.length);
    print("--- %d: <%q> : %d", idx, key, val.length);
    foreach (auto aidx, const ref auto v; *val) {
      print(" --- %d: <%q> : %d", aidx, v.s, v.n);
      dumpList(v.list);
    }
  }

  assert(i2s.length == 2);
}


void test01 () {
  dictionary!(string, string) i2s;

  i2s.put("a", "string 42");
  i2s.put("boo", "string 666");

  for (auto idx = i2s.firstIndex(); i2s.isValidIndex(idx); idx = i2s.nextIndex(idx)) {
    string key = i2s.keyAtIndex(idx);
    auto val = i2s.valueAtIndex(idx);
    print("idx=%s; key=<%q>; value=<%q>", idx, key, *val);
  }

  assert(i2s.length == 2);
}


void test02 () {
  dictionary!(int, int) i2s;

  i2s.put(46, 666);
  i2s.put(69, 999);

  for (auto idx = i2s.firstIndex(); i2s.isValidIndex(idx); idx = i2s.nextIndex(idx)) {
    auto key = i2s.keyAtIndex(idx);
    auto val = i2s.valueAtIndex(idx);
    print("idx=%s; key=<%q>; value=<%q>", idx, key, *val);
  }

  assert(i2s.length == 2);
}


void test03 () {
  dictionary!(int, int) i2s;

  i2s.put(46, 666);
  i2s.put(69, 999);

  for (auto idx = i2s.firstIndex(); i2s.isValidIndex(idx); idx = i2s.removeAndNextIndex(idx)) {
    auto key = i2s.keyAtIndex(idx);
    auto val = i2s.valueAtIndex(idx);
    print("idx=%s; key=<%q>; value=<%q>", idx, key, *val);
  }

  assert(i2s.length == 0);
}


void main () {
  writeln("===============");
  test00();

  writeln("===============");
  test01();

  writeln("===============");
  test02();
}
