// HUD options menu
menudef AutomapOptions {
  //selector = MenuSelector_SmallRight;
  Title = "AUTOMAP OPTIONS";

  option bool {
    title = "Default scale is small";
    cvar = am_default_whole;
    help =
      "Choose default automap scale so you can see most of the map?"
      "If 'ON', you cannot scale automap with '+'/'-'."
      "Use '0' to toggle this mode while automap is active.";
  }

  option bool {
    title = "Overlay automap";
    cvar = am_overlay;
    help = "Draw automap as overlay instead of separate screen?";
  }

  option slider {
    title = "Overlay transparency";
    cvar = am_overlay_alpha;
    step = 0.1;
    min = 0;
    max = 1;
    help = "Automap overlay transparency.";
  }

  option slider {
    title = "Overlay background darken";
    cvar = am_back_darken;
    step = 0.1;
    min = 0;
    max = 1;
    help = "Amount of background darkening when automap is overlayed.";
  }

  option bool {
    title = "Show parchment";
    cvar = am_show_parchment;
    help = "Draw automap parchment (if any) in non-overlay mode?";
  }

  option bool {
    title = "Show stats on automap";
    cvar = am_show_stats;
    help = "Show various stats on automap?";
  }

  option bool {
    title = "Show inernal map name on automap";
    cvar = am_show_map_name;
    help = "Show internal map name on automap?";
  }

  option bool {
    title = "Show keys on automap";
    cvar = am_draw_keys;
    help =
      "Show keys on automap?"
      "This will show key icons in subsectors you've seen."
      "I don't think that this is a cheat. But if you aren't"
      "agree, you can turn this option off.";
  }

  option slider {
    title = "Key blinking time";
    cvar = am_keys_blink_time;
    step = 0.1;
    min = 0;
    max = 3;
    help =
      "You can make automap key icons blink, so they are easier to spot."
      "Blink time is in seconds. Set to zero to disable blinking.";
  }

  option enum {
    title = "Automap type";
    cvar = am_draw_type;
    list {
      "Lines",
      "Floor textures",
      "Ceiling textures",
    }
    help =
      "Automap rendering type."
      "This can be toggled with 'T' key when automap is active.";
  }

  option slider {
    title = "Texture transparency";
    cvar = am_texture_alpha;
    step = 0.1;
    min = 0;
    max = 1;
    help = "Automap texture transparency";
  }

  option bool {
    title = "Imprecise automap";
    cvar = am_full_lines;
    help =
      "Draw full line even when only part of it was seen?"
      "If turned 'OFF', automap will use per-segment visibility.";
  }

  option bool {
    title = "Follow player";
    cvar = am_follow_player;
    help =
      "Should automap follow the player?"
      "This can be toggled with 'H' key when automap is active.";
  }

  option bool {
    title = "Rotating automap";
    cvar = am_rotate;
    help = "Should automap rotate around the player?";
  }

  option bool {
    title = "Automap grid";
    cvar = am_draw_grid;
    help = "Draw grid on automap?";
  }

  option enum {
    title = "Player arrow";
    cvar = am_player_arrow;
    list {
      "Doom Arrow",
      "Heretic Sword",
    }
    help = "Player arrow type.";
  }

  option bool {
    title = "Mark secret walls";
    cvar = am_show_secrets;
    help =
      "Mark secret walls on automap?"
      "\cGWARNING! Technically this is cheating, but you"
      "\cGcan use this without turning on cheats.";
  }


  header "Automap Colors";

  option color {
    title = "Wall";
    cvar = am_color_wall;
    help = "Normal wall color.";
  }

  option color {
    title = "Two-sided Wall";
    cvar = am_color_tswall;
    help = "Same-height two-sided wall color";
  }

  option color {
    title = "Floor Level Change";
    cvar = am_color_fdwall;
    help = "Floor level change line color.";
  }

  option color {
    title = "Ceiling Level Change";
    cvar = am_color_cdwall;
    help = "Ceiling level change line color.";
  }

  option color {
    title = "Walls With Extra Floors";
    cvar = am_color_exwall;
    help = "Walls with extra floors color.";
  }

  option color {
    title = "Secret Wall";
    cvar = am_color_secretwall;
    help = "Secret wall color.";
  }

  option color {
    title = "Scanner Revealed";
    cvar = am_color_power;
    help = "Walls revealed by the scanner color.";
  }


  header "Automap UI Colors";

  option color {
    title = "Grid Lines";
    cvar = am_color_grid;
    help = "Grid lines color.";
  }

  option color {
    title = "Current Mark";
    cvar = am_color_current_mark;
    help = "Current mark color.";
  }


  header "More Automap Colors";

  option color {
    title = "Thing";
    cvar = am_color_thing;
    help = "Thing color.";
  }

  option color {
    title = "Solid Thing";
    cvar = am_color_solid;
    help = "Solid thing color.";
  }

  option color {
    title = "Monster";
    cvar = am_color_monster;
    help = "Monster color.";
  }

  option color {
    title = "Missile";
    cvar = am_color_missile;
    help = "Missile color.";
  }

  option color {
    title = "Corpse";
    cvar = am_color_dead;
    help = "Dead thing color.";
  }

  option color {
    title = "Invisible";
    cvar = am_color_invisible;
    help = "Invisible thing color.";
  }

  option color {
    title = "Player";
    cvar = am_color_player;
    help = "Player color.";
  }

  option color {
    title = "Miniseg";
    cvar = am_color_miniseg;
    help = "Miniseg color.";
  }
}
