// mouse options menu
menudef MouseOptions {
  //selector = MenuSelector_SmallRight;
  Title = "MOUSE OPTIONS";

  header "Mouse Sensitivity";

  option slider {
    title = "Mouse X sensitivity";
    cvar = mouse_x_sensitivity;
    step = 0.25;
    min = 0;
    max = 10.0;
  }

  option slider {
    title = "Mouse Y sensitivity";
    cvar = mouse_y_sensitivity;
    step = 0.25;
    min = 0;
    max = 10.0;
  }


  header "Misc Options";

  option bool {
    title = "Mouse look";
    cvar = mouse_look;
  }

  option bool {
    title = "Horisontal mouse look";
    cvar = mouse_look_horisontal;
  }

  option bool {
    title = "Vertical mouse look";
    cvar = mouse_look_vertical;
  }

  option bool {
    title = "Invert mouse";
    cvar = invert_mouse;
  }

  option bool {
    title = "Mouse lookspring";
    cvar = lookspring_mouse;
    help =
      "Vertical look will return to center when",
      "you'll release mouse look key.";
  }

  option bool {
    title = "Keyboard lookspring";
    cvar = lookspring_keyboard;
    help =
      "Vertical look will return to center when",
      "you'll release view up/down key.";
  }

  option bool {
    title = "Look strafe";
    cvar = lookstrafe;
  }


  header "UI options";

  option bool {
    title = "Allow mouse in UI";
    cvar = ui_mouse;
    help =
      "If this options turned off, the engine will",
      "release mouse capture when UI is active.";
  }


  header "Mouse Debug" [__k8vavoom_developer_version > 0];

  option bool [__k8vavoom_developer_version > 0] {
    title = "Show Acceleration Debug Info";
    cvar = __m_dbg_motion;
  }

  option bool [__k8vavoom_developer_version > 0] {
    title = "Leave Standard System Cursor";
    cvar = __m_dbg_cursor;
  }

  option bool [__k8vavoom_developer_version > 0] {
    title = "Grab Mouse";
    cvar = m_grab;
    help =
      "Try to grab (own) mouse input?",
      "Note that relative motion always grabs the mouse.",
      "\c[WHITE]If not sure, leave this 'ON'.";
  }


  header "Mouse Handling";

  option bool {
    title = "Relative Motion";
    cvar = m_relative;
    help =
      "Use relative mouse motion instead of mouse warping?",
      "Using relative motion may (or may not) make mouse more responsible.";
  }

  option bool {
    title = "Accumulate Relative Motion";
    cvar = ms_rel_accum;
    help =
      "Accumulate relative mouse motion before acceleration?",
      "\c[WHITE]If not sure, leave this 'OFF'.";
  }


  header "Relative Mouse Acceleration";

  option enum {
    title = "Acceleration Mode";
    cvar = ms_rel_mode;
    list {
      "None",
      "HL-Like",
    }
    help = "Acceleration mode for relative mouse motion.";
  }

  option slider {
    title = "Sensitivity";
    cvar = ms_rel_sensitivity;
    step = 0.02;
    min = 0;
    max = 6;
  }

  option slider {
    title = "Sensitivity Scale";
    cvar = ms_rel_sensscale;
    step = 0.02;
    min = 0;
    max = 6;
  }

  option slider {
    title = "Sensitivity Cap";
    cvar = ms_rel_senscap;
    step = 0.02;
    min = 1;
    max = 16;
  }

  option slider {
    title = "Distance Exponent";
    cvar = ms_rel_exponent;
    step = 0.01;
    min = 0;
    max = 4;
  }

  option bool {
    title = "Use Squared Distance";
    cvar = ms_rel_squaredist;
  }

  option bool {
    title = "Use Different Exponent Formula";
    cvar = ms_rel_expweird;
  }
}
