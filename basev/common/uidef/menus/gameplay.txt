// gameplay options menu
menudef GameplayOptions {
  //selector = MenuSelector_SmallRight;
  Title = "GAMEPLAY OPTIONS";


  header "Slide Movement" [k8vavoom_developer_version > 0];

  option enum [k8vavoom_developer_version > 0] {
    title = "Sliding Code";
    cvar = gm_slide_code;
    list {
      "Vanilla",
      "Sweep",
      "Sweep, Q3-Like",
    }
    help = "Which sliding code to use?";
  }

  option bool [k8vavoom_developer_version > 0] {
    title = "Q3 TimeLeft Method";
    cvar = gm_q3slide_use_timeleft;
    help = "Use 'timeleft' method for Q3 sliding code (gives wrong velocities and bumpiness)?";
  }

  option bool [k8vavoom_developer_version > 0] {
    title = "Debug Slide Code";
    cvar = dbg_slide_code;
    help = "Dump various debug info in sliding code?";
  }


  header "Monster AI";

  option enum {
    title = "Monsters Melee Backing";
    cvar = monster_backing;
    list {
      "Off",
      "Normal",
      "Forced",
    }
    help =
      "Should monsters back away from melee attacker (normal),",
      "or always back away when they have a ranged attack? (forced)";
  }

  option bool {
    title = "Monsters can avoid dropoffs";
    cvar = monster_dropoff;
  }

  option bool {
    title = "Better sight for monsters";
    cvar = compat_better_sight;
    help = "Perform slightly better (and slower) line-of-sight checking for monsters.";
  }

  option bool {
    title = "Limit PE soul spawn";
    cvar = gm_default_pain_limit;
    help =
      "Limit Pain Elemental Lost Soul spawn to 20, as in vanilla?"
      "This can be overriden by MAPINFO."
      "\cGWARNING: This setting takes effect only after full game restart"
      "\cG(i.e. close the game, and run it again)!";
  }

  option bool {
    title = "Player Death Infighting";
    cvar = gm_death_infighting;
    help = "Should monsters start total infighting after player death?";
  }


  header "Corpses";

  option enum {
    title = "Slide Bodies";
    cvar = g_slide_bodies;
    list { "No", "Yes" };
    help =
      "Slide bodies that may hang on ledges?",
      "The algorithm is very experimental, and some bodies may",
      "slide in a fancy ways. But this should not affect gameplay.";
  }

/*
  header "Corpses";

  option bool {
    title = "Make Corpses Smaller";
    cvar = gm_smaller_corpses;
    help =
      "Make corpses smaller, so they will not hang on ledges?",
      "This makes corpse collision radius smaller, so corpses will not",
      "hang on ledges unrealistically (at least not so often).",
      "",
      "\cGWARNING! This may create stuck monsters with Arch-Vile resurrection.",
      "\cGWARNING! This may create stuck monsters in Nightmare mode.";
  }

  option slider {
    title = "Corpse Radius Multiplier";
    cvar = gm_corpse_radius_mult;
    min = 0;
    max = 1;
    step = 0.1;
    help =
      "If 'smaller corpses' is active, monster corpse radius will be multiplied by this.";
  }
*/


  header "Player Movement";

  option bool {
    title = "Extra Player Friction";
    cvar = player_extra_friction_enabled;
    help =
      "Apply extra friction to non-moving player, to make",
      "player movement feel less 'icy'?";
  }

  option slider {
    title = "Extra Player Friction Mult";
    cvar = player_extra_friction;
    min = 1.0;
    max = 3.0;
    step = 0.1;
    help =
      "Multiply non-moving player friction by this",
      "(if extra player friction is enabled above).";
  }


  header "Physics Options";

  option bool {
    title = "Optimise Physics Calculation";
    cvar = vm_optimise_statics;
    help =
      "Omit most physics code for 'sleeping' entities, i.e. entities without",
      "horizontal velocity, and standing on a floor.",
      "",
      "This could allow you to play some pwads with 2k-4k monsters, but may",
      "break some mods. If something doesn't work right, try to turn this",
      "option off and check if it fixes broken things. There is no need to",
      "restart a map to activate/deactivate this option.";
  }


  header "Other Options";

  option bool {
    title = "Player Hit Kickback";
    cvar = plr_allow_damage_thrust;
    help = "Can the player be knocked back when damaged?";
  }

  option enum {
    title = "Infinitely tall monsters";
    cvar = compat_nopassover;
    list {
      "Map Default, or 'no'",
      "Always",
      "Never",
    }
    help =
      "Emulate vanilla infinitely tall monsters?"
      "'Map Default' takes this from MAPINFO if set, otherwise defaults to 'NO'.";
  }

  option enum {
    title = "Toss dropped items";
    cvar = compat_notossdrops;
    list {
      "Map Default, or 'yes'",
      "Never",
      "Always",
    }
    help =
      "Should dropped items be tossed into the air a little?"
      "'Map Default' takes this from MAPINFO if set, otherwise defaults to 'YES'.";
  }

  option bool {
    title = "Pushable barrels";
    cvar = sv_pushable_barrels;
    help =
      "Can barrels be pushed?"
      "Don't worry, this option is latched (I should explain this)."
      "\cJRequires game/map restart.";
  }

  option bool {
    title = "Respawn barrels";
    cvar = sv_barrel_respawn;
    help = "Respawn barrels in network game?";
  }

  option bool {
    title = "Decorations block projectiles";
    cvar = sv_decoration_block_projectiles;
    help =
      "Should decoration objects block projectiles?"
      "Set to 'OFF' to get vanilla experience.";
  }

  option bool {
    title = "'Unstealth' monsters";
    cvar = fuck_stealth_monsters;
    help =
      "If you hate stealth monsters as much as I do,"
      "you can turn them into normal ones with this toggle.";
  }

  option bool {
    title = "NON-Velocity-based transporters";
    cvar = sv_transporters_absolute;
    help =
      "Use velocity-based transporters?"
      "This can glitch for small transporter speeds, and also"
      "doesn't maintain the same speed as a scolling floor."
      "If your pwad is not working right, try toggling this.";
  }

  option slider {
    title = "Monster Corpse Limit";
    cvar = gm_corpse_limit;
    min = -1;
    max = 8192;
    step = 10;
    help =
      "Limits the number of corpses on the map.",
      "If there will be more than the given number of monsters,",
      "some corpses will disappear.",
      "Note that Arch-Vile cannot resurrect disappeared corpses (obviously).",
      "'-1' means 'no limit'.";
  }


  header "Weapon Behaviour";

  option enum {
    title = "Force Projectile Fire";
    cvar = gm_vanilla_hitscan_type;
    list {
      "Default",
      "Monsters",
      "Player Weapons",
      "Monsters And Player Weapons",
    };
    help =
      "You can replace vanilla hitscan attacks with fast projectile attacks.",
      "This mostly works for vanilla monsters and weapons.",
      "You can replace vanilla hitscanner attacks, or player weapon attacks,",
      "or both.",
      "\cGWARNING! This is MAJOR gameplay changer!";
  }

  //TODO
  //if (GameName == "hexen") CreateOnOffCvar("Alt. Monster Behaviour", 'alternate_monster_attacks');


  header "Misc. Options";

  option bool {
    title = "Always Run";
    cvar = always_run;
    help =
      "Controls 'always run' mode.";
  }

  option bool {
    title = "Weapon autoswitch";
    cvar = wpn_autoswitch;
  }

  option bool {
    title = "Use Slot 11 in Weapon Cycling";
    cvar = wp_cycle_special_slot;
    help =
      "Weapons without a defined slot usually put in slot 11.",
      "This slot is excluded from weapon cycling, but you can",
      "change it here.";
  }

  option bool {
    title = "Hitscan shots through crosshair";
    cvar = gm_fix_attack_offset;
    help =
      "Raise shooting point a little, so hitscan shots will go through your crosshair."
      "\cGWARNING: this changes hitscan attack height!";
  }

  option bool [k8vavoom_developer_version > 0] {
    title = "Projectile shots through crosshair";
    cvar = gm_fix_projectile_attack_offset;
    help =
      "Raise shooting point a little, so projectile shots will go through your crosshair."
      "\cGWARNING: this changes projectile attack height!";
  }

  option bool {
    title = "Raise Camera to DoomGuy Eyes";
    cvar = gm_doomguy_eye_camera;
    help =
      "Raise camera a little, so you'll see the world from DG eyes, not from his chest."
      "You may need to crouch and stand up again for this to take effect.";
  }


  header "Self-Imposed Constraints";

  option bool {
    title = "New Map With Pistol";
    cvar = sv_force_pistol_start;
    help = "Force 'pistol start' (but don't reset health).";
  }

  option bool {
    title = "New Map With Default Health";
    cvar = sv_force_health_reset;
    help = "Force default health on new map (but don't reset weapons).";
  }


  header "";

  option submenu {
    title = "Terrain/Boot Print Options";
    submenu = "GameplayOptions_Terrain";
  }

  option submenu {
    title = "Weapon/Autoaim Options";
    submenu = "GameplayOptions_WeaponAutoaim";
  }

  option submenu {
    title = "Mapinfo Override Options";
    submenu = "GameplayOptions_OverrideMapinfo";
  }

  option submenu {
    title = "Limit Non-Vanilla Features";
    submenu = "GameplayOptions_AdvLimits";
  }

  option submenu {
    title = "Skill Overrides";
    submenu = "GameplayOptions_SkillOverrides";
  }

  option submenu {
    title = "Headshots Options";
    submenu = "GameplayOptions_Headshots";
  }

  option submenu {
    title = "Elven Gifts";
    submenu = "GameplayOptions_ElvenGifts";
  }
}
