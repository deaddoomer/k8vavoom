// video options menu
menudef VideoOptions {
  //selector = MenuSelector_SmallRight;
  Title = "VIDEO OPTIONS";

  header [__gl_crippled_gpu > 0] "WARNING!";
  header [__gl_crippled_gpu > 0] "YOUR GPU IS SEVERELY CRIPPLED";
  header [__gl_crippled_gpu > 0] "BY THE VENDOR!";
  header [__gl_crippled_gpu > 0] "MOST ADVANCED K8VAVOOM GRAPHICAL";
  header [__gl_crippled_gpu > 0] "FEATURES ARE DISABLED";
  header [__gl_crippled_gpu > 0] "-";

  option slider {
    title = "Brightness";
    cvar = brightness;
    step = 1;
    min = 0;
    max = 4;
  }

  option slider {
    title = "Light Fade Factor";
    cvar = r_fade_factor;
    step = 0.1;
    min = 0.1;
    max = 10;
  }

  option slider {
    title = "Sky Brightness Factor";
    cvar = r_sky_bright_factor;
    step = 0.1;
    min = 0;
    max = 4;
  }

  option slider {
    title = "Menu darkness";
    cvar = menu_darkening;
    step = 0.1;
    min = 0;
    max = 1;
    help = "Menu background darkening.";
  }

  option bool {
    title = "Screen Wipe";
    cvar = r_wipe_enabled;
    help = "Use screen wipe?";
  }

  option enum {
    title = "Tonemap";
    cvar = r_tonemap;
    list {
      "Normal",
      "Palette",
    }
    help =
      "Very experimental tonemapping modes.",
      "'Palette' will try to map the resulting image into 256-color palette.",
      "\c[WHITE]WARNING: this feature is VERY EXPERIMENTAL.";
  }

  option bool [__gl_can_hires_tonemap > 0] {
    title = "HiRes Tonemap LUT";
    cvar = gl_tonemap_pal_hires;
    help =
      "Use better palette LUT table for palette tonemap?",
      "This will use 128x128x128 color cube, but will",
      "require 16MB of VRAM instead of 1MB.";
  }


  header "Renderer";

  option render {
    title = "Level renderer";
    cvar = r_level_renderer;
    help =
      "Lightmapped renderer is faster, and produces nice soft light."
      "Stencil lighting produces DooM3-like sharp volumetric light."
      "\cJYou have to restart level/game (or load save) to activate new renderer."
      "\cJOr, you can use 'VidRendererRestart' console command.";
  }


  header "Texture Filtering Options";

  option numeric [gl_max_anisotropy > 1] {
    title = "Anisotropy level";
    cvar = gl_texture_filter_anisotropic;
    step = 1;
    min = 1;
    max = [gl_max_anisotropy];
    help =
      "Setting this to something greater than '1' will tell GPU to peform",
      "some filtering on far-away textures, so they will less likely be turned",
      "into pixel mess.",
      "Please, note that this requires at least 'Nearest Mipmap' texture filtering.",
      "If your GPU supports high values here, you can stop at '8'. Higher values",
      "are slower, and usually won't improve the picture.";
  }

  option enum {
    title = "Texture Filter";
    cvar = gl_texture_filter;
    list {
      "Nearest",
      "Nearest Mipmap",
      "Linear Nearest",
      "Bilinear",
      "Trilinear"
    }
    help = "Wall/floor/ceiling texture filtering mode.";
  }

  option enum {
    title = "Sprites Filter";
    cvar = gl_sprite_filter;
    list {
      "Nearest",
      "Nearest Mipmap",
      "Linear Nearest",
      "Bilinear",
      "Trilinear"
    }
    help = "Sprite texture filtering mode.";
  }

  option enum {
    title = "Models Filter";
    cvar = gl_model_filter;
    list {
      "Nearest",
      "Nearest Mipmap",
      "Linear Nearest",
      "Bilinear",
      "Trilinear"
    }
    help = "3D models texture filtering mode.";
  }


  header "UI Graphics Filtering";

  option bool {
    title = "Font filtering";
    cvar = gl_font_filtering;
    help = "UI font texture filtering (smoothing).";
  }

  option bool {
    title = "Pictures filtering";
    cvar = gl_pic_filtering;
    help = "Backdrop picture filtering (smoothing).";
  }


  header "Brightmap Options";

  option bool {
    title = "Brightmaps";
    cvar = r_brightmaps;
    help =
      "Enable brightmaps."
      "You still should have proper GLDEFS and brightmap textures loaded.";
  }

  option bool {
    title = "Sprite Brightmaps";
    cvar = r_brightmaps_sprite;
    help =
      "If you have brightmaps turned on, you can"
      "turn off brightmaps for sprites here.";
  }

  option bool {
    title = "Additive Brightmaps";
    cvar = r_brightmaps_additive;
    help =
      "If you have brightmaps turned on, brightmaps will be added"
      "to the current ambient light level, otherwise max(ambient, bmap)"
      "will be used.";
  }

  option bool {
    title = "Filter Brightmaps";
    cvar = r_brightmaps_filter;
    help =
      "Perform bilinear filtering on brightmaps."
      "This may look better, as brightmaps are supposed to glow.";
  }


  header "Other Visual Options";

  option bool {
    title = "Smooth particles";
    cvar = gl_smooth_particles;
  }

  option bool {
    title = "Glowing Flats";
    cvar = r_glow_flat;
    help =
      "Enable glowing flats."
      "You still should have proper GLDEFS loaded.";
  }

  /*
  option bool {
    title = "High Resolution Textures";
    cvar = r_hirestex;
    textColor = PURPLE;
    help =
      "This mode is experimental, and may produce broken lighting.",
      "\cGUse with caution, and please, don't report any bugs with this turned on.",
      "\cJRequires full engine restart after change.";
  }
  */


  header "Interpolation Options";

  option bool {
    title = "Movement Interpolation";
    cvar = r_interpolate_thing_movement;
    help = "Interpolate thing/monster movement?";
  }

  option bool {
    title = "Sprite Rotation Interpolation";
    cvar = r_interpolate_thing_angles_sprites;
    help =
      "Interpolate thing/monster rotation for sprites?",
      "",
      "This is separated from interpolation for 3D models,",
      "because some sprites looks funny when interpolated.",
      "Think of Baron of Hell attack, when he instantly",
      "turns to the player: it looks goofy when he raises",
      "his hand, and then turns to the player.",
      ""
      "\cJIf unsure, leave it 'OFF'.";
  }

  option bool {
    title = "3D Model Rotation Interpolation";
    cvar = r_interpolate_thing_angles_models;
    help = "Interpolate thing/monster rotation for 3D models?";
  }


  header "More Options";

  option submenu {
    title = "Texture Precaching Options";
    submenu = "PrecacheVideoOptions";
  }

  option submenu {
    title = "Sprite And Fake Shadow Options";
    submenu = "SpriteVideoOptions";
  }

  option submenu {
    title = "3D Models Options";
    submenu = "AliasModelVideoOptions";
  }

  option submenu {
    title = "Advanced Video Options";
    //smclass = MenuScreenAdvancedVideoOptions;
    submenu = "AdvVideoOptions";
  }

  option submenu {
    title = "Advanced Rendering Options";
    submenu = "AdvRenderOptions";
  }

  option submenu {
    title = "Light Filtering Options";
    submenu = "AdvVideoLightFilterOptions";
  }

  option submenu [__gl_can_bloom > 0] {
    title = "Bloom Options";
    submenu = "PFXBloomOptions";
  }

  option submenu {
    title = "Decal Options";
    submenu = "DecalOptions";
  }

  option submenu [__gl_crippled_gpu == 0] {
    title = "Shadowmap Options";
    submenu = "ShadowMapOptions";
  }
}
