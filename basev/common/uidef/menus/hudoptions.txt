// HUD options menu
menudef HUDOptions {
  //selector = MenuSelector_SmallRight;
  Title = "HUD OPTIONS";


  header "HUD Messages";

  option bool {
    title = "Scale HUD messages";
    cvar = hud_scale_messages;
  }

  option bool {
    title = "Console echo";
    cvar = hud_msg_echo;
  }

  option enum {
    title = "Message Color";
    cvar = hud_font_color;
    list {
      "Brick",
      "Tan",
      "Gray",
      "Green",
      "Brown",
      "Gold",
      "Red",
      "Blue",
      "Orange",
      "White",
      "Yellow",
      "Normal",
      "Black",
      "Light Blue",
      "Cream",
      "Olive",
      "Dark Green",
      "Dark Red",
      "Dark Brown",
      "Purple",
      "Dark Gray"
    }
  }

  option enum {
    title = "Center Message Color";
    cvar = hud_font_color_centered;
    list {
      "Brick",
      "Tan",
      "Gray",
      "Green",
      "Brown",
      "Gold",
      "Red",
      "Blue",
      "Orange",
      "White",
      "Yellow",
      "Normal",
      "Black",
      "Light Blue",
      "Cream",
      "Olive",
      "Dark Green",
      "Dark Red",
      "Dark Brown",
      "Purple",
      "Dark Gray"
    }
  }

  option numeric {
    title = "Notification Timeout";
    cvar = hud_notify_time;
    min = 1;
    max = 15;
    step = 0.5;
  }

  option numeric {
    title = "Centered Notification Timeout";
    cvar = hud_centre_message_time;
    min = 1;
    max = 15;
    step = 0.5;
  }


  header "Crosshair";

  option crosshair {
    title = "Crosshair";
    cvar = crosshair;
  }

  option slider {
    title = "Crosshair Transparency";
    cvar = crosshair_alpha;
    step = 0.1;
    min = 0;
    max = 1;
  }


  header "Service Messages";

  option bool {
    title = "Autosave messages";
    cvar = sv_save_messages;
    help = "Show save/load messages in HUD?";
  }

  option bool {
    title = "Playing Timer";
    cvar = draw_world_timer;
  }

  option bool {
    title = "'PAUSE' text";
    cvar = draw_pause;
  }

  option bool {
    title = "FPS Counter";
    cvar = draw_fps;
  }

  option enum {
    title = "FPS Position";
    cvar = draw_fps_posx;
    list {
      "Left" = -1,
      "Center" = 0,
      "Right" = 1,
    }
  }

  option bool {
    title = "GC Statistics";
    cvar = draw_gc_stats;
  }

  option enum {
    title = "GS Stats Position";
    cvar = draw_gc_stats_posx;
    list {
      "Left" = -1,
      "Center" = 0,
      "Right" = 1,
    }
  }


  header "Health Bar";

  option bool {
    title = "Active";
    cvar = k8HealthBar;
  }

  option bool {
    title = "Only Monsters";
    cvar = k8HealthBarOnlyMonsters;
  }

  option slider {
    title = "Opacity";
    cvar = k8HealthBarAlpha;
    min = 0;
    max = 1;
    step = 0.1;
  }


  header "Status Bar";

  option slider {
    title = "Fullsceen Opacity";
    cvar = r_hud_fullscreen_alpha;
    min = 0;
    max = 1;
    step = 0.1;
  }

  option bool {
    title = "Draw StatusBar";
    cvar = r_statusbar_draw;
    help =
      "You can turn off statusbar if some mod does it's own,"
      "and k8vavoom is not able to detect it.";
  }

  option bool {
    title = "Ammo in Fullscreen";
    cvar = r_hud_draw_fs_ammo;
  }

  option bool {
    title = "Doomguy Face in Fullscreen";
    cvar = r_hud_draw_fs_face;
  }
}
