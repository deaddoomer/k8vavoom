// advanced video options menu
menudef AdvRenderOptions {
  Title = "ADVANCED RENDER OPTIONS";

  header "OpenGL drivers options";

  option bool {
    title = "Z-Fighting Prevention";
    cvar = r_shadowvol_use_pofs;
    help =
      "This option should prevent z-fighting with shadow volumes."
      "But with some OpenGL drivers it breaks shadow volumes completely."
      "If you set renderer to Shadow Volumes, and suddenly the lighting"
      "is glitchy, try to turn this 'OFF'";
  }

  option enum {
    title = "Render Quality";
    cvar = r_fix_tjunctions;
    list {
      "Speed",
      "Quality",
    }
    help =
      "'Quality' setting fixes 'running white dots' on walls,",
      "but is somewhat slow.",
      "",
      "Please, note that lightmapped renderer will still have",
      "those dots all around. This will be fixed later.";
  }


  header "Render Portals Options";

  option bool {
    title = "Allow cameras";
    cvar = r_allow_cameras;
    help = "Allow rendering live cameras?";
  }

  option bool {
    title = "Allow sky portals";
    cvar = r_enable_sky_portals;
    help =
      "Allow rendering sky portals?"
      "Sky portals are used for 'skybox sectors'.";
  }

  option bool {
    title = "Allow horizons";
    cvar = r_allow_horizons;
    help =
      "Allow rendering horizon portals?"
      "\cGPlease note that you have to restart/reload the map after changing this,"
      "\cGor visual glitches will occur.";
  }

  option bool {
    title = "Allow mirrors";
    cvar = r_allow_mirrors;
    help =
      "Allow rendering mirror portals?"
      "Note that portal rendering in k8vavoom is somewhat slow and buggy."
      "\cGPlease note that you have to restart/reload the map after changing this,"
      "\cGor visual glitches will occur.";
  }

  option bool {
    title = "Allow floor/ceiling mirrors";
    cvar = r_allow_floor_mirrors;
    help =
      "Allow rendering floor/ceiling mirror portals?"
      "Note that portal rendering in k8vavoom is somewhat slow and buggy."
      "\cGPlease note that you have to restart/reload the map after changing this,"
      "\cGor visual glitches will occur.";
  }

  option bool /*[__k8vavoom_developer_version > 0]*/ {
    title = "Allow stacked sectors";
    cvar = r_allow_stacked_sectors;
    help =
      "Allow rendering stacked sectors via portals?"
      "Currently this is *VERY* glitchy, so you'd better don't turn this on."
      "\cGPlease note that you have to restart/reload map after changing this,"
      "\cGor visual glitches will occur.";
  }

  option numeric {
    title = "Maximum mirror depth";
    cvar = r_maxmiror_depth;
    step = 1;
    min = 0;
    max = 6;
    help =
      "Maximum allowed mirror depth per frame."
      "Usually has little effect.";
  }

  option numeric [__k8vavoom_developer_version > 0] {
    title = "Maximum portal depth";
    cvar = r_max_portal_depth;
    step = 1;
    min = -1;
    max = 16;
    help =
      "Maximum allowed portal depth."
      "Usually has huge effect on maps with mirrors."
      "If you suddenly see FPS below 30 in some map places,"
      "this is probably due to portals. Try to decrease this, or"
      "turn mirrors off, or turn this off."
      "-1 means 'infinite portal depth'.";
  }


  header "Lighting Options";

  option bool {
    title = "Allow Static Lighting";
    cvar = r_static_lights;
    help = "Allow static lighting with light sources?";
  }

  option numeric {
    title = "Maximum Lights";
    cvar = r_max_lights;
    step = 1;
    min = -1;
    max = 256;
    help =
      "Maximum allowed light sources (-1 means unlimited)."
      "This is hard limit for light sources in one frame.";
  }

  header "Stencil Shadows Options" [__gl_can_shadowvols > 0];

  option bool [__gl_can_shadowvols > 0] {
    title = "Use Scissoring";
    cvar = r_advlight_opt_scissor;
    help =
      "Limit light screen update area by light box projection."
      "There is no reason to turn this off, ever. But if you"
      "want to enjoy a slideshow, you can do it.";
  }

  option bool [__gl_can_shadowvols > 0] {
    title = "Optimise scissor";
    cvar = r_advlight_opt_optimise_scissor;
    help =
      "Optimise light scissor with actual geometry."
      "If lit geometry bounds is less than the actual light scissor,"
      "there is no need to render anything outside of it.";
  }

  option bool [__gl_can_shadowvols > 0] {
    title = "Use Depth Bounding";
    cvar = gl_enable_depth_bounds;
    help =
      "Limit z by the actual light radius, if your GPU can do it."
      "This can buy you some FPS by reducing fill rate.";
  }

  option bool [__gl_can_shadowvols > 0] {
    title = "Smarter Stencil Clearing";
    cvar = gl_smart_dirty_rects;
    help =
      "Use dirty rectangles to decide if we should clear stencil buffer."
      "This can skip some GPU clear calls, but I'm not sure if it worth it.";
  }


  header "Shadow Casting Optimisations" [__k8vavoom_developer_version > 0];

  /* this does nothing at all, but may be implemented again in the future
  option bool [__k8vavoom_developer_version > 0] {
    title = "Shadow Check";
    cvar = r_advlight_opt_trace;
    help =
      "Check if dynamic light can cast shadow."
      "This can speedup rendering (lightmapped too),"
      "so better leave this 'ON'.";
  }
  */

  /* this doesn't work right */
  option bool [__k8vavoom_developer_version > 0] {
    title = "Optimise Shadow Flats";
    cvar = r_shadowvol_optimise_flats;
    help =
      "Some walls and ceilings cannot cast any shadow, but still rendered as occluders.",
      "This option allows to optimise some such cases.",
      "",
      "If you're interested, imagine the lowest floor of a pit. It obviously cannot",
      "shadow anything, but it is still rendered to stencil buffer, wasting bandwidth.",
      "",
      "This option should not produce false positives (I hope), and can win 1-3 FPS on",
      "maps with alot of huge light sources, like outdoor maps, for example.";
  }

  option bool [__k8vavoom_developer_version > 0] {
    title = "Skip Non-Shadow Surfaces";
    cvar = gl_smart_reject_shadows;
    help =
      "Skip some surfaces that cannot possibly cast shadow."
      "This can buy you some FPS with huge lights, but I'm not sure"
      "if i wrote the algo right, so you can turn this off if you'll"
      "see some invalid shadowing.";
  }

  option bool [__k8vavoom_developer_version > 0] {
    title = "Skip Non-Shadow Segs";
    cvar = gl_smart_reject_svol_segs;
    help =
      "Skip some segs that cannot possibly cast shadow."
      "Suboption of common skipping.";
  }

  option bool [__k8vavoom_developer_version > 0] {
    title = "Skip Non-Shadow Flats";
    cvar = gl_smart_reject_svol_flats;
    help =
      "Skip some flats that cannot possibly cast shadow."
      "Suboption of common skipping.";
  }


  header "DEBUG Stencil Shadows Options" [__gl_can_shadowvols > 0];

  option bool [__gl_can_shadowvols > 0] {
    title = "Use quad-clear for stencil";
    cvar = gl_use_stencil_quad_clear;
    help =
      "Clear stencil buffer with rendered quad instead of 'glClear()'?"
      "On most (if not all) GPUS it is faster to use 'glClear()`,"
      "but you can check if this will give you any speedup.";
  }

  option bool [__gl_can_shadowvols > 0] {
    title = "Render Surface Textures";
    textColor = BRICK;
    cvar = gl_dbg_adv_render_surface_textures;
    help = "Turn this off to see ambient lighting without textures.";
  }

  option bool [__gl_can_shadowvols > 0] {
    title = "Render Surface Fog";
    textColor = BRICK;
    cvar = gl_dbg_adv_render_surface_fog;
    help = "Turn this off to disable fog/light darkening.";
  }
}
