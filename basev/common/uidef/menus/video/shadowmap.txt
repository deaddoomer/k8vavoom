menudef ShadowMapOptions {
  Title = "SHADOWMAP OPTIONS";

  option bool {
    title = "Use Shadowmaping";
    cvar = r_shadowmaps;
    help =
      "Use shadowmaps instead of stencil shadows?",
      "",
      "\c[WHITE]WARNING! This is experimental mode! Use on your own risk!",
      "\c[WHITE]Also, do not fine-tune your maps for this mode yet, because",
      "\c[WHITE]lighting calculations can (and will) be changed.";
  }

  option bool {
    title = "Fix Light Distance";
    cvar = r_shadowmap_fix_light_dist;
    help =
      "Turn on to move lights slightly away from surfaces.",
      "Lights which are too close to wall/floor will get visible moire.",
      "This option tells the engine to move light on a safer distance,",
      "if the light is too close to textured surface.",
      "THIS IS EXPERIMENTAL OPTION, and it causes shadow jittering.";
  }

  option bool {
    title = "Flip 2-Sided Walls";
    cvar = r_shadowmap_flip_surfaces;
    help =
      "In Doom, two-sided walls has flipped textures on their sides.",
      "This option tries to render the proper side, so shadows will be",
      "correct for the camera PoV.",
      "Most of the time this works, but you may notice 'shadow flipping'",
      "sometimes. Also, there are some bugs with the algo yet.",
      "Anyway, if in doubt, leave this 'ON'.";
  }


  header "Sprite Shadows";

  option enum {
    title = "Sprite Shadows";
    cvar = r_shadowmap_sprshadows;
    list {
      "None",
      "Non-Rotational",
      "All"
    }
    help =
      "The engine can render shadows from sprites with shadowmaps.",
      "Those shadows are not fully correct (because sprites doesn't",
      "really have proper sides), but it still may look fun.";
  }


  header "Fine Control of Sprite Shadows";

  option bool {
    title = "Monsters";
    cvar = r_shadowmap_spr_monsters;
    help = "Should monsters cast shadows?";
  }

  option bool {
    title = "Corpses";
    cvar = r_shadowmap_spr_corpses;
    help = "Should corpses cast shadows?";
  }

  option bool {
    title = "Missiles";
    cvar = r_shadowmap_spr_missiles;
    help = "Should missiles (projectiles) cast shadows?";
  }

  option bool {
    title = "Pickups";
    cvar = r_shadowmap_spr_pickups;
    help = "Should pickups cast shadows?";
  }

  option bool {
    title = "Decorations";
    cvar = r_shadowmap_spr_decorations;
    help =
      "Should decorations cast shadows?"
      "'Decoration' is any solid thing.";
  }

  option bool {
    title = "Players";
    cvar = r_shadowmap_spr_players;
    help = "Should players cast shadows?";
  }


  header "Force Sprite Shadows";

  option enum {
    title = "Monsters";
    cvar = r_shadowmap_forcesprshadows_monsters;
    list {
      "Never" = -1,
      "Default" = 0,
      "Always" = 1
    }
    help = "Use sprites for monster shadows even if we have a model?";
  }

  option enum {
    title = "Corpses";
    cvar = r_shadowmap_forcesprshadows_corpses;
    list {
      "Never" = -1,
      "Default" = 0,
      "Always" = 1
    }
    help = "Use sprites for corpses even if we have a model?";
  }

  option enum {
    title = "Missiles";
    cvar = r_shadowmap_forcesprshadows_missiles;
    list {
      "Never" = -1,
      "Default" = 0,
      "Always" = 1
    }
    help = "Use sprites for projectiles even if we have a model?";
  }

  option enum {
    title = "Pickups";
    cvar = r_shadowmap_forcesprshadows_pickups;
    list {
      "Never" = -1,
      "Default" = 0,
      "Always" = 1
    }
    help = "Use sprites for pickups even if we have a model?";
  }

  option enum {
    title = "Decorations";
    cvar = r_shadowmap_forcesprshadows_decorations;
    list {
      "Never" = -1,
      "Default" = 0,
      "Always" = 1
    }
    help =
      "Use sprites for decorations even if we have a model?"
      "'Decoration' is any solid thing.";
  }

  option enum {
    title = "Players";
    cvar = r_shadowmap_forcesprshadows_players;
    list {
      "Never" = -1,
      "Default" = 0,
      "Always" = 1
    }
    help = "Use sprites for players even if we have a model?";
  }


  header "Rendering Options";

  option enum {
    title = "Shadowmap Size";
    cvar = gl_shadowmap_size;
    list {
      "128",
      "256",
      "512",
      "1024",
    }
    help =
      "Shadowmap texture size. There is hardly any reason to use texture",
      "bigger than 512x512. Bigger textures not only slowdown rendering,",
      "but also gives harder edges even with bilinear blur.";
  }

  option bool [k8vavoom_developer_version > 0] {
    title = "Shadowmap Precision";
    cvar = gl_shadowmap_precision;
    help =
      "Allow higher shadowmap precision for huge lights?",
      "This may or may not give you less false shadows for hige",
      "(with 1000+ radius) lights.",
      "",
      "\c[WHITE]WARNING! You need to reinit resolution to apply this.";
  }


  header "Quality Options";

  option enum {
    title = "Shadowmap Blur";
    cvar = gl_shadowmap_blur;
    list {
      "None",
      "Bilinear",
      "Bilinear, Low Quality",
      "Nearest/4",
      "Nearest/8",
      "Nearest/8, Low Quality",
      "Nearest/16 (Very Slow)",
    }
    help =
      "You can blur shadows a little. Usually bilinear blur looks best.",
      "Please, note that more samples will cause non-linear slowdown.",
      "Also, there is no reason to go beyond bilinear.";
  }

  header "Debug Options" [k8vavoom_developer_version > 0];

  option bool [k8vavoom_developer_version > 0] {
    title = "Show Latest Cubemap";
    cvar = dbg_shadowmaps;
    help =
      "Draw latest cubemap texture?",
      "This won't give you anything interesting to look into.";
  }
}
