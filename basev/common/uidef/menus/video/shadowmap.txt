menudef ShadowMapOptions {
  Title = "SHADOWMAP OPTIONS";

  option bool {
    title = "Use Shadowmaping";
    cvar = r_shadowmaps;
    help =
      "Use shadowmaps instead of stencil shadows?",
      "",
      "\c[WHITE]WARNING! This is experimental mode! Use on your own risk!",
      "\c[WHITE]Also, do not fine-tune your maps for this mode yet, because",
      "\c[WHITE]lighting calculations can (and will) be changed.";
  }

  option bool {
    title = "Fix Light Distance";
    cvar = r_shadowmap_fix_light_dist;
    help =
      "Turn on to move lights slightly away from surfaces.",
      "Lights that are too close to wall/floor will get visible moire.",
      "This option tells the engine to move light on a safer distance,",
      "if the light is too close to textured surface.";
  }


  header "Sprite Shadows";

  option enum {
    title = "Sprite Shadows";
    cvar = r_shadowmap_sprshadows;
    list {
      "None",
      "Non-Rotational",
      "All"
    }
    help =
      "The engine can render shadows from sprites with shadowmaps.",
      "Those shadows are not fully correct (because sprites doesn't",
      "really have proper sides), but it still may look fun.";
  }

  option bool {
    title = "Player Shadow";
    cvar = r_shadowmap_sprshadows_player;
    help =
      "If you turned on sprite shadows, you can enable/disable rendering",
      "player shadow. Most of the time player shadow is only distracting.";
  }


  header "Rendering Options";

  option enum {
    title = "Shadowmap Size";
    cvar = gl_shadowmap_size;
    list {
      "128",
      "256",
      "512",
      "1024",
    }
    help =
      "Shadowmap texture size. There is hardly any reason to use texture",
      "bigger than 512x512. Also, with 128x128 textures you may have more",
      "visible moire pattern.";
  }

  option enum [__k8vavoom_developer_version > 0] {
    title = "Shadowmap Precision";
    cvar = gl_shadowmap_precision;
    list {
      "16 bit",
      "32 bit",
    }
    help =
      "Shadowmap texture precision. 32 bit will not give you anything",
      "except a slowdown",
      "",
      "\c[WHITE]WARNING! You need to reinit resolution to apply this.";
  }


  header "Quality Options";

  option bool [__k8vavoom_developer_version > 0] {
    title = "Filter shadowmap";
    cvar = gl_dev_shadowmap_filter;
    help =
      "Apply bilinear filtering to shadowmap textures?",
      "This usually gives you slightly bigger, but better,",
      "shadows due to smaller shadowmap bias.",
      "",
      "Note that while i think it works, it may give you banding",
      "or moire for very big lights, or some other corner cases.",
      "",
      "Still, i think that you'd better leave this 'ON'.";
  }

  option enum {
    title = "Faster Checks";
    cvar = gl_shadowmap_faster_check;
    list {
      "Normal",
      "Faster",
      "Shitty Fast",
      "Super-Shitty",
    }
    help =
      "Use slightly faster, but less precise shadowmap texel checks?",
      "This can lower shadows quality.";
  }

  option enum {
    title = "Shadowmap Blur";
    cvar = gl_shadowmap_blur;
    list {
      "None",
      "4 Samples, Bilinear",
      "4 Samples, ShittyBi",
      "4 Samples",
      "8 Samples",
      "8 Samples, Fast",
      "16 Samples",
      "16 Samples, Fast",
    }
    help =
      "You can blur shadows a little. Usually small blur looks better.",
      "Please, note that more samples will cause non-linear slowdown.",
      "",
      "If you want to use 16-sample blur, it is recommended to turn on",
      "shadowmap filtering too. This should not hurt performance, but",
      "the shadows will look slightly better.",
      "",
      "Faster versions may or may not be actually faster, depending on",
      "your GPU. Image quality varies alot too.";
  }

  header "Debug Options" [__k8vavoom_developer_version > 0];

  option bool [__k8vavoom_developer_version > 0] {
    title = "Show Latest Cubemap";
    cvar = dbg_shadowmaps;
    help =
      "Draw latest cubemap texture?",
      "This won't give you anything interesting to look into.";
  }
}
