// texture precaching options menu
menudef PrecacheVideoOptions {
  Title = "TEXTURE PRECACHE OPTIONS";

  //header "Precaching Options";

  option bool /*[k8vavoom_developer_version > 0]*/ {
    title = "Disable all texture precaching";
    textColor = BRICK;
    cvar = r_dbg_disable_all_precaching;
    help =
      "Debug option to speed up map testing, and avoid messing with other precache options.",
      "NON-PERSISTENT!";
  }

  option bool {
    title = "Precache 3D Models";
    cvar = r_precache_models;
    help =
      "Precache 3D models (upload them to GPU) on level loading?"
      "This has relatively low impact on most level loading times,"
      "and the game will stutter less on entering new areas.";
  }

  option bool {
    title = "Precache Level Textures";
    cvar = r_precache_textures;
    help =
      "Precache level textures (upload them to GPU) on level loading?"
      "This has relatively low impact on most level loading times, and"
      "the game will stutter less on entering new areas.";
  }

  option bool {
    title = "Precache Sprite Textures";
    cvar = r_precache_sprite_textures;
    help =
      "Precache most used sprite textures (upload them to GPU) on level loading?",
      "This scans spawned level things, and precaches most of their sprites.",
      "Usually this has a medium impact on GPU and loading times.",
      "Turning this 'ON' may help if the game is 'stuttering' upon seeing new monster.",
      "\cJWARNING: DO NOT turn this on for huge gameplay mod with a lot of new monsters/weapons!";
  }

  option bool /*[k8vavoom_developer_version > 0]*/ {
    title = "Precache PSprite Weapon Textures";
    cvar = r_precache_weapon_sprite_textures;
    help =
      "Precache weapon psprite textures (upload them to GPU) on level loading?",
      "Won't do anything if sprite precaching is turned off.";
  }

  option bool /*[k8vavoom_developer_version > 0]*/ {
    title = "Precache Ammo Textures";
    cvar = r_precache_ammo_sprite_textures;
    help =
      "Precache ammo sprite textures (upload them to GPU) on level loading?",
      "Won't do anything if sprite precaching is turned off.";
  }

  option bool /*[k8vavoom_developer_version > 0]*/ {
    title = "Precache Player Textures";
    cvar = r_precache_player_sprite_textures;
    help =
      "Precache player sprite textures (upload them to GPU) on level loading?",
      "Won't do anything if sprite precaching is turned off.";
  }

  option bool {
    title = "Precache *ALL* Sprite Textures";
    cvar = r_precache_all_sprite_textures;
    help =
      "Precache *ALL* sprite textures (upload them to GPU) on level loading?"
      "This has *HUGE* impact on loading times, and requires A *LOT* of GPU memory."
      "Better leave this 'OFF'.";
  }

  option slider {
    title = "Maximum Sprite Textures To Precache";
    cvar = r_precache_max_sprites;
    step = 16;
    min = 0;
    max = 32768;
    help =
      "Some mods have enormous number of sprites. You can limit number of"
      "sprite textures the engine will try to precache."
      "Zero means 'no limits'.";
  }

  option bool {
    title = "Reset Level Texture Cache";
    cvar = r_reupload_level_textures;
    help =
      "If this option is turned on, the engine will reset map"
      "texture cache each time new map is loaded.";
  }

  option bool {
    title = "Reupload Textures On Map Change";
    cvar = r_reupload_textures;
    help =
      "If this option is turned on, the engine will reupload all cached textures"
      "each time new map is loaded. Turn this on only if you turned off texture"
      "precaching, to release GPU memory.";
  }


  header "Texture Releasing";

  option enum {
    title = "RAM Texture";
    cvar = gl_release_ram_textures_mode;
    list {
      "Never",
      "Map Unload",
      "Immediate",
    }
    help =
      "All loaded and decoded texture images are kept in RAM, to allow",
      "faster uploading to GPU.",
      "If you're playing some PWADs with a lot of textures, or using some",
      "hires texture pack, or just want to have more free RAM, you can",
      "tell the engine when it should release RAM images.";
  }

  option enum {
    title = "RAM Sprite Texture";
    cvar = gl_release_ram_textures_mode_sprite;
    list {
      "Never",
      "Map Unload",
      "Immediate",
    }
    help =
      "All loaded and decoded sprite texture images are kept in RAM, to allow",
      "faster uploading to GPU.",
      "If you're playing some mods with a lot of texture translations",
      "you can tell the engine to keep sprite textures (because they are required",
      "to perform translations). Otherwise, there is no need to keep them in RAM.";
  }
}
