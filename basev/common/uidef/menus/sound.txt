// sound options menu
menudef SoundOptions {
  //selector = MenuSelector_SmallRight;
  Title = "SOUND SETTINGS";

  /*k8: nobody knows how to use this anyway
  option bool {
    title = "External Music Remap";
    cvar = snd_external_music;
    help = "Allow music remapping with external xml file?";
  }
  */

  option enum {
    title = "MIDI Decoder";
    cvar = snd_midi_player;
    list {
      "None",
      "FluidSynth",
      "Timidity",
      "NukedOPL",
    }
  }

  option enum {
    title = "Module Decoder";
    cvar = snd_module_player;
    list {
      "None",
      "XMP Lite",
    }
  }

  option enum {
    title = "SF2 Soundfont File";
    cvar = snd_sf2_file_selector; // this is special cvar!
    help =
      "You can select SF2 soundfont from the list of soundfonts here.",
      "Changing soundfont will also save current FluidSynth settings,",
      "and load previous settings for the given soundfont.",
      "",
      "Your new sound will be used on the next music change.";
  }


  header ""; // empty line

  option submenu {
    title = "FluidSynth Options";
    submenu = "FluidSynthOptions";
  }

  option submenu {
    title = "XMP Lite Options";
    submenu = "XMPLiteOptions";
  }

  option submenu {
    title = "NukedOPL Options";
    submenu = "NukedOPLOptions";
  }


  header ""; // empty line

  option soundresampler {
    title = "Sound Resampler";
    cvar = snd_resampler;
    //list = sound_resamplers;
    help =
      "You can select sound resampler here.",
      "Better (but slower) resamplers are usually down the list.",
      "That is, you can trade CPU time for sound quality, or vice versa.";
  }

  option slider {
    title = "Master Volume";
    cvar = snd_master_volume;
    step = 0.1;
    min = 0;
    max = 1;
  }

  option slider {
    title = "Music Volume";
    cvar = snd_music_volume;
    step = 0.1;
    min = 0;
    max = 1;
  }

  option slider {
    title = "Sound Volume";
    cvar = snd_sfx_volume;
    step = 0.1;
    min = 0;
    max = 1;
  }

  option numeric {
    title = "Sound Channels";
    cvar = snd_channels;
    step = 2;
    min = 8;
    max = 64;
  }

  option numeric {
    title = "Max Same Sounds";
    cvar = snd_max_same_sounds;
    step = 1;
    min = -1;
    max = 16;
    help =
      "Maxumum number of same sound, playing simultaneously."
      "This is used to prevent ear-ripping when a lot of"
      "monsters of the same type are active."
      ""
      "Set to 0 to use sounddef default (4 if not specified in SNDDEF),"
      "and -1 means 'no limits at all'.";
  }

  // this doesn't work yet
  //CreateOnOffCvar("Swap stereo", 'snd_swap_stereo');


  header ""; // empty line

  option bool {
    title = "Random Pitch";
    cvar = snd_random_pitch_enabled;
    help =
      "If you don't like to move sliders, you can enable/disable",
      "random pitching with this toggle.";
  }

  option slider {
    title = "Default Random Pitch";
    cvar = snd_random_pitch_default;
    step = 0.03;
    min = 0;
    max = 1;
    help =
      "Setting this to non-zero value will apply random pitch to",
      "sounds that have no specified random pitch range.",
      "Value around 0.27 should be fine.";
  }

  option slider {
    title = "Random Pitch Boost";
    cvar = snd_random_pitch_boost;
    step = 0.1;
    min = 0;
    max = 4;
    help = "This will amplify random pitching (0 will disable it completely).";
  }


  header "Experimental Options";

  option bool {
    title = "Load Music In Background";
    cvar = snd_bgloading_music;
    help = "Load music in background thread? This may reduce stuttering.";
  }

  option bool {
    title = "Load Sounds In Background";
    cvar = snd_bgloading_sfx;
    help = "Load sound in background thread? This may reduce stuttering.";
  }


  header "";

  option concmd {
    title = "Restart Current Music";
    concmd = "music restart";
  }

  option concmd {
    title = "Stop Music";
    concmd = "music stop";
  }
}
