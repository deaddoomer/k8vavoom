ACTOR BDW_ShotgunAmmo : Ammo {
  Inventory.Amount 0
  Inventory.MaxAmount 8
  Ammo.BackpackAmount 0
  Ammo.BackpackMaxAmount 8
  Inventory.Icon "SHTCA0"
}


ACTOR BDW_ShotgunShell : Ammo Replaces Shell {
  //Inventory.PickupMessage "$GOTSHELLS"
  Inventory.PickupMessage "Picked up 4 shotgun shells."
  Inventory.Amount 4
  Inventory.MaxAmount 50
  Ammo.BackpackAmount 8
  Ammo.BackpackMaxAmount 100
  Inventory.Icon "SHELA0"
  States {
    Spawn:
      SHEL A -1
      Stop
  }
}


ACTOR BDW_ShotgunShellBox : BDW_ShotgunShell Replaces ShellBox {
  //Inventory.PickupMessage "$GOTSHELLBOX"
  Inventory.PickupMessage "Picked up a box of shotgun shells."
  Inventory.Amount 20
  States {
    Spawn:
      SBOX A -1
      Stop
  }
}


// heretic
Actor (optional) K8BDW_CrossbowAmmo : BDW_ShotgunShell Replaces CrossbowAmmo {}
Actor (optional) K8BDW_CrossbowHefty : BDW_ShotgunShellBox Replaces CrossbowHefty {}


ACTOR BDW_Shotgun : Shotgun Replaces Shotgun {
  Game Doom
  SpawnID 27
  Weapon.SlotNumber 3
  Weapon.SlotPriority 0.99999 // goes last, so it will be selected before ssg
  Weapon.SelectionOrder 350 // it is 400 for ssg
  Weapon.AmmoUse1 0
  Weapon.AmmoGive1 4
  Weapon.AmmoUse2 0
  Weapon.AmmoGive2 0
  Weapon.AmmoType1 "BDW_ShotgunShell"
  Weapon.AmmoType2 "BDW_ShotgunAmmo"
  //Inventory.PickupMessage "$GOTSHOTGUN"
  Inventory.PickupMessage "You got the shotgun!"
  Inventory.PickupSound "weapons/bdw_shotgun/sgpump"
  //Obituary "$OB_MPSHOTGUN"
  Obituary "%o chewed on %k's boomstick."
  AttackSound "None"
  +WEAPON.NOALERT
  +WEAPON.NOAUTOAIM
  +WEAPON.NOAUTOFIRE
  +FORCEXYBILLBOARD
  +WEAPON.NO_AUTO_SWITCH
  Scale 0.9
  Weapon.BotCombatDist 256
  -Weapon.Wimpy_Weapon
  +Weapon.HitscanWeapon

  var int user_ShotgunWasEmpty;

  States {
    // must come before "Ready"
    ReadyForceInstant:
      TNT1 A 0
      TNT1 A 0 A_SetUserVar("user_ShotgunWasEmpty", 1-clamp(CountInv("BDW_ShotgunAmmo"), 0, 1))
      Goto OkToFire

    Ready:
      TNT1 A 0
      TNT1 A 0 A_SetUserVar("user_ShotgunWasEmpty", 1-clamp(CountInv("BDW_ShotgunAmmo"), 0, 1))
      SHSS A 1 A_PlaySound("weapons/bdw_shotgun/sgpump", "Weapon")
      SHSS BCD 1
      Goto ShakeRight

    Spawn:
      SHTC A -1
      Stop

    OkToFire:
      SHTG A 1 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWREFIRE)
      Loop

    ShakeLeft:
      SHTI GH 2 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWREFIRE)
      SHTI IJK 2 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWREFIRE)

    ShakeRight:
      SHTI ABC 2 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWREFIRE)
      SHTI DEF 2 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWREFIRE)
      SHTI GHK 2 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWREFIRE)
      SHTI ABEF 2 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWREFIRE)
      Goto OkToFire

    Deselect:
      SHSS DCBA 1
      TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
      TNT1 A 1
      Wait

    Select:
      TNT1 AAAAAAAAAAAAAAAAAAAAAAA 0 A_Raise
      Goto Ready

    Fire:
      TNT1 A 0 A_JumpIfInventory("BDW_ShotgunAmmo", 1, "CanPerformFire")
      Goto Reload

    CanPerformFire:
      TNT1 A 0 A_JumpIf(user_ShotgunWasEmpty, "Pump2")
      TNT1 A 0 A_AlertMonsters
      TNT1 A 0 A_PlaySoundEx("weapons/bdw_shotgun/sgfire", "Weapon")
      TNT1 A 0 A_SpawnItemEx("BDW_PlayerMuzzle", 30, 5, 30)
      // summon tracer
      TNT1 A 0 A_JumpIfCVarFalse("K8BDWOpt_ShotgunTracers", "SkipTracer")
      TNT1 A 0 A_JumpIfCVarFalse("r_models", "SkipTracer") // no models -- die immediately
      TNT1 AAAAA 0 A_FireCustomMissile("BDW_Tracer", random(-2, 2), 0, 0, clamp(GetCVar("gm_fix_attack_offset"), 0, 1)*4, FPF_NOAUTOAIM, random(-2, 2))
    SkipTracer:
      TNT1 A 0 A_TakeInventory("BDW_ShotgunAmmo", 1)
      SHTG A 0 A_FireBullets(3.6, 3.6, 9, 7, "BDW_ShotgunPuff")
      TNT1 A 0 A_SetPitch(-8.0+pitch)
      SHTF B 1 BRIGHT
      SHTF C 1 A_SetPitch(+1.0+pitch)
      SHTF DE 1 A_SetPitch(+1.0+pitch)
      SHTG A 1 A_SetPitch(+3.0+pitch)
      SHTG AA 1 A_SetPitch(+1.0+pitch)
      SHTG BCDEFG 1
      TNT1 A 0
        {
          if (GetCVar("K8BDWOpt_DropEmptyShells")) {
            A_FireCustomMissile("BDW_ShotCaseSpawn", 0, 0, -4, -4);
          }
        }
      Goto PumpCommon

    Pump2:
      SHTG FG 1

    PumpCommon:
      SHTG H 1 A_PlaySoundEx("weapons/bdw_shotgun/sgpump", "Weapon")
      SHTG IJ 1
      SHTG KL 1
      SHTG KJIH 1
      TNT1 A 0 A_SetUserVar("user_ShotgunWasEmpty", 0)
      SHTG A 1 Offset(10, 36) // <-- New frames
      SHTG A 1 Offset(9, 40) //
      SHTG A 1 Offset(4, 40) //
      SHTG A 1 Offset(0, 32) //
      SHTG A 0 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWREFIRE) //A_Refire
      Goto ShakeLeft

    Reload:
      TNT1 A 0 A_SetUserVar("user_ShotgunWasEmpty", 0)
      TNT1 A 0 A_JumpIfInventory("BDW_ShotgunAmmo", 8, "OkToFire")
      SHTG A 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH) // reset "fire" button
      TNT1 A 0 A_JumpIfInventory("BDW_ShotgunAmmo", 1, "ReloadNormally")
      TNT1 A 0 A_SetUserVar("user_ShotgunWasEmpty", 1)

    ReloadNormally:
      TNT1 A 0 A_JumpIfInventory("BDW_ShotgunShell", 1, "ReloadNormallyHasShells")
      // no ammo
      SHTG A 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
      "----" A 0 A_PlaySoundEx("weapons/bdw_rifle/empty", "Weapon")
      SHTG A 4 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
      Goto OkToFire

    ReloadNormallyHasShells:
      SHTG B 1
      SHTG CDE 1

    ReloadMainLoop:
      TNT1 A 0 A_JumpIfInventory("BDW_ShotgunShell", 1, "ReloadDoOneStep")

    ReloadComplete:
      // no more shells, or reload complete
      TNT1 A 0 A_JumpIf(user_ShotgunWasEmpty, "Pump2")
      SHTG FEDCB 1 //A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
      SHTG A 1 //A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
      Goto ShakeLeft

    ReloadDoOneStep:
      TNT1 A 0 A_JumpIfInventory("BDW_ShotgunAmmo", 8, "ReloadComplete")
      TNT1 A 0 {
        A_GiveInventory("BDW_ShotgunAmmo", 1);
        A_TakeInventory("BDW_ShotgunShell", 1);
      }
      SSHR ABC 1
      SSHR D 1 A_PlaySound("weapons/bdw_shotgun/shellin", "Weapon")
      SSHR EFG 1
      SSHR A 2 A_WeaponReady(/*WRF_ALLOWRELOAD|*/WRF_ALLOWREFIRE) //A_Refire // so we can abort reloading and start firing
      Goto ReloadMainLoop
  }
}


Actor (optional) K8BDW_CrossbowSG : BDW_Shotgun Replaces Crossbow {}
Actor (optional) K8BDW_CrossbowPoweredSG : BDW_Shotgun Replaces CrossbowPowered {}
