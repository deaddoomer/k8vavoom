//Actor BDW_RifleSpread : Inventory { inventory.maxamount 6 }


// this is loaded ammo, you will never pick it up, only get from clips
Actor BDW_RifleAmmo : Ammo {
  Inventory.Amount 0
  Inventory.MaxAmount 31
  Ammo.BackpackAmount 0
  Ammo.BackpackMaxAmount 31
  Inventory.Icon "RIFLA0"
}


Actor BDW_RifleClip : Ammo Replaces Clip {
  Game Doom
  SpawnID 11
  Inventory.PickupMessage "Picked up a Magazine."
  Inventory.Amount 10
  Inventory.MaxAmount 300
  Ammo.BackpackAmount 30
  Ammo.BackpackMaxAmount 600
  Inventory.Icon "CLIPA0"
  States {
    Spawn:
      CLIP A -1
      Stop
  }
}


Actor BDW_RifleClipBox : BDW_RifleClip Replaces Clipbox {
  Game Doom
  SpawnID 139
  Inventory.PickupMessage "Picked up a box of rifle ammunition."
  Inventory.Amount 100
  States {
    Spawn:
      AMMO A -1
      Stop
  }
}


// heretic
Actor (optional) K8BDW_GoldWandAmmo : BDW_RifleClip Replaces GoldWandAmmo {}
Actor (optional) K8DBW_GoldWandHefty : BDW_RifleClipBox Replaces GoldWandHefty {}


Actor BDW_Rifle : Weapon Replaces Chaingun {
  Weapon.SlotNumber 2
  Weapon.AmmoUse1 0
  Weapon.AmmoGive1 10
  Weapon.AmmoUse2 0
  Weapon.AmmoGive2 0
  YScale 0.6
  XScale 0.8
  Weapon.SelectionOrder 4500
  Weapon.AmmoType1 "BDW_RifleClip"
  Weapon.AmmoType2 "BDW_RifleAmmo"
  Obituary "%o was shot down by %k's assault rifle."
  AttackSound "None"
  Inventory.PickupSound "weapons/bdw_rifle/clipin"
  Inventory.Pickupmessage "You got the Assault Rifle!"
  +WEAPON.NOAUTOAIM
  +WEAPON.NOALERT
  +FORCEXYBILLBOARD
  Scale 0.8
  Weapon.BotCombatDist 256
  -Weapon.Wimpy_Weapon
  +Weapon.HitscanWeapon

  var int user_HadAmmo; // this tells if we should drop empty clip
  var int user_spread; // from 0 to 6
  var int user_bulletDamage; // temporary
  var int user_lowPauseCount;

  States {
    Spawn:
      RIFL A -1
      Stop

    PickUp:
      TNT1 A 0
      Stop

    Ready:
      TNT1 A 0 A_PlaySoundEx("weapons/bdw_rifle/clipin", "Weapon")
      RIF4 D 1 Offset(-10, 46)
      RIF4 D 1 Offset(-5, 38)
      RIF4 D 1 Offset(-2, 34)

    ReadyAfterRefire:
      TNT1 A 0 A_SetUserVar("user_HadAmmo", clamp(CountInv("BDW_RifleAmmo"), 0, 1))
      //"----" A 0 A_k8ConLog(va("01: had ammo: %s (%s)", user_HadAmmo, CountInv("BDW_RifleAmmo")))

    ReadyLoop:
      //This is a swanky unnecessary bit of code to power the indicator on top of the gun - select our sprite name based on the amount of ammo that's loaded. Same happens in the Fire state.
      "----" A 0 A_SetUserVar("user_spread", 0)
      RIF1 D 0 A_JumpIfInventory("BDW_RifleAmmo", 21, "ReadyLoop2")
      RIF2 D 0 A_JumpIfInventory("BDW_RifleAmmo", 11, "ReadyLoop2")
      RIF3 D 0 A_JumpIfInventory("BDW_RifleAmmo", 8, "ReadyLoop2")
      RIF3 D 0 A_JumpIfInventory("BDW_RifleAmmo", 1, "ReadyLoop2Snd")
      RIF4 D 0
    ReadyLoop2:
      "----" D 1 A_WeaponReady(WRF_ALLOWRELOAD)
      Goto ReadyLoop

    ReadyLoop2Snd:
      "----" D 0 {
        //A_k8ConLog(va("000: %s", user_lowPauseCount));
        user_lowPauseCount = user_lowPauseCount-1;
        if (user_lowPauseCount < 1) {
          //A_k8ConLog("*** 001");
          if (GetCVarB("K8BDWOpt_RifleWarnLowAmmo")) {
            A_PlaySound("weapons/bdw_rifle/lowammo", CHAN_VOICE, 1.0);
          }
          if (CountInv("BDW_RifleAmmo") > 4) user_lowPauseCount = 40;
          if (CountInv("BDW_RifleAmmo") > 2) user_lowPauseCount = 30;
          else user_lowPauseCount = 20;
        }
      }
      Goto ReadyLoop2

    Deselect:
      RIF4 B 1 Offset(-2, 34)
      RIF4 B 1 Offset(-5, 38)
      RIF4 B 1 Offset(-10, 46)
      TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
      TNT1 A 1
      Wait

    Select:
      TNT1 A 0 A_Raise(60)
      Goto Ready

    //AltFire:
    //  Goto Reload

    Fire:
      //These ones require +1 compared to the ready ones, so that the player sees the indicator just before firing
      RIF1 D 0 A_JumpIfInventory("BDW_RifleAmmo", 22, "FireAnimate")
      RIF2 D 0 A_JumpIfInventory("BDW_RifleAmmo", 12, "FireAnimate")
      RIF3 D 0 A_JumpIfInventory("BDW_RifleAmmo", 2, "FireAnimate")
      RIF4 D 0

    FireAnimate:
      "----" A 0 A_JumpIfInventory("BDW_RifleAmmo", 1, "FireDoIt")
      Goto Reload

    FireDoIt:
      "----" A 0
        {
          if (user_spread >= 3) A_PlaySound("weapons/bdw_rifle/shotfast");
          else A_PlaySound("weapons/bdw_rifle/shot");
        }
      "####" A 1 BRIGHT A_AlertMonsters
      "----" A 0 A_SpawnItemEx("BDW_PlayerMuzzle", 30, 5, 30)
      // here we can fire tracer: A_FireCustomMissile("BDW_Tracer", 0, 0, 0, -12, 0, random(-1,1)) -2,-2; -4,-4
      "----" B 0 A_JumpIfCVarFalse("K8BDWOpt_RifleTracers", "SkipTracer")
      "----" B 0 A_JumpIfCVarFalse("r_models", "SkipTracer") // no models -- die immediately
      "----" B 0 A_FireCustomMissile("BDW_Tracer", random(-1, 1), 0, 0, clamp(GetCVar("gm_fix_attack_offset"), 0, 1)*4, FPF_NOAUTOAIM, random(-1, 1))
    SkipTracer:
      "####" A 1 BRIGHT // not B, i don't like that frame
        {
          // two last bullets does more damage (but only in non-cheating mode)
          // base damage is 9
          if (GetCVarB("K8BDWOpt_RifleCheatReload")) {
            user_bulletDamage = 9;
          } else if (user_spread >= 4) {
                 if (CountInv("BDW_RifleAmmo") == 1) user_bulletDamage = 22;
            else if (CountInv("BDW_RifleAmmo") == 2) user_bulletDamage = 13;
            else user_bulletDamage = 9;
          } else if (user_spread >= 4) {
            if (CountInv("BDW_RifleAmmo") <= 2) user_bulletDamage = 18;
          } else {
            user_bulletDamage = 9;
          }
          //A_k8ConLog(va("damage: %d", user_bulletDamage));
               if (user_spread >= 5) A_FireBullets(7, 7, 1, user_bulletDamage, "BDW_HitPuff"); // high
          else if (user_spread >= 3) A_FireBullets(4, 4, 1, user_bulletDamage, "BDW_HitPuff"); // mid
          else A_FireBullets(2, 2, 1, user_bulletDamage, "BDW_HitPuff"); // normal
        }
      "----" B 0 BRIGHT
        {
               if (user_spread >= 5) A_SetPitch(-0.7+pitch);
          else if (user_spread >= 3) A_SetPitch(-1.0+pitch);
          else A_SetPitch(-1.3+pitch);
        }
      "----" A 0 BRIGHT A_TakeInventory("BDW_RifleAmmo", 1)
      "####" A 1 BRIGHT // not B, i don't like that frame
        {
               if (user_spread >= 5) A_SetPitch(+0.4+pitch);
          else if (user_spread >= 3) A_SetPitch(+0.5+pitch);
          else A_SetPitch(+0.6+pitch);
        }
      "####" C 1 Offset(0, 33)
        {
          if (GetCVar("K8BDWOpt_DropEmptyCasing")) {
            A_FireCustomMissile("BDW_RifleCaseSpawn", 5, 0, 6, -6);
          }
        }
        //"####" C 1 Offset(0, 33) A_SpawnItemEx("BDW_RifleCaseSpawn", 17, 3, 35, 0, random(3,6), random(3,7))
      "####" D 1
        {
               if (user_spread >= 5) A_SetPitch(+0.3+pitch);
          else if (user_spread >= 3) A_SetPitch(+0.4+pitch);
          else A_SetPitch(+0.5+pitch);
          // more spread
          A_SetUserVar("user_spread", min(6, user_spread+1));
        }
      "----" A 1 A_Refire // was 1
      //"----" A 4 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE|WRF_NOSWITCH)
      //"----" A 5 A_WeaponReady(WRF_NOBOB|WRF_ALLOWRELOAD)
      Goto ReadyLoop

    Reload:
      "----" A 0 A_JumpIfInventory("BDW_RifleAmmo", 31, "ReadyLoop")
      "----" A 0 A_JumpIfInventory("BDW_RifleClip", 1, "ReloadDoIt")
      // no ammo
      RIF4 D 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
      "----" A 0 A_PlaySoundEx("weapons/bdw_rifle/empty", "Weapon")
      RIF4 D 4 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
      Goto ReadyLoop

    ReloadDoIt:
      "----" A 0 A_SetUserVar("user_spread", 0)
      "----" A 0 A_PlaySoundEx("weapons/bdw_rifle/reload", "Weapon")
      RIFR ABCDE 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
      "----" A 0 A_JumpIf(user_HadAmmo == 0, "ReloadSkipEmptyClip")
      RIFR F 1
        {
          if (GetCVar("K8BDWOpt_DropEmptyMagazine")) {
            A_FireCustomMissile("BDW_EmptyClipSpawn", -5, 0, 8, -4);
          }
        }
      //RIFR F 1 A_SpawnItemEx("BDW_EmptyClipSpawn", 17, 2, 35, random(6,6), random(3,3), 4)
    ReloadSkipEmptyClip:
      RIFR G 8
      RIFR HIKL 1
      RIFR M 3
      RIFR NOPQRST 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
      // if reload in not cheating, drop unused ammo
      "----" A 0 A_JumpIfCVarTrue("K8BDWOpt_RifleCheatReload", "ReloadMainLoop")
      // drop all unused ammo, as we are loading a new clip
      "----" A 0 A_TakeInventory("BDW_RifleAmmo", 31)
      // reload loop
    ReloadMainLoop:
      "----" A 0 A_JumpIfInventory("BDW_RifleAmmo", 31, "ReadyAfterRefire")
      "----" A 0 A_JumpIfInventory("BDW_RifleClip", 1, "ReloadMainLoopOk")
      // no more ammo
      RIFG A 1 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH)
      Goto ReadyAfterRefire
    ReloadMainLoopOk:
      "----" A 0
        {
          A_TakeInventory("BDW_RifleClip", 1);
          A_GiveInventory("BDW_RifleAmmo", 1);
        }
      Goto ReloadMainLoop
  }
}


Actor (optional) K8BDW_GoldWandRifle : BDW_Rifle Replaces GoldWand {}
Actor (optional) K8DBW_GoldWandPoweredRifle : BDW_Rifle Replaces GoldWandPowered {}
