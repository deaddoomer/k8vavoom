//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2023 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
#ifdef VV_LDEF_USE_OLD_TRANSLATION_CODE
  // line special, action, arg1, arg2, arg3, arg4, arg5, SPAC, repeat, monstercan, repeatable
  // special argN values:
  //     -1: set to the arg1 of the original line
  //   -666: retain the corresponding lineN
  //  other: set to this value

  // 0
  SetLineTrans(1, LNSPEC_DoorRaise, 0, 16, 150, 0, 0, SPAC_Use, true, true);
  SetLineTrans(2, LNSPEC_DoorOpen, -1, 16, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(3, LNSPEC_DoorClose, -1, 16, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(4, LNSPEC_DoorRaise, -1, 16, 150, 0, 0, SPAC_Cross, false, true);
  SetLineTrans(5, LNSPEC_FloorRaiseToLowestCeiling, -1, 8, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(6, LNSPEC_CeilingCrushAndRaiseA, -1, 16, 16, 10, 0, SPAC_Cross, false);
  SetLineTrans(7, LNSPEC_StairsBuildUpDoom, -1, 2, 8, 0, 0, SPAC_Use, false);
  SetLineTrans(8, LNSPEC_StairsBuildUpDoom, -1, 2, 8, 0, 0, SPAC_Cross, false);
  SetLineTrans(9, LNSPEC_FloorDonut, -1, 4, 4, 0, 0, SPAC_Use, false);

  SetLineTrans(10, LNSPEC_PlatDownWaitUpStayLip, -1, 32, 105, 0, 0, SPAC_Cross, false, true);
  SetLineTrans(11, LNSPEC_ExitNormal, /*-1*/0, 0, 0, 0, 0, SPAC_Use, false); // -1 is bug
  SetLineTrans(12, LNSPEC_LightMaxNeighbor, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(13, LNSPEC_LightChangeToValue, -1, 255, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(14, LNSPEC_FloorRaiseByValueChangeTex, -1, 4, 4, 0, 0, SPAC_Use, false);
  SetLineTrans(15, LNSPEC_FloorRaiseByValueChangeTex, -1, 4, 3, 0, 0, SPAC_Use, false);
  SetLineTrans(16, LNSPEC_DoorCloseWaitOpen, -1, 16, 240, 0, 0, SPAC_Cross, false);
  SetLineTrans(17, LNSPEC_LightStrobeDoom, -1, 5, 35, 0, 0, SPAC_Cross, false);
  SetLineTrans(18, LNSPEC_FloorRaiseToNearest, -1, 8, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(19, LNSPEC_FloorLowerToHighest, -1, 8, 128, 0, 0, SPAC_Cross, false);

  SetLineTrans(20, LNSPEC_FloorRaiseToNearestChange, -1, 4, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(21, LNSPEC_PlatDownWaitUpStayLip, -1, 32, 105, 0, 0, SPAC_Use, false);
  SetLineTrans(22, LNSPEC_FloorRaiseToNearestChange, -1, 4, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(23, LNSPEC_FloorLowerToLowest, -1, 8, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(24, LNSPEC_FloorRaiseToLowestCeiling, -1, 8, 0, 0, 0, SPAC_Impact, false);
  SetLineTrans(25, LNSPEC_CeilingCrushAndRaiseA, -1, 8, 8, 10, 0, SPAC_Cross, false);
  SetLineTrans(26, LNSPEC_DoorLockedRaise, 0, 16, 150, 2|128, 0, SPAC_Use, true);
  SetLineTrans(27, LNSPEC_DoorLockedRaise, 0, 16, 150, 3|128, 0, SPAC_Use, true);
  SetLineTrans(28, LNSPEC_DoorLockedRaise, 0, 16, 150, 1|128, 0, SPAC_Use, true);
  SetLineTrans(29, LNSPEC_DoorRaise, -1, 16, 150, 0, 0, SPAC_Use, false);

  SetLineTrans(30, LNSPEC_FloorRaiseByTexture, -1, 8, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(31, LNSPEC_DoorOpen, 0, 16, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(32, LNSPEC_DoorLockedRaise, 0, 16, 0, 2|128, 0, SPAC_Use, false, true);
  SetLineTrans(33, LNSPEC_DoorLockedRaise, 0, 16, 0, 1|128, 0, SPAC_Use, false, true);
  SetLineTrans(34, LNSPEC_DoorLockedRaise, 0, 16, 0, 3|128, 0, SPAC_Use, false, true);
  SetLineTrans(35, LNSPEC_LightChangeToValue, -1, 35, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(36, LNSPEC_FloorLowerToHighest, -1, 32, 136, 0, 0, SPAC_Cross, false);
  SetLineTrans(37, LNSPEC_FloorLowerToLowestChange, -1, 8, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(38, LNSPEC_FloorLowerToLowest, -1, 8, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(39, LNSPEC_Teleport, 0, -1, 0, 0, 0, SPAC_Cross, false, true);

  SetLineTrans(40, LNSPEC_CeilingGeneric, -1, 8, 0, 1, 8, SPAC_Cross, false);
  SetLineTrans(41, LNSPEC_CeilingLowerToFloor, -1, 8, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(42, LNSPEC_DoorClose, -1, 16, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(43, LNSPEC_CeilingLowerToFloor, -1, 8, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(44, LNSPEC_CeilingLowerAndCrush, -1, 8, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(45, LNSPEC_FloorLowerToHighest, -1, 8, 128, 0, 0, SPAC_Use, true);
  SetLineTrans(46, LNSPEC_DoorOpen, -1, 16, 0, 0, 0, SPAC_Impact, true, true);
  SetLineTrans(47, LNSPEC_FloorRaiseToNearestChange, -1, 4, 0, 0, 0, SPAC_Impact, false);
  SetLineTrans(48, LNSPEC_ScrollTextureLeft, 64, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(49, LNSPEC_CeilingCrushAndRaiseA, -1, 8, 8, 10, 0, SPAC_Use, false);

  SetLineTrans(50, LNSPEC_DoorClose, -1, 16, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(51, LNSPEC_ExitSecret, /*-1*/0, 0, 0, 0, 0, SPAC_Use, false); // -1 is bug
  SetLineTrans(52, LNSPEC_ExitNormal, /*-1*/0, 0, 0, 0, 0, SPAC_Cross, false); // -1 is bug
  SetLineTrans(53, LNSPEC_PlatPerpetualRaiseLip, -1, 8, 105, 0, 0, SPAC_Cross, false);
  SetLineTrans(54, LNSPEC_PlatStop, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(55, LNSPEC_FloorRaiseAndCrush, -1, 8, 10, 0, 0, SPAC_Use, false);
  SetLineTrans(56, LNSPEC_FloorRaiseAndCrush, -1, 8, 10, 0, 0, SPAC_Cross, false);
  SetLineTrans(57, LNSPEC_CeilingCrushStop, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(58, LNSPEC_FloorRaiseByValue, -1, 8, 24, 0, 0, SPAC_Cross, false);
  SetLineTrans(59, LNSPEC_FloorRaiseByValueChange, -1, 8, 24, 0, 0, SPAC_Cross, false);

  SetLineTrans(60, LNSPEC_FloorLowerToLowest, -1, 8, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(61, LNSPEC_DoorOpen, -1, 16, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(62, LNSPEC_PlatDownWaitUpStayLip, -1, 32, 105, 0, 0, SPAC_Use, true);
  SetLineTrans(63, LNSPEC_DoorRaise, -1, 16, 150, 0, 0, SPAC_Use, true);
  SetLineTrans(64, LNSPEC_FloorRaiseToLowestCeiling, -1, 8, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(65, LNSPEC_FloorRaiseAndCrush, -1, 8, 10, 0, 0, SPAC_Use, true);
  SetLineTrans(66, LNSPEC_FloorRaiseByValueChangeTex, -1, 4, 3, 0, 0, SPAC_Use, true);
  SetLineTrans(67, LNSPEC_FloorRaiseByValueChangeTex, -1, 4, 4, 0, 0, SPAC_Use, true);
  SetLineTrans(68, LNSPEC_FloorRaiseToNearestChange, -1, 4, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(69, LNSPEC_FloorRaiseToNearest, -1, 8, 0, 0, 0, SPAC_Use, true);

  SetLineTrans(70, LNSPEC_FloorLowerToHighest, -1, 32, 136, 0, 0, SPAC_Use, true);
  SetLineTrans(71, LNSPEC_FloorLowerToHighest, -1, 32, 136, 0, 0, SPAC_Use, false);
  SetLineTrans(72, LNSPEC_CeilingLowerAndCrush, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(73, LNSPEC_CeilingCrushAndRaiseA, -1, 8, 8, 10, 0, SPAC_Cross, true);
  SetLineTrans(74, LNSPEC_CeilingCrushStop, -1, 0, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(75, LNSPEC_DoorClose, -1, 16, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(76, LNSPEC_DoorCloseWaitOpen, -1, 16, 240, 0, 0, SPAC_Cross, true);
  SetLineTrans(77, LNSPEC_CeilingCrushAndRaiseA, -1, 16, 16, 10, 0, SPAC_Cross, true);
  SetLineTrans(78, LNSPEC_FloorTransferNumeric, -1, 0, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(79, LNSPEC_LightChangeToValue, -1, 35, 0, 0, 0, SPAC_Cross, true);

  SetLineTrans(80, LNSPEC_LightMaxNeighbor, -1, 0, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(81, LNSPEC_LightChangeToValue, -1, 255, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(82, LNSPEC_FloorLowerToLowest, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(83, LNSPEC_FloorLowerToHighest, -1, 8, 128, 0, 0, SPAC_Cross, true);
  SetLineTrans(84, LNSPEC_FloorLowerToLowestChange, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(85, LNSPEC_ScrollTextureRight, 64, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(86, LNSPEC_DoorOpen, -1, 16, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(87, LNSPEC_PlatPerpetualRaiseLip, -1, 8, 105, 0, 0, SPAC_Cross, true);
  SetLineTrans(88, LNSPEC_PlatDownWaitUpStayLip, -1, 32, 105, 0, 0, SPAC_Cross, true, true);
  SetLineTrans(89, LNSPEC_PlatStop, -1, 0, 0, 0, 0, SPAC_Cross, true);

  SetLineTrans(90, LNSPEC_DoorRaise, -1, 16, 150, 0, 0, SPAC_Cross, true);
  SetLineTrans(91, LNSPEC_FloorRaiseToLowestCeiling, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(92, LNSPEC_FloorRaiseByValue, -1, 8, 24, 0, 0, SPAC_Cross, true);
  SetLineTrans(93, LNSPEC_FloorRaiseByValueChange, -1, 8, 24, 0, 0, SPAC_Cross, true);
  SetLineTrans(94, LNSPEC_FloorRaiseAndCrush, -1, 8, 10, 0, 0, SPAC_Cross, true);
  SetLineTrans(95, LNSPEC_FloorRaiseToNearestChange, -1, 4, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(96, LNSPEC_FloorRaiseByTexture, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(97, LNSPEC_Teleport, 0, -1, 0, 0, 0, SPAC_Cross, true, true);
  SetLineTrans(98, LNSPEC_FloorLowerToHighest, -1, 32, 136, 0, 0, SPAC_Cross, true);
  SetLineTrans(99, LNSPEC_DoorLockedRaise, -1, 64, 0, 2|128, 0, SPAC_Use, true);

  SetLineTrans(100, LNSPEC_StairsBuildUpDoom, -1, 32, 16, 0, 0, SPAC_Cross, false);
  SetLineTrans(101, LNSPEC_FloorRaiseToLowestCeiling, -1, 8, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(102, LNSPEC_FloorLowerToHighest, -1, 8, 128, 0, 0, SPAC_Use, false);
  SetLineTrans(103, LNSPEC_DoorOpen, -1, 16, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(104, LNSPEC_LightMinNeighbor, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(105, LNSPEC_DoorRaise, -1, 64, 150, 0, 0, SPAC_Cross, true);
  SetLineTrans(106, LNSPEC_DoorOpen, -1, 64, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(107, LNSPEC_DoorClose, -1, 64, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(108, LNSPEC_DoorRaise, -1, 64, 150, 0, 0, SPAC_Cross, false);
  SetLineTrans(109, LNSPEC_DoorOpen, -1, 64, 0, 0, 0, SPAC_Cross, false);

  SetLineTrans(110, LNSPEC_DoorClose, -1, 64, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(111, LNSPEC_DoorRaise, -1, 64, 150, 0, 0, SPAC_Use, false);
  SetLineTrans(112, LNSPEC_DoorOpen, -1, 64, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(113, LNSPEC_DoorClose, -1, 64, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(114, LNSPEC_DoorRaise, -1, 64, 150, 0, 0, SPAC_Use, true);
  SetLineTrans(115, LNSPEC_DoorOpen, -1, 64, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(116, LNSPEC_DoorClose, -1, 64, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(117, LNSPEC_DoorRaise, 0, 64, 150, 0, 0, SPAC_Use, true);
  SetLineTrans(118, LNSPEC_DoorOpen, 0, 64, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(119, LNSPEC_FloorRaiseToNearest, -1, 8, 0, 0, 0, SPAC_Cross, false);

  SetLineTrans(120, LNSPEC_PlatDownWaitUpStayLip, -1, 64, 105, 0, 0, SPAC_Cross, true);
  SetLineTrans(121, LNSPEC_PlatDownWaitUpStayLip, -1, 64, 105, 0, 0, SPAC_Cross, false);
  SetLineTrans(122, LNSPEC_PlatDownWaitUpStayLip, -1, 64, 105, 0, 0, SPAC_Use, false);
  SetLineTrans(123, LNSPEC_PlatDownWaitUpStayLip, -1, 64, 105, 0, 0, SPAC_Use, true);
  SetLineTrans(124, LNSPEC_ExitSecret, /*-1*/0, 0, 0, 0, 0, SPAC_Cross, false); // -1 is bug
  SetLineTrans(125, LNSPEC_Teleport, 0, -1, 0, 0, 0, SPAC_MCross, false);
  SetLineTrans(126, LNSPEC_Teleport, 0, -1, 0, 0, 0, SPAC_MCross, true);
  SetLineTrans(127, LNSPEC_StairsBuildUpDoom, -1, 32, 16, 0, 0, SPAC_Use, false);
  SetLineTrans(128, LNSPEC_FloorRaiseToNearest, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(129, LNSPEC_FloorRaiseToNearest, -1, 32, 0, 0, 0, SPAC_Cross, true);

  SetLineTrans(130, LNSPEC_FloorRaiseToNearest, -1, 32, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(131, LNSPEC_FloorRaiseToNearest, -1, 32, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(132, LNSPEC_FloorRaiseToNearest, -1, 32, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(133, LNSPEC_DoorLockedRaise, -1, 64, 0, 2|128, 0, SPAC_Use, false);
  SetLineTrans(134, LNSPEC_DoorLockedRaise, -1, 64, 0, 1|128, 0, SPAC_Use, true);
  SetLineTrans(135, LNSPEC_DoorLockedRaise, -1, 64, 0, 1|128, 0, SPAC_Use, false);
  SetLineTrans(136, LNSPEC_DoorLockedRaise, -1, 64, 0, 3|128, 0, SPAC_Use, true);
  SetLineTrans(137, LNSPEC_DoorLockedRaise, -1, 64, 0, 3|128, 0, SPAC_Use, false);
  SetLineTrans(138, LNSPEC_LightChangeToValue, -1, 255, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(139, LNSPEC_LightChangeToValue, -1, 35, 0, 0, 0, SPAC_Use, true);

  SetLineTrans(140, LNSPEC_FloorRaiseByValueTimes8, -1, 8, 64, 0, 0, SPAC_Use, false);
  SetLineTrans(141, LNSPEC_CeilingCrushAndRaiseSilentA, -1, 8, 8, 10, 0, SPAC_Cross, false);
  SetLineTrans(142, LNSPEC_FloorRaiseByValueTimes8, -1, 8, 64, 0, 0, SPAC_Cross, false);
  SetLineTrans(143, LNSPEC_FloorRaiseByValueChangeTex, -1, 4, 3, 0, 0, SPAC_Cross, false);
  SetLineTrans(144, LNSPEC_FloorRaiseByValueChangeTex, -1, 4, 4, 0, 0, SPAC_Cross, false);
  SetLineTrans(145, LNSPEC_CeilingLowerToFloor, -1, 8, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(146, LNSPEC_FloorDonut, -1, 4, 4, 0, 0, SPAC_Cross, false);
  SetLineTrans(147, LNSPEC_FloorRaiseByValueTimes8, -1, 8, 64, 0, 0, SPAC_Cross, true);
  SetLineTrans(148, LNSPEC_FloorRaiseByValueChangeTex, -1, 4, 3, 0, 0, SPAC_Cross, true);
  SetLineTrans(149, LNSPEC_FloorRaiseByValueChangeTex, -1, 4, 4, 0, 0, SPAC_Cross, true);

  SetLineTrans(150, LNSPEC_CeilingCrushAndRaiseSilentA, -1, 8, 8, 10, 0, SPAC_Cross, true);
  SetLineTrans(151, LNSPEC_FloorAndCeilingLowerRaise, -1, 8, 8, 0, 0, SPAC_Cross, true);
  SetLineTrans(152, LNSPEC_CeilingLowerToFloor, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(153, LNSPEC_FloorTransferTrigger, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(154, LNSPEC_FloorTransferTrigger, -1, 0, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(155, LNSPEC_FloorDonut, -1, 4, 4, 0, 0, SPAC_Cross, true);
  SetLineTrans(156, LNSPEC_LightStrobeDoom, -1, 5, 35, 0, 0, SPAC_Cross, true);
  SetLineTrans(157, LNSPEC_LightMinNeighbor, -1, 0, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(158, LNSPEC_FloorRaiseByTexture, -1, 8, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(159, LNSPEC_FloorLowerToLowestChange, -1, 8, 0, 0, 0, SPAC_Use, false);

  SetLineTrans(160, LNSPEC_FloorRaiseByValueChange, -1, 8, 24, 0, 0, SPAC_Use, false);
  SetLineTrans(161, LNSPEC_FloorRaiseByValue, -1, 8, 24, 0, 0, SPAC_Use, false);
  SetLineTrans(162, LNSPEC_PlatPerpetualRaiseLip, -1, 8, 105, 0, 0, SPAC_Use, false);
  SetLineTrans(163, LNSPEC_PlatStop, -1, 0, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(164, LNSPEC_CeilingCrushAndRaiseA, -1, 16, 16, 10, 0, SPAC_Use, false);
  SetLineTrans(165, LNSPEC_CeilingCrushAndRaiseSilentA, -1, 8, 8, 10, 0, SPAC_Use, false);
  //SetLineTrans(166, LNSPEC_CeilingGeneric, -1, 8, 0, 1, 8, SPAC_Use, false);
  SetLineTrans(166, LNSPEC_FloorAndCeilingLowerRaise, -1, 8, 8, 1998, 0, SPAC_Use, false); //k8: gozzo says this
  SetLineTrans(167, LNSPEC_CeilingLowerAndCrush, -1, 8, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(168, LNSPEC_CeilingCrushStop, -1, 0, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(169, LNSPEC_LightMaxNeighbor, -1, 0, 0, 0, 0, SPAC_Use, false);

  SetLineTrans(170, LNSPEC_LightChangeToValue, -1, 35, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(171, LNSPEC_LightChangeToValue, -1, 255, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(172, LNSPEC_LightStrobeDoom, -1, 5, 35, 0, 0, SPAC_Use, false);
  SetLineTrans(173, LNSPEC_LightMinNeighbor, -1, 0, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(174, LNSPEC_Teleport, 0, -1, 0, 0, 0, SPAC_Use, false, true);
  SetLineTrans(175, LNSPEC_DoorCloseWaitOpen, -1, 8, 240, 0, 0, SPAC_Use, false);
  SetLineTrans(176, LNSPEC_FloorRaiseByTexture, -1, 8, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(177, LNSPEC_FloorLowerToLowestChange, -1, 8, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(178, LNSPEC_FloorRaiseByValueTimes8, -1, 8, 64, 0, 0, SPAC_Use, true);
  SetLineTrans(179, LNSPEC_FloorRaiseByValueChange, -1, 8, 24, 0, 0, SPAC_Use, true);

  SetLineTrans(180, LNSPEC_FloorRaiseByValue, -1, 8, 24, 0, 0, SPAC_Use, true);
  SetLineTrans(181, LNSPEC_PlatPerpetualRaiseLip, -1, 8, 105, 0, 0, SPAC_Use, true);
  SetLineTrans(182, LNSPEC_PlatStop, -1, 0, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(183, LNSPEC_CeilingCrushAndRaiseA, -1, 16, 16, 10, 0, SPAC_Use, true);
  SetLineTrans(184, LNSPEC_CeilingCrushAndRaiseA, -1, 8, 8, 10, 0, SPAC_Use, true);
  SetLineTrans(185, LNSPEC_CeilingCrushAndRaiseSilentA, -1, 8, 8, 10, 0, SPAC_Use, true);
  //SetLineTrans(186, LNSPEC_CeilingGeneric, -1, 8, 0, 1, 8, SPAC_Use, true);
  SetLineTrans(186, LNSPEC_FloorAndCeilingLowerRaise, -1, 8, 8, 1998, 0, SPAC_Use, true); //k8: gozzo says this
  SetLineTrans(187, LNSPEC_CeilingLowerAndCrush, -1, 8, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(188, LNSPEC_CeilingCrushStop, -1, 0, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(189, LNSPEC_FloorTransferTrigger, -1, 0, 0, 0, 0, SPAC_Use, false);

  SetLineTrans(190, LNSPEC_FloorTransferTrigger, -1, 0, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(191, LNSPEC_FloorDonut, -1, 4, 4, 0, 0, SPAC_Use, true);
  SetLineTrans(192, LNSPEC_LightMaxNeighbor, -1, 0, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(193, LNSPEC_LightStrobeDoom, -1, 5, 35, 0, 0, SPAC_Use, true);
  SetLineTrans(194, LNSPEC_LightMinNeighbor, -1, 0, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(195, LNSPEC_Teleport, 0, -1, 0, 0, 0, SPAC_Use, true, true);
  SetLineTrans(196, LNSPEC_DoorCloseWaitOpen, -1, 16, 240, 0, 0, SPAC_Use, true);
  SetLineTrans(197, LNSPEC_ExitNormal, 0, 0, 0, 0, 0, SPAC_Impact, false);
  SetLineTrans(198, LNSPEC_ExitSecret, 0, 0, 0, 0, 0, SPAC_Impact, false);
  SetLineTrans(199, LNSPEC_CeilingLowerToLowest, -1, 8, 0, 0, 0, SPAC_Cross, false);

  SetLineTrans(200, LNSPEC_CeilingLowerToHighestFloor, -1, 8, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(201, LNSPEC_CeilingLowerToLowest, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(202, LNSPEC_CeilingLowerToHighestFloor, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(203, LNSPEC_CeilingLowerToLowest, -1, 8, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(204, LNSPEC_CeilingLowerToHighestFloor, -1, 8, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(205, LNSPEC_CeilingLowerToLowest, -1, 8, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(206, LNSPEC_CeilingLowerToHighestFloor, -1, 8, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(207, LNSPEC_TeleportNoFog, 0, 0, -1, 0, 0, SPAC_Cross, false, true);
  SetLineTrans(208, LNSPEC_TeleportNoFog, 0, 0, -1, 0, 0, SPAC_Cross, true, true);
  SetLineTrans(209, LNSPEC_TeleportNoFog, 0, 0, -1, 0, 0, SPAC_Use, false, true);

  SetLineTrans(210, LNSPEC_TeleportNoFog, 0, 0, -1, 0, 0, SPAC_Use, true, true);
  SetLineTrans(211, LNSPEC_PlatToggle, -1, 0, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(212, LNSPEC_PlatToggle, -1, 0, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(213, LNSPEC_TransferFloorLight, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(214, LNSPEC_ScrollCeiling, -1, 6, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(215, LNSPEC_ScrollFloor, -1, 6, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(216, LNSPEC_ScrollFloor, -1, 6, 1, 0, 0, SPAC_Cross, false);
  SetLineTrans(217, LNSPEC_ScrollFloor, -1, 6, 2, 0, 0, SPAC_Cross, false);
  SetLineTrans(218, LNSPEC_ScrollTextureModel, -1, 2, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(219, LNSPEC_FloorLowerToNearest, -1, 8, 0, 0, 0, SPAC_Cross, false);

  SetLineTrans(220, LNSPEC_FloorLowerToNearest, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(221, LNSPEC_FloorLowerToNearest, -1, 8, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(222, LNSPEC_FloorLowerToNearest, -1, 8, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(223, LNSPEC_SectorSetFriction, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(224, LNSPEC_SectorSetWind, -1, 0, 0, 1, 0, SPAC_Cross, false);
  SetLineTrans(225, LNSPEC_SectorSetCurrent, -1, 0, 0, 1, 0, SPAC_Cross, false);
  SetLineTrans(226, LNSPEC_PointPushSetForce, -1, 0, 0, 1, 0, SPAC_Cross, false);
  SetLineTrans(227, LNSPEC_ElevatorRaiseToNearest, -1, 32, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(228, LNSPEC_ElevatorRaiseToNearest, -1, 32, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(229, LNSPEC_ElevatorRaiseToNearest, -1, 32, 0, 0, 0, SPAC_Use, false);

  SetLineTrans(230, LNSPEC_ElevatorRaiseToNearest, -1, 32, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(231, LNSPEC_ElevatorLowerToNearest, -1, 32, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(232, LNSPEC_ElevatorLowerToNearest, -1, 32, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(233, LNSPEC_ElevatorLowerToNearest, -1, 32, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(234, LNSPEC_ElevatorLowerToNearest, -1, 32, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(235, LNSPEC_ElevatorMoveToFloor, -1, 32, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(236, LNSPEC_ElevatorMoveToFloor, -1, 32, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(237, LNSPEC_ElevatorMoveToFloor, -1, 32, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(238, LNSPEC_ElevatorMoveToFloor, -1, 32, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(239, LNSPEC_FloorTransferNumeric, -1, 0, 0, 0, 0, SPAC_Cross, false);

  SetLineTrans(240, LNSPEC_FloorTransferNumeric, -1, 0, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(241, LNSPEC_FloorTransferNumeric, -1, 0, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(242, LNSPEC_TransferHeights, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(243, LNSPEC_TeleportLine, -1, -1, 0, 0, 0, SPAC_Cross, false, true);
  SetLineTrans(244, LNSPEC_TeleportLine, -1, -1, 0, 0, 0, SPAC_Cross, true, true);
  SetLineTrans(245, LNSPEC_ScrollCeiling, -1, 5, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(246, LNSPEC_ScrollFloor, -1, 5, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(247, LNSPEC_ScrollFloor, -1, 5, 1, 0, 0, SPAC_Cross, false);
  SetLineTrans(248, LNSPEC_ScrollFloor, -1, 5, 2, 0, 0, SPAC_Cross, false);
  SetLineTrans(249, LNSPEC_ScrollTextureModel, -1, 1, 0, 0, 0, SPAC_Cross, false);

  SetLineTrans(250, LNSPEC_ScrollCeiling, -1, 4, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(251, LNSPEC_ScrollFloor, -1, 4, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(252, LNSPEC_ScrollFloor, -1, 4, 1, 0, 0, SPAC_Cross, false);
  SetLineTrans(253, LNSPEC_ScrollFloor, -1, 4, 2, 0, 0, SPAC_Cross, false);
  SetLineTrans(254, LNSPEC_ScrollTextureModel, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(255, LNSPEC_ScrollTextureOffsets, 0, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(256, LNSPEC_StairsBuildUpDoom, -1, 2, 8, 0, 0, SPAC_Cross, true);
  SetLineTrans(257, LNSPEC_StairsBuildUpDoom, -1, 32, 16, 0, 0, SPAC_Cross, true);
  SetLineTrans(258, LNSPEC_StairsBuildUpDoom, -1, 2, 8, 0, 0, SPAC_Use, true);
  SetLineTrans(259, LNSPEC_StairsBuildUpDoom, -1, 32, 16, 0, 0, SPAC_Use, true);

  SetLineTrans(260, LNSPEC_LineTranslucent, -1, 168, 0, 0, 0, SPAC_Cross, false); // was 128, changed to better reflect BOOM default
  SetLineTrans(261, LNSPEC_TransferCeilingLight, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(262, LNSPEC_TeleportLine, -1, -1, 1, 0, 0, SPAC_Cross, false, true);
  SetLineTrans(263, LNSPEC_TeleportLine, -1, -1, 1, 0, 0, SPAC_Cross, true, true);
  SetLineTrans(264, LNSPEC_TeleportLine, -1, -1, 1, 0, 0, SPAC_MCross, false);
  SetLineTrans(265, LNSPEC_TeleportLine, -1, -1, 1, 0, 0, SPAC_MCross, true);
  SetLineTrans(266, LNSPEC_TeleportLine, -1, -1, 0, 0, 0, SPAC_MCross, false);
  SetLineTrans(267, LNSPEC_TeleportLine, -1, -1, 0, 0, 0, SPAC_MCross, true);
  SetLineTrans(268, LNSPEC_TeleportNoFog, 0, 0, -1, 0, 0, SPAC_MCross, false);
  SetLineTrans(269, LNSPEC_TeleportNoFog, 0, 0, -1, 0, 0, SPAC_MCross, true);

  // Doom Legacy
  // 270: fraggle script
  //TODO: transfer sky is not fully implemented yet
  SetLineTrans(271, LNSPEC_StaticInit, -1, 255, 0, 0, 0, SPAC_Cross, false); // transfer sky (MBF?)
  SetLineTrans(272, LNSPEC_StaticInit, -1, 255, 1, 0, 0, SPAC_Cross, false); // transfer sky (MBF?)
  // 273..279: fraggle script
  SetLineTrans(280, LNSPEC_TransferHeights, -1, 12, 0, 0, 0, 0/*SPAC_Cross*/, false); // clip fake planes, underwater
  // 281 is processed in 3d floor section
  SetLineTrans(282, LNSPEC_StaticInit, -1, 1, 0, 0, 0, 0/*SPAC_Cross*/, false); // light/fog color
  // no 283
  SetLineTrans(284, LNSPEC_LineTranslucent, -1, 128, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(285, LNSPEC_LineTranslucent, -1, 192, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(286, LNSPEC_LineTranslucent, -1, 48, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(287, LNSPEC_LineTranslucent, -1, 128, 1, 0, 0, 0/*SPAC_Cross*/, false); // additive
  SetLineTrans(288, LNSPEC_LineTranslucent, -1, 255, 0, 0, 0, 0/*SPAC_Cross*/, false);
  // 289 is processed in 3d floor section

  // Doom Legacy water (processed below)
  //SetLineTrans(301, LNSPEC_SectorSet3dFloor, -1, 255, 1, 0, 0, SPAC_Cross, false); // LNSPEC_StaticInit

  SetLineTrans(333, LNSPEC_StaticInit, -1, 0, 0, 0, 0, 0/*SPAC_Cross*/, false); // gravity
  SetLineTrans(334, LNSPEC_StaticInit, -1, 1, 0, 0, 0, 0/*SPAC_Cross*/, false); // color
  SetLineTrans(335, LNSPEC_StaticInit, -1, 2, 0, 0, 0, 0/*SPAC_Cross*/, false); // damage

  SetLineTrans(336, LNSPEC_LineMirror, -666, -666, -666, -666, -666, 0/*SPAC_Cross*/, false);
  SetLineTrans(337, LNSPEC_LineHorizon, -666, -666, -666, -666, -666, 0/*SPAC_Cross*/, false);
  SetLineTrans(338, LNSPEC_FloorWaggle, -1, 24, 32, 0, 0, SPAC_Cross, false);
  SetLineTrans(339, LNSPEC_FloorWaggle, -1, 12, 32, 0, 0, SPAC_Cross, false);

  SetLineTrans(340, LNSPEC_PlaneAlign, 1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(341, LNSPEC_PlaneAlign, 0, 1, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(342, LNSPEC_PlaneAlign, 1, 1, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(343, LNSPEC_PlaneAlign, 2, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(344, LNSPEC_PlaneAlign, 0, 2, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(345, LNSPEC_PlaneAlign, 2, 2, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(346, LNSPEC_PlaneAlign, 2, 1, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(347, LNSPEC_PlaneAlign, 1, 2, 0, 0, 0, SPAC_Cross, false);
  //348 = WALK, Autosave()
  //349 = USE, Autosave()

  // ZDoom line types
  //TODO: not fully implemented yet
  SetLineTrans(350, LNSPEC_TransferHeights, -1, 2, 0, 0, 0, 0/*SPAC_Cross*/, false); // just fake the floor
  SetLineTrans(351, LNSPEC_TransferHeights, -1, 6, 0, 0, 0, 0/*SPAC_Cross*/, false); // just fake the floor and clip it too
  //352 = 0, Sector_CopyScroller(tag, 1)  // copy ceiling scroller
  //353 = 0, Sector_CopyScroller(tag, 2)  // copy floor scroller
  //354 = 0, Sector_CopyScroller(tag, 6)  // copy carrying floor scroller

  // eternity
  SetLineTrans(386, LNSPEC_PlaneAlign, 1, 0, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(387, LNSPEC_PlaneAlign, 0, 1, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(388, LNSPEC_PlaneAlign, 1, 1, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(389, LNSPEC_PlaneAlign, 2, 0, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(390, LNSPEC_PlaneAlign, 0, 2, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(391, LNSPEC_PlaneAlign, 2, 2, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(392, LNSPEC_PlaneAlign, 2, 1, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(393, LNSPEC_PlaneAlign, 1, 2, 0, 0, 0, 0/*SPAC_Cross*/, false);

  // 3DGE
/*
    [409] : EDGE Translucent Linedef (80%)
    [410] : EDGE Translucent Linedef (60%)
    [411] : EDGE Translucent Linedef (40%)
    [412] : EDGE Translucent Linedef (20%)
*/
  SetLineTrans(409, LNSPEC_LineTranslucent, -1, 204, 0, 0, 0, 0/*SPAC_Cross*/, false); // 80%
  SetLineTrans(410, LNSPEC_LineTranslucent, -1, 153, 0, 0, 0, 0/*SPAC_Cross*/, false); // 60%
  SetLineTrans(411, LNSPEC_LineTranslucent, -1, 101, 0, 0, 0, 0/*SPAC_Cross*/, false); // 40%
  SetLineTrans(412, LNSPEC_LineTranslucent, -1, 50, 0, 0, 0, 0/*SPAC_Cross*/, false); // 20%

/*
    [422] : EDGE SCROLL RIGHT
    [423] : EDGE SCROLL UP
    [424] : EDGE SCROLL DOWN
    [425] : EDGE SCROLL LEFT AND UP
    [426] : EDGE SCROLL LEFT AND DOWN
    [427] : EDGE SCROLL RIGHT AND UP
    [428] : EDGE SCROLL RIGHT AND DOWN
    [429] : EDGE SCROLL FAST LOWER AND MIDDLE TEXTURE (WATERFALLS) (not implemented yet)
*/
  SetLineTrans(422, LNSPEC_ScrollTextureRight, 64, 0, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(423, LNSPEC_ScrollTextureUp, 64, 0, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(424, LNSPEC_ScrollTextureDown, 64, 0, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(425, LNSPEC_ScrollTextureBoth, 0, 64, 0, 0, 64, 0/*SPAC_Cross*/, false);
  SetLineTrans(426, LNSPEC_ScrollTextureBoth, 0, 64, 0, 64, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(427, LNSPEC_ScrollTextureBoth, 0, 0, 64, 0, 64, 0/*SPAC_Cross*/, false);
  SetLineTrans(428, LNSPEC_ScrollTextureBoth, 0, 0, 64, 64, 0, 0/*SPAC_Cross*/, false);

/*
    [434] : EDGE S1, RAISE FLOOR 2 UNITS (USE FOR RTS ONHEIGHT EVENTS)
    [435] : EDGE SR, RAISE FLOOR 2 UNITS (USE FOR RTS ONHEIGHT EVENTS)
    [436] : EDGE W1, RAISE FLOOR 2 UNITS (USE FOR RTS ONHEIGHT EVENTS)
    [437] : EDGE WR, RAISE FLOOR 2 UNITS (USE FOR RTS ONHEIGHT EVENTS)
    [438] : EDGE G1, RAISE FLOOR 2 UNITS (USE FOR RTS ONHEIGHT EVENTS)
    [439] : EDGE GR, RAISE FLOOR 2 UNITS (USE FOR RTS ONHEIGHT EVENTS)
*/
  // k8: i'm not sure if SPAC flags are right here
  SetLineTrans(434, LNSPEC_FloorRaiseByValue, -1, 8, 2, 0, 0, SPAC_Use, false);
  SetLineTrans(435, LNSPEC_FloorRaiseByValue, -1, 8, 2, 0, 0, SPAC_Use, true); // repeated
  SetLineTrans(436, LNSPEC_FloorRaiseByValue, -1, 8, 2, 0, 0, SPAC_Cross, false);
  SetLineTrans(437, LNSPEC_FloorRaiseByValue, -1, 8, 2, 0, 0, SPAC_Cross, true); // repeated
  SetLineTrans(438, LNSPEC_FloorRaiseByValue, -1, 8, 2, 0, 0, SPAC_Impact, false);
  SetLineTrans(439, LNSPEC_FloorRaiseByValue, -1, 8, 2, 0, 0, SPAC_Impact, true); // repeated


  // 3d floors
  // https://zdoom.org/wiki/Sector_Set3dFloor
  Set3DFloorTrans(281, 1, 0, 255);
  Set3DFloorTrans(289, 1, 1, 255);
  //
  Set3DFloorTrans(300, 1, 1, 127);
  Set3DFloorTrans(301, 2, 2, 127);
  Set3DFloorTrans(302, 3, 6, 127); // not properly implemented yet
  Set3DFloorTrans(303, 3, -666, -666);
  Set3DFloorTrans(304, 2, 2, 255);
  Set3DFloorTrans(305, 3, 2, -666);
  Set3DFloorTrans(306, 1, -666, -666);
  Set3DFloorTrans(332, 4, -666, -666);

  // 3DGE
  //EDGE plane-copy
  SetLineTrans(394, LNSPEC_PlaneCopy, -666, 0, 0, 0, 0, 0/*SPAC_Impact*/, false);
  SetLineTrans(395, LNSPEC_PlaneCopy, 0, -1, 0, 0, 0, 0/*SPAC_Impact*/, false);
  SetLineTrans(396, LNSPEC_PlaneCopy, -666, -666, 0, 0, 0, 0/*SPAC_Impact*/, false);

  /*
    [400] : EDGE Thick Extrafloor
    [401] : EDGE Thick Extrafloor (use upper texture)
    [402] : EDGE Thick Extrafloor (use lower texture)
  */
  Set3DFloorTrans(400, 1, 0, 255);
  Set3DFloorTrans(401, 1, 16, 255);
  Set3DFloorTrans(402, 1, 32, 255);

  /*
    [403] : EDGE Liquid Extrafloor (Opaque)
    [404] : EDGE Liquid Extrafloor (80% Translucent)
    [405] : EDGE Liquid Extrafloor (60% Translucent)
    [406] : EDGE Liquid Extrafloor (40% Translucent)
    [407] : EDGE Liquid Extrafloor (20% Translucent)
    [408] : EDGE Liquid Extrafloor (Invisible)
  */
  SetLineTrans(403, LNSPEC_EDGEWater, -1, 12, 100, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(404, LNSPEC_EDGEWater, -1, 12, 80, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(405, LNSPEC_EDGEWater, -1, 12, 60+10, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(406, LNSPEC_EDGEWater, -1, 12, 40+20, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(407, LNSPEC_EDGEWater, -1, 12, 20+30, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(408, LNSPEC_EDGEWater, -1, 12, 0, 0, 0, 0/*SPAC_Cross*/, false);
  /* old and wrong
  Set3DFloorTrans(403, 2, 2, 255);
  Set3DFloorTrans(404, 2, 2, 204);
  Set3DFloorTrans(405, 2, 2, 153);
  Set3DFloorTrans(406, 2, 2, 102);
  Set3DFloorTrans(407, 2, 2, 51);
  Set3DFloorTrans(408, 2, 2, -666);
  */

/*
    [413] : EDGE Thin Extrafloor (Opaque)
    [414] : EDGE Thin Extrafloor (80% Translucent)
    [415] : EDGE Thin Extrafloor (60% Translucent)
    [416] : EDGE Thin Extrafloor (40% Translucent)
    [417] : EDGE Thin Extrafloor (20% Translucent)
*/
  Set3DFloorTrans(413, 1, 8, 255, edge:true);
  Set3DFloorTrans(414, 1, 8, 204, edge:true);
  Set3DFloorTrans(415, 1, 8, 153, edge:true);
  Set3DFloorTrans(416, 1, 8, 102, edge:true);
  Set3DFloorTrans(417, 1, 8, 51, edge:true);

  // EDGE mirrors
/*
    [462] : EDGE Mirror (Plain)
    [463] : EDGE Mirror (White)
    [464] : EDGE Mirror (Blue)
    [465] : EDGE Mirror (Red)
    [466] : EDGE Mirror (Green)
*/
  SetLineTrans(462, LNSPEC_LineMirror, -666, -666, -666, -666, -666, 0/*SPAC_Cross*/, false);
  SetLineTrans(463, LNSPEC_LineMirror, -666, -666, -666, -666, -666, 0/*SPAC_Cross*/, false);
  SetLineTrans(464, LNSPEC_LineMirror, -666, -666, -666, -666, -666, 0/*SPAC_Cross*/, false);
  SetLineTrans(465, LNSPEC_LineMirror, -666, -666, -666, -666, -666, 0/*SPAC_Cross*/, false);
  SetLineTrans(466, LNSPEC_LineMirror, -666, -666, -666, -666, -666, 0/*SPAC_Cross*/, false);

  // EDGE slopes
/*
    [567] : EDGE Detail Slope - FLOOR
    [568] : EDGE Detail Slope - CEILING
    [569] : EDGE Detail Slope - FLOOR+CEILING
*/
  SetLineTrans(567, LNSPEC_PlaneAlign, 1, 0, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(568, LNSPEC_PlaneAlign, 0, 1, 0, 0, 0, 0/*SPAC_Cross*/, false);
  SetLineTrans(569, LNSPEC_PlaneAlign, 1, 1, 0, 0, 0, 0/*SPAC_Cross*/, false);


/* EDGE specials -- http://3dfxdev.net/edgewiki/index.php?title=Line_Types
Thin Sliding Doors
    [442] : EDGE Sliding door (LEFT), DR + MONSTERS
    [443] : EDGE Sliding door (LEFT), DR
    [444] : EDGE Sliding door (LEFT), DR + FAST
    [445] : EDGE Sliding door (LEFT), D1

    [446] : EDGE Sliding door (RIGHT), DR + MONSTERS
    [447] : EDGE Sliding door (RIGHT), DR
    [448] : EDGE Sliding door (RIGHT), DR + FAST
    [449] : EDGE Sliding door (RIGHT), D1

    [450] : EDGE Sliding door (CENTER), DR + MONSTERS
    [451] : EDGE Sliding door (CENTER), DR
    [452] : EDGE Sliding door (CENTER), DR + FAST
    [453] : EDGE Sliding door (CENTER), D1

Ladders
    [470] : EDGE Ladder, 48 units high
    [471] : EDGE Ladder, 80 units high
    [472] : EDGE Ladder, 120 units high
    [473] : EDGE Ladder, 160 units high
    [474] : EDGE Ladder, 192 units high
    [475] : EDGE Ladder, 256 units high
    [476] : EDGE Ladder, 384 units high
    [477] : EDGE Ladder, 512 units high
    [478] : EDGE Ladder, 768 units high
    [479] : EDGE Ladder, no limit

Portals
    [480] : EDGE Portal (Dark 50%)
    [481] : EDGE Portal (Light 30%)
    [482] : EDGE Portal (Light 70%)
    [483] : EDGE Portal (Blue 70%)
    [484] : EDGE Portal (Green 70%)

    [485] : EDGE Camera Portal (Plain)
    [486] : EDGE Camera Portal (White)
    [487] : EDGE Camera Portal (Cyan)
    [488] : EDGE Camera Portal (Rusty)
    [489] : EDGE Camera Portal (Green)

HUB Exits - WR
    [501] : Hub Exit to MAP01 / E1M1
    [502] : Hub Exit to MAP02 / E1M2
    [503] : Hub Exit to MAP03 / E1M3
    [504] : Hub Exit to MAP04 / E1M4
    [505] : Hub Exit to MAP05 / E1M5
    [506] : Hub Exit to MAP06 / E1M6
    [507] : Hub Exit to MAP07 / E1M7
    [508] : Hub Exit to MAP08 / E1M8
    [509] : Hub Exit to MAP09 / E1M9

    [510] : Hub Exit to MAP10
    [511] : Hub Exit to MAP11 / E2M1
    [512] : Hub Exit to MAP12 / E2M2
    [513] : Hub Exit to MAP13 / E2M3
    [514] : Hub Exit to MAP14 / E2M4
    [515] : Hub Exit to MAP15 / E2M5
    [516] : Hub Exit to MAP16 / E2M6
    [517] : Hub Exit to MAP17 / E2M7
    [518] : Hub Exit to MAP18 / E2M8
    [519] : Hub Exit to MAP19 / E2M9

    [520] : Hub Exit to MAP20
    [521] : Hub Exit to MAP21 / E3M1
    [522] : Hub Exit to MAP22 / E3M2
    [523] : Hub Exit to MAP23 / E3M3
    [524] : Hub Exit to MAP24 / E3M4
    [525] : Hub Exit to MAP25 / E3M5
    [526] : Hub Exit to MAP26 / E3M6
    [527] : Hub Exit to MAP27 / E3M7
    [528] : Hub Exit to MAP28 / E3M8
    [529] : Hub Exit to MAP29 / E3M9

    [530] : Hub Exit to MAP30
    [531] : Hub Exit to MAP31 / E4M1
    [532] : Hub Exit to MAP32 / E4M2
    [533] : Hub Exit to MAP33 / E4M3
    [534] : Hub Exit to MAP34 / E4M4
    [535] : Hub Exit to MAP35 / E4M5
    [536] : Hub Exit to MAP36 / E4M6
    [537] : Hub Exit to MAP37 / E4M7
    [538] : Hub Exit to MAP38 / E4M8
    [539] : Hub Exit to MAP39 / E4M9

Locked Doors
    [490] : EDGE Green Key DOOR - DR
    [491] : EDGE Green Key DOOR - D1
    [492] : EDGE Green Key DOOR - SR
    [493] : EDGE Green Key DOOR - S1
    [494] : EDGE Green Key BLAZING DOOR - D1

    [580] : EDGE Gold Key DOOR - DR
    [581] : EDGE Gold Key DOOR - D1
    [582] : EDGE Gold Key DOOR - SR
    [583] : EDGE Gold Key DOOR - S1

    [584] : EDGE Silver Key DOOR - DR
    [585] : EDGE Silver Key DOOR - D1
    [586] : EDGE Silver Key DOOR - SR
    [587] : EDGE Silver Key DOOR - S1

    [588] : EDGE Brass Key DOOR - DR
    [589] : EDGE Brass Key DOOR - D1
    [590] : EDGE Copper Key DOOR - DR
    [591] : EDGE Copper Key DOOR - D1
    [592] : EDGE Steel Key DOOR - DR
    [593] : EDGE Steel Key DOOR - D1

    [594] : EDGE Wooden Key DOOR - DR
    [595] : EDGE Wooden Key DOOR - D1
    [596] : EDGE Fire Key DOOR - DR
    [597] : EDGE Fire Key DOOR - D1
    [598] : EDGE Water Key DOOR - DR
    [599] : EDGE Water Key DOOR - D1

Flat Alignment
    [800] : Align and rotate front sector's FLOOR
    [801] : Align and rotate back sector's FLOOR
    [802] : Align and rotate front sector's CEILING
    [803] : Align and rotate back sector's CEILING
    [804] : Align and rotate front sector's FLOOR+CEILING
    [805] : Align and rotate back sector's FLOOR+CEILING

    [810] : Align, scale and rotate front sector's FLOOR
    [811] : Align, scale and rotate back sector's FLOOR
    [812] : Align, scale and rotate front sector's CEILING
    [813] : Align, scale and rotate back sector's CEILING
    [814] : Align, scale and rotate front sector's FLOOR+CEILING
    [815] : Align, scale and rotate back sector's FLOOR+CEILING

    [820] : Scale front sector's FLOOR
    [821] : Scale back sector's FLOOR
    [822] : Scale front sector's CEILING
    [823] : Scale back sector's CEILING
    [824] : Scale front sector's FLOOR+CEILING
    [825] : Scale back sector's FLOOR+CEILING

LEGEND
TRIGGER   MEANING
D1  Manual, once only
DR  Manual, repeatable
S1  Switched, once only
SR  Switched, repeatable
W1  Walk over, once only
WR  Walk over, repeatable
G1  Gun-shot, once only
GR  Gun-shot, repeatable
*/
#endif
