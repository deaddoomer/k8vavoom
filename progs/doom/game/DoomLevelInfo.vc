//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
class DoomLevelInfo : LineSpecialLevelInfo;


override class!Inventory GetDehackedItemType (EntityEx Item) {
  // identify by sprite
  switch (GetStateSpriteName(Item.State)) {
    // armor
    case 'arm1': return GreenArmor;
    case 'arm2': return BlueArmor;

    // bonus items
    case 'bon1': return HealthBonus;
    case 'bon2': return ArmorBonus;
    case 'soul': return Soulsphere;
    case 'mega': return Megasphere;

    // cards
    case 'bkey': return BlueCard;
    case 'ykey': return YellowCard;
    case 'rkey': return RedCard;
    case 'bsku': return BlueSkull;
    case 'ysku': return YellowSkull;
    case 'rsku': return RedSkull;

    // medikits, heals
    case 'stim': return Stimpack;
    case 'medi': return Medikit;

    // power ups
    case 'pinv': return InvulnerabilitySphere;
    case 'pstr': return Berserk;
    case 'pins': return BlurSphere;
    case 'suit': return RadSuit;
    case 'pvis': return Infrared;

    // items
    case 'pmap': return Allmap;

    // ammo
    case 'clip': return Clip;
    case 'ammo': return ClipBox;
    case 'rock': return RocketAmmo;
    case 'brok': return RocketBox;
    case 'cell': return Cell;
    case 'celp': return CellPack;
    case 'shel': return Shell;
    case 'sbox': return ShellBox;
    case 'bpak': return Backpack;

    // weapons
    case 'bfug': return BFG9000;
    case 'mgun': return Chaingun;
    case 'csaw': return Chainsaw;
    case 'laun': return RocketLauncher;
    case 'plas': return PlasmaRifle;
    case 'shot': return Shotgun;
    case 'sgn2': return SuperShotgun;
  }

  return none;
}


defaultproperties {
}
