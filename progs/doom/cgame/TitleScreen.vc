//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2022 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class TitleScreen : Widget;

ClientGameBase ClGame;

// demo loop control
int demosequence;

float pagetime;
int page_pic;

bool waitingMusic; // set if waiting for music end


//==========================================================================
//
//  AdvanceDemo
//
//  This cycles through the demo sequences.
//
//==========================================================================
void AdvanceDemo () {
  waitingMusic = false;

  if (StartTitleMap()) return;

  if (IsAutoloadingMapFromCLI()) {
    if (demosequence == -1) {
      demosequence = 0;
      page_pic = R_RegisterPic('titlepic');
      pagetime = 60.0;
    }
    return;
  }

  bool attractionMode = GetCvarB('d_attraction_mode');

  ++demosequence;
  if (!IsAnyDoom2) {
    demosequence %= (WadLumpPresent('e4m1') ? 7 : 6);
  } else {
    demosequence %= 6;
  }

  switch (demosequence) {
    case 0:
      waitingMusic = MUS_IsMusicAvailable();
      pagetime = 2.0;
      page_pic = R_RegisterPic('titlepic');
      if (!IsAnyDoom2) {
        if (!waitingMusic) pagetime = 170.0/35.0;
        CmdBuf_AddText("music playrandom d_intro\n");
      } else {
        if (!waitingMusic) pagetime = 11.0;
        CmdBuf_AddText("music playrandom d_dm2ttl\n");
      }
      break;

    case 1:
      if (attractionMode) CmdBuf_AddText("PlayDemo demo1\n");
      break;

    case 2:
      pagetime = 200.0/35.0;
      page_pic = R_RegisterPic('credit');
      break;

    case 3:
      if (attractionMode) CmdBuf_AddText("PlayDemo demo2\n");
      break;

    case 4:
      if (!IsAnyDoom2) {
        pagetime = 200.0/35.0;
        page_pic = R_RegisterPic(WadLumpPresent('e4m1') ? 'credit' : 'help2');
      } else {
        waitingMusic = MUS_IsMusicAvailable();
        pagetime = (waitingMusic ? 2.0 : 11.0);
        page_pic = R_RegisterPic('titlepic');
        CmdBuf_AddText("music playrandom d_dm2ttl\n");
      }
      break;

    case 5:
      if (attractionMode) CmdBuf_AddText("PlayDemo demo3\n");
      break;

    // THE DEFINITIVE DOOM Special Edition demo
    case 6:
      if (!IsAnyDoom2 && attractionMode) CmdBuf_AddText("PlayDemo demo4\n");
      break;
  }
}


//==========================================================================
//
//  ForceTitle
//
//==========================================================================
void ForceTitle () {
  pagetime = (!IsAnyDoom2 ? 5.0 : 11.0);
  page_pic = R_RegisterPic('titlepic');
}


//==========================================================================
//
//  OnVisibilityChanged
//
//==========================================================================
override void OnVisibilityChanged (bool bNewVisibility) {
  bTickEnabled = bNewVisibility;
}


//==========================================================================
//
//  Tick
//
//==========================================================================
override void Tick (float DeltaTime) {
  pagetime -= DeltaTime;
  if (demosequence == -1 || (/*!ClGame.MenuActive() &&*/ pagetime < 0.0)) {
    if (waitingMusic && demosequence >= 0 && pagetime < 0.0) {
      if (MUS_GetMusicLoopCounter() == 0) {
        pagetime = 0;
        return;
      }
      waitingMusic = false;
      pagetime = 2.0; // wait a litte
    }
    AdvanceDemo();
  }
}


//==========================================================================
//
//  OnDraw
//
//==========================================================================
override void OnDraw () {
  DrawFullScreenPic(page_pic);
}


//==========================================================================
//
//  OnHostEndGame
//
//==========================================================================
void OnHostEndGame () {
  if (demosequence != -1) AdvanceDemo();
  ForceTitle();
}


//==========================================================================
//
//  OnHostError
//
//==========================================================================
void OnHostError () {
  demosequence = -1;
  ForceTitle();
}


//==========================================================================
//
//  StopDemoLoop
//
//==========================================================================
void StopDemoLoop () {
  demosequence = -1;  // not in the demo loop now
}


defaultproperties {
  bTickEnabled = true;
  Focusable = true;
  Width = 320;
  Height = 200;
  demosequence = -1;
}
