//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2020 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class MenuScreenNewNetGameHexen : replaces(MenuScreenNewNetGame);


//==========================================================================
//
//  CreateEpisodeList
//
//==========================================================================
override void CreateEpisodeList (out array!string epnames) {
}


//==========================================================================
//
//  CreateMapList
//
//==========================================================================
override void CreateMapList (int aepisode, out array!string mapnames) {
#ifdef FIXME
  foreach (auto i; 1..100) {
    int map = P_TranslateMap(i);
    if (map != -1) mapnames[$] = P_GetMapName(map);
  }
#else
  foreach (auto i; 0..32) mapnames[$] = P_GetMapName(i);
#endif
}


//==========================================================================
//
//  GetMapName
//
//==========================================================================
override string GetMapName (int aepisode, int map) {
  MapInfo *mi = P_GetMapInfo(map);
  if (!mi) return "";
  return string(mi->LumpName);
}
