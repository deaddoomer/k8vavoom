//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2019 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, either version 3 of the License, or
//**  (at your option) any later version.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
//
//  This section contains the main bot AI. The
//  main bot AI loop, B_Think, is called every tic.
//  Also included are various bot decision-making
//  procedures, such as B_CheckStuff and B_SetEnemy.
//
//**************************************************************************
#ifdef IN_VCC
# include "../../common/botai/BotPlayer_base.vc"
#else
# include "progs/botai/BotPlayer_base.vc"
#endif

// Main bot class
class BotPlayer : BotPlayerBase;


//==========================================================================
//
//  IsDangerous
//
//==========================================================================
override bool IsDangerous (sector_t *sec) {
  switch (sec->special&~SECSPEC_SECRET_MASK) {
    case 71:  // Damage_Sludge
    case 82:  // Damage_LavaWimpy
    case 83:  // Damage_LavaHefty
    case 84:  // Scroll_EastLavaDamage
      return true;
  }
  return ::IsDangerous(sec);
}
