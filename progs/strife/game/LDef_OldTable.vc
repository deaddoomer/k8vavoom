//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2023 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
//const int NUM_SPECIALS = 236;


#if 0
//==========================================================================
//
//  InitTranslationTables
//
//==========================================================================
override void InitTranslationTables () {
  //  0
  SetLineTrans(1, LNSPEC_DoorRaise, 0, 16, 150, 0, 0, SPAC_Use, true, true);
  SetLineTrans(2, LNSPEC_DoorOpen, -1, 16, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(3, LNSPEC_DoorClose, -1, 16, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(4, LNSPEC_DoorRaise, -1, 16, 150, 0, 0, SPAC_Cross, false, true);
  SetLineTrans(5, LNSPEC_FloorRaiseToLowestCeiling, -1, 8, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(6, LNSPEC_CeilingCrushAndRaiseA, -1, 16, 16, 10, 0, SPAC_Cross, false);
  SetLineTrans(7, LNSPEC_StairsBuildUpDoom, -1, 2, 8, 0, 0, SPAC_Use, false);
  SetLineTrans(8, LNSPEC_StairsBuildUpDoom, -1, 2, 8, 0, 0, SPAC_Cross, false);
  SetLineTrans(9, LNSPEC_FloorDonut, -1, 4, 4, 0, 0, SPAC_Use, false);

  SetLineTrans(10, LNSPEC_PlatDownWaitUpStayLip, -1, 32, 105, 0, 0, SPAC_Cross, false, true);
  SetLineTrans(11, LNSPEC_ExitNormal, -1, 0, 0, 0, 0, SPAC_Use, false); // --  // is -1 a bug?
  SetLineTrans(12, LNSPEC_LightMaxNeighbor, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(13, LNSPEC_LightChangeToValue, -1, 255, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(14, LNSPEC_FloorRaiseByValueChangeTex, -1, 4, 4, 0, 0, SPAC_Use, false);
  SetLineTrans(15, LNSPEC_FloorRaiseByValueChangeTex, -1, 4, 3, 0, 0, SPAC_Use, false);
  SetLineTrans(16, LNSPEC_DoorCloseWaitOpen, -1, 16, 240, 0, 0, SPAC_Cross, false);
  SetLineTrans(17, LNSPEC_LightStrobeDoom, -1, 5, 35, 0, 0, SPAC_Cross, false);
  SetLineTrans(18, LNSPEC_FloorRaiseToNearest, -1, 8, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(19, LNSPEC_FloorLowerToHighest, -1, 8, 128, 0, 0, SPAC_Cross, false);

  SetLineTrans(20, LNSPEC_FloorRaiseToNearestChange, -1, 4, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(21, LNSPEC_PlatDownWaitUpStayLip, -1, 32, 105, 0, 0, SPAC_Use, false);
  SetLineTrans(22, LNSPEC_FloorRaiseToNearestChange, -1, 4, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(23, LNSPEC_FloorLowerToLowest, -1, 8, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(24, LNSPEC_FloorRaiseToLowestCeiling, -1, 8, 0, 0, 0, SPAC_Impact, false);
  SetLineTrans(25, LNSPEC_CeilingCrushAndRaiseA, -1, 8, 8, 10, 0, SPAC_Cross, false);
  SetLineTrans(26, LNSPEC_DoorLockedRaise, 0, 16, 150, 4, 0, SPAC_Use, true);
  SetLineTrans(27, LNSPEC_DoorLockedRaise, 0, 16, 150, 3, 0, SPAC_Use, true);
  SetLineTrans(28, LNSPEC_DoorLockedRaise, 0, 16, 150, 11, 0, SPAC_Use, true);
  SetLineTrans(29, LNSPEC_DoorRaise, -1, 16, 150, 0, 0, SPAC_Use, false);

  SetLineTrans(30, LNSPEC_FloorRaiseByTexture, -1, 8, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(31, LNSPEC_DoorOpen, 0, 16, 0, 0, 0, SPAC_Use, false, true);
  SetLineTrans(32, LNSPEC_DoorLockedRaise, 0, 16, 0, 4, 0, SPAC_Use, false, true);
  SetLineTrans(33, LNSPEC_DoorLockedRaise, 0, 16, 0, 11, 0, SPAC_Use, false, true);
  SetLineTrans(34, LNSPEC_DoorLockedRaise, 0, 16, 0, 3, 0, SPAC_Use, false, true);
  SetLineTrans(35, LNSPEC_LightChangeToValue, -1, 35, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(36, LNSPEC_FloorLowerToHighest, -1, 32, 136, 0, 0, SPAC_Cross, false);
  SetLineTrans(37, LNSPEC_FloorLowerToLowestChange, -1, 8, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(38, LNSPEC_FloorLowerToLowest, -1, 8, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(39, LNSPEC_Teleport, 0, -1, 0, 0, 0, SPAC_Cross, false, true);

  SetLineTrans(40, LNSPEC_ACSExecuteWithResult, 0, 40, -1, 0, 0, SPAC_Use, false);
  SetLineTrans(41, LNSPEC_CeilingLowerToFloor, -1, 8, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(42, LNSPEC_DoorClose, -1, 16, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(43, LNSPEC_CeilingLowerToFloor, -1, 8, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(44, LNSPEC_CeilingLowerAndCrush, -1, 8, 10, 0, 0, SPAC_Cross, false);
  SetLineTrans(45, LNSPEC_FloorLowerToHighest, -1, 8, 128, 0, 0, SPAC_Use, true);
  SetLineTrans(46, LNSPEC_DoorOpen, -1, 16, 0, 0, 0, SPAC_Impact, true, true);
  SetLineTrans(47, LNSPEC_FloorRaiseToNearestChange, -1, 4, 0, 0, 0, SPAC_Impact, false);
  SetLineTrans(48, LNSPEC_ScrollTextureLeft, 64, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(49, LNSPEC_CeilingCrushAndRaiseA, -1, 8, 8, 10, 0, SPAC_Use, false);

  SetLineTrans(50, LNSPEC_DoorClose, -1, 16, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(51, LNSPEC_ExitSecret, -1, 0, 0, 0, 0, SPAC_Use, false); // S1 EndLevelSecret; is -1 a bug?
  SetLineTrans(52, LNSPEC_ACSExecuteWithResult, 0, 52, -1, 0, 0, SPAC_Cross, false);
  SetLineTrans(53, LNSPEC_PlatPerpetualRaiseLip, -1, 8, 105, 0, 0, SPAC_Cross, false);
  SetLineTrans(54, LNSPEC_PlatStop, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(55, LNSPEC_FloorRaiseAndCrush, -1, 8, 10, 0, 0, SPAC_Use, false);
  SetLineTrans(56, LNSPEC_FloorRaiseAndCrush, -1, 8, 10, 0, 0, SPAC_Cross, false);
  SetLineTrans(57, LNSPEC_CeilingCrushStop, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(58, LNSPEC_FloorRaiseByValue, -1, 8, 64, 0, 0, SPAC_Cross, false);
  SetLineTrans(59, LNSPEC_FloorRaiseByValueChange, -1, 8, 24, 0, 0, SPAC_Cross, false);

  SetLineTrans(60, LNSPEC_FloorLowerToLowest, -1, 8, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(61, LNSPEC_DoorOpen, -1, 16, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(62, LNSPEC_PlatDownWaitUpStayLip, -1, 32, 105, 0, 0, SPAC_Use, true);
  SetLineTrans(63, LNSPEC_DoorRaise, -1, 16, 150, 0, 0, SPAC_Use, true);
  SetLineTrans(64, LNSPEC_FloorRaiseToLowestCeiling, -1, 8, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(65, LNSPEC_FloorRaiseAndCrush, -1, 8, 10, 0, 0, SPAC_Use, true);
  SetLineTrans(66, LNSPEC_FloorRaiseByValueChangeTex, -1, 4, 3, 0, 0, SPAC_Use, true);
  SetLineTrans(67, LNSPEC_FloorRaiseByValueChangeTex, -1, 4, 4, 0, 0, SPAC_Use, true);
  SetLineTrans(68, LNSPEC_FloorRaiseToNearestChange, -1, 4, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(69, LNSPEC_FloorRaiseToNearest, -1, 8, 0, 0, 0, SPAC_Use, true);

  SetLineTrans(70, LNSPEC_FloorLowerToHighest, -1, 32, 136, 0, 0, SPAC_Use, true);
  SetLineTrans(71, LNSPEC_FloorLowerToHighest, -1, 32, 136, 0, 0, SPAC_Use, false);
  SetLineTrans(72, LNSPEC_CeilingLowerAndCrush, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(73, LNSPEC_CeilingCrushAndRaiseA, -1, 8, 8, 10, 0, SPAC_Cross, true);
  SetLineTrans(74, LNSPEC_CeilingCrushStop, -1, 0, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(75, LNSPEC_DoorClose, -1, 16, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(76, LNSPEC_DoorCloseWaitOpen, -1, 16, 240, 0, 0, SPAC_Cross, true);
  SetLineTrans(77, LNSPEC_CeilingCrushAndRaiseA, -1, 16, 16, 10, 0, SPAC_Cross, true);
  //  78
  SetLineTrans(79, LNSPEC_LightChangeToValue, -1, 35, 0, 0, 0, SPAC_Cross, true);

  SetLineTrans(80, LNSPEC_LightMaxNeighbor, -1, 0, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(81, LNSPEC_LightChangeToValue, -1, 255, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(82, LNSPEC_FloorLowerToLowest, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(83, LNSPEC_FloorLowerToHighest, -1, 8, 128, 0, 0, SPAC_Cross, true);
  SetLineTrans(84, LNSPEC_FloorLowerToLowestChange, -1, 8, 0, 0, 0, SPAC_Cross, true);
  //  85
  SetLineTrans(86, LNSPEC_DoorOpen, -1, 16, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(87, LNSPEC_PlatPerpetualRaiseLip, -1, 8, 105, 0, 0, SPAC_Cross, true);
  SetLineTrans(88, LNSPEC_PlatDownWaitUpStayLip, -1, 32, 105, 0, 0, SPAC_Cross, true, true);
  SetLineTrans(89, LNSPEC_PlatStop, -1, 0, 0, 0, 0, SPAC_Cross, true);

  SetLineTrans(90, LNSPEC_DoorRaise, -1, 16, 150, 0, 0, SPAC_Cross, true);
  SetLineTrans(91, LNSPEC_FloorRaiseToLowestCeiling, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(92, LNSPEC_FloorRaiseByValue, -1, 8, 24, 0, 0, SPAC_Cross, true);
  SetLineTrans(93, LNSPEC_FloorRaiseByValueChange, -1, 8, 24, 0, 0, SPAC_Cross, true);
  SetLineTrans(94, LNSPEC_FloorRaiseAndCrush, -1, 8, 10, 0, 0, SPAC_Cross, true);
  SetLineTrans(95, LNSPEC_FloorRaiseToNearestChange, -1, 4, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(96, LNSPEC_FloorRaiseByTexture, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(97, LNSPEC_Teleport, 0, -1, 0, 0, 0, SPAC_Cross, true, true);
  SetLineTrans(98, LNSPEC_FloorLowerToHighest, -1, 32, 136, 0, 0, SPAC_Cross, true);
  SetLineTrans(99, LNSPEC_DoorLockedRaise, -1, 64, 0, 4, 0, SPAC_Use, true);

  SetLineTrans(100, LNSPEC_StairsBuildUpDoom, -1, 32, 16, 0, 0, SPAC_Cross, false);
  SetLineTrans(101, LNSPEC_FloorRaiseToLowestCeiling, -1, 8, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(102, LNSPEC_FloorLowerToHighest, -1, 8, 128, 0, 0, SPAC_Use, false);
  SetLineTrans(103, LNSPEC_DoorOpen, -1, 16, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(104, LNSPEC_LightMinNeighbor, -1, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(105, LNSPEC_DoorRaise, -1, 64, 150, 0, 0, SPAC_Cross, true);
  SetLineTrans(106, LNSPEC_DoorOpen, -1, 64, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(107, LNSPEC_DoorClose, -1, 64, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(108, LNSPEC_DoorRaise, -1, 64, 150, 0, 0, SPAC_Cross, false);
  SetLineTrans(109, LNSPEC_DoorOpen, -1, 64, 0, 0, 0, SPAC_Cross, false);

  SetLineTrans(110, LNSPEC_DoorClose, -1, 64, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(111, LNSPEC_DoorRaise, -1, 64, 150, 0, 0, SPAC_Use, false);
  SetLineTrans(112, LNSPEC_DoorOpen, -1, 64, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(113, LNSPEC_DoorClose, -1, 64, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(114, LNSPEC_DoorRaise, -1, 64, 150, 0, 0, SPAC_Use, true);
  SetLineTrans(115, LNSPEC_DoorOpen, -1, 64, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(116, LNSPEC_DoorClose, -1, 64, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(117, LNSPEC_DoorRaise, 0, 64, 150, 0, 0, SPAC_Use, true);
  SetLineTrans(118, LNSPEC_DoorOpen, 0, 64, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(119, LNSPEC_FloorRaiseToNearest, -1, 8, 0, 0, 0, SPAC_Cross, false);

  SetLineTrans(120, LNSPEC_PlatDownWaitUpStayLip, -1, 64, 105, 0, 0, SPAC_Cross, true);
  SetLineTrans(121, LNSPEC_PlatDownWaitUpStayLip, -1, 64, 105, 0, 0, SPAC_Cross, false);
  SetLineTrans(122, LNSPEC_PlatDownWaitUpStayLip, -1, 64, 105, 0, 0, SPAC_Use, false);
  SetLineTrans(123, LNSPEC_PlatDownWaitUpStayLip, -1, 64, 105, 0, 0, SPAC_Use, true);
  SetLineTrans(124, LNSPEC_ExitSecret, -1, 0, 0, 0, 0, SPAC_Cross, false); // W1 EndLevelSecret UNUSED; is -1 a bug?
  SetLineTrans(125, LNSPEC_Teleport, 0, -1, 0, 0, 0, SPAC_MCross, false);
  SetLineTrans(126, LNSPEC_Teleport, 0, -1, 0, 0, 0, SPAC_MCross, true);
  SetLineTrans(127, LNSPEC_StairsBuildUpDoom, -1, 32, 16, 0, 0, SPAC_Use, false);
  SetLineTrans(128, LNSPEC_FloorRaiseToNearest, -1, 8, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(129, LNSPEC_FloorRaiseToNearest, -1, 32, 0, 0, 0, SPAC_Cross, true);

  SetLineTrans(130, LNSPEC_FloorRaiseToNearest, -1, 32, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(131, LNSPEC_FloorRaiseToNearest, -1, 32, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(132, LNSPEC_FloorRaiseToNearest, -1, 32, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(133, LNSPEC_DoorLockedRaise, -1, 64, 0, 4, 0, SPAC_Use, false);
  SetLineTrans(134, LNSPEC_DoorLockedRaise, -1, 64, 0, 11, 0, SPAC_Use, true);
  SetLineTrans(135, LNSPEC_DoorLockedRaise, -1, 64, 0, 11, 0, SPAC_Use, false);
  SetLineTrans(136, LNSPEC_DoorLockedRaise, -1, 64, 0, 3, 0, SPAC_Use, true);
  SetLineTrans(137, LNSPEC_DoorLockedRaise, -1, 64, 0, 3, 0, SPAC_Use, false);
  SetLineTrans(138, LNSPEC_LightChangeToValue, -1, 255, 0, 0, 0, SPAC_Use, true);
  SetLineTrans(139, LNSPEC_LightChangeToValue, -1, 35, 0, 0, 0, SPAC_Use, true);

  SetLineTrans(140, LNSPEC_FloorRaiseByValueTimes8, -1, 8, 64, 0, 0, SPAC_Use, false);
  SetLineTrans(141, LNSPEC_CeilingCrushAndRaiseSilentA, -1, 8, 8, 10, 0, SPAC_Cross, false);
  SetLineTrans(142, LNSPEC_ScrollTextureUp, 64, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(143, LNSPEC_ScrollTextureDown, 64, 0, 0, 0, 0, SPAC_Cross, false);
  SetLineTrans(144, LNSPEC_DoorAnimated, -1, 4, 105, 0, 0, SPAC_Use, true, true);
  SetLineTrans(145, LNSPEC_ACSExecuteWithResult, 0, 145, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(146, LNSPEC_StairsGeneric, -1, 16, 16, 0, 0, SPAC_Use, false);
  SetLineTrans(147, LNSPEC_ClearForceField, -1, 0, 0, 0, 0, SPAC_Use, false);
  SetLineTrans(148, LNSPEC_ForceField, -1, 0, 0, 0, 0, SPAC_Use, true);
  //  149 UNUSED

  SetLineTrans(150, LNSPEC_NoiseAlert, 0, 0, 0, 0, 0, SPAC_Cross, true);
  SetLineTrans(151, LNSPEC_DoorLockedRaise, -1, 64, 0, 10, 0, SPAC_Use, true);
  SetLineTrans(152, LNSPEC_DoorLockedRaise, -1, 64, 0, 17, 0, SPAC_Use, true);
  SetLineTrans(153, LNSPEC_DoorLockedRaise, -1, 64, 0, 12, 0, SPAC_Use, true);
  SetLineTrans(154, LNSPEC_ACSLockedExecute, 0, 0, 154, -1, 10, SPAC_Use, true);
  SetLineTrans(155, LNSPEC_PlatUpWaitDownStay, -1, 32, 105, 0, 0, SPAC_Use, true);
  SetLineTrans(156, LNSPEC_DoorLockedRaise, 0, 16, 0, 17, 0, SPAC_Use, false);
  SetLineTrans(157, LNSPEC_DoorLockedRaise, 0, 16, 0, 12, 0, SPAC_Use, false);
  SetLineTrans(158, LNSPEC_DoorLockedRaise, 0, 16, 0, 10, 0, SPAC_Use, false);
  SetLineTrans(159, LNSPEC_DoorLockedRaise, 0, 16, 150, 10, 0, SPAC_Use, true);

  SetLineTrans(160, LNSPEC_DoorLockedRaise, 0, 16, 150, 12, 0, SPAC_Use, true);
  //  161 (Teaser governor's room)
  SetLineTrans(162, LNSPEC_DoorLockedRaise, -1, 64, 0, 17, 0, SPAC_Use, false);
  SetLineTrans(163, LNSPEC_DoorLockedRaise, -1, 64, 0, 12, 0, SPAC_Use, false);
  SetLineTrans(164, LNSPEC_DoorLockedRaise, -1, 64, 0, 10, 0, SPAC_Use, false);
  SetLineTrans(165, LNSPEC_DoorLockedRaise, 0, 0, 0, 102, 0, SPAC_Use, true);
  SetLineTrans(166, LNSPEC_DoorLockedRaise, 0, 16, 150, 6, 0, SPAC_Use, true);
  SetLineTrans(167, LNSPEC_DoorLockedRaise, -1, 64, 0, 6, 0, SPAC_Use, false);
  SetLineTrans(168, LNSPEC_DoorLockedRaise, -1, 64, 0, 6, 0, SPAC_Use, true);
  SetLineTrans(169, LNSPEC_DoorLockedRaise, 0, 16, 0, 1, 0, SPAC_Use, false);

  SetLineTrans(170, LNSPEC_DoorLockedRaise, 0, 16, 150, 2, 0, SPAC_Use, true);
  SetLineTrans(171, LNSPEC_DoorLockedRaise, -1, 16, 0, 5, 0, SPAC_Use, false);
  SetLineTrans(172, LNSPEC_DoorLockedRaise, -1, 16, 0, 7, 0, SPAC_Use, true);
  SetLineTrans(173, LNSPEC_DoorLockedRaise, -1, 16, 0, 8, 0, SPAC_Use, true);
  SetLineTrans(174, LNSPEC_ACSExecuteWithResult, 0, 174, -1, 0, 0, SPAC_Cross, false);
  SetLineTrans(175, LNSPEC_ACSExecuteWithResult, 0, 175, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(176, LNSPEC_DoorLockedRaise, -1, 16, 0, 9, 0, SPAC_Use, true);
  SetLineTrans(177, LNSPEC_ACSLockedExecute, 0, 0, 177, -1, 9, SPAC_Use, true);
  SetLineTrans(178, LNSPEC_StairsGeneric, -1, 16, 16, 0, 0, SPAC_Cross, false);
  SetLineTrans(179, LNSPEC_CeilingLowerAndCrush, -1, 8, 1, 0, 0, SPAC_Cross, false);

  SetLineTrans(180, LNSPEC_ACSExecuteWithResult, 0, 180, -1, 0, 0, SPAC_Impact, false);
  SetLineTrans(181, LNSPEC_ACSExecuteWithResult, 0, 181, -1, 0, 0, SPAC_Use, false);
  SetLineTrans(182, LNSPEC_GlassBreak, -1, 255, 0, 0, 0, SPAC_Impact | SPAC_PCross, false, true);
  SetLineTrans(183, LNSPEC_ACSExecuteWithResult, 0, 183, -1, 0, 0, SPAC_Cross, false);
  SetLineTrans(184, LNSPEC_ACSExecuteWithResult, 0, 184, -1, 0, 0, SPAC_Cross, true); // SR?
  SetLineTrans(185, LNSPEC_TeleportNoFog, 0, 0, -1, 0, 0, SPAC_Cross, true, true);
  SetLineTrans(186, LNSPEC_ACSExecuteWithResult, 0, 186, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(187, LNSPEC_ACSExecuteWithResult, 0, 187, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(188, LNSPEC_ACSExecuteWithResult, 0, 188, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(189, LNSPEC_ACSLockedExecute, 0, 0, 189, -1, 13, SPAC_Use, false);

  SetLineTrans(190, LNSPEC_DoorLockedRaise, 0, 16, 150, 15, 0, SPAC_Use, true);
  SetLineTrans(191, LNSPEC_DoorLockedRaise, -1, 16, 0, 14, 0, SPAC_Use, true);
  SetLineTrans(192, LNSPEC_DoorLockedRaise, -1, 16, 0, 16, 0, SPAC_Use, false);
  SetLineTrans(193, LNSPEC_ACSExecuteWithResult, 0, 193, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(194, LNSPEC_ACSExecuteWithResult, 0, 194, -1, 0, 0, SPAC_Use, false);
  SetLineTrans(195, LNSPEC_TeleportZombieChanger, 0, -1, 0, 0, 0, SPAC_Cross, true, true);
  SetLineTrans(196, LNSPEC_ACSExecuteWithResult, 0, 196, -1, 0, 0, SPAC_Cross, true); // TRIGGER? UNUSED
  SetLineTrans(197, LNSPEC_ACSExecuteWithResult, 0, 197, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(198, LNSPEC_ACSExecuteWithResult, 0, 198, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(199, LNSPEC_ACSExecuteWithResult, 0, 199, -1, 0, 0, SPAC_Use, false);

  SetLineTrans(200, LNSPEC_ACSExecuteWithResult, 0, 200, -1, 0, 0, SPAC_Cross, true);
  //  201 SR PlaySound UNUSED
  SetLineTrans(202, 174, -1, 0, 1, 0, 0, SPAC_Cross, false);
  SetLineTrans(203, LNSPEC_ACSExecuteWithResult, 0, 203, -1, 0, 0, SPAC_Use, true);
  SetLineTrans(204, LNSPEC_ACSExecuteWithResult, 0, 204, -1, 0, 0, SPAC_Use, false);
  SetLineTrans(205, LNSPEC_DoorLockedRaise, 0, 0, 0, 103, 0, SPAC_Use, true);
  SetLineTrans(206, LNSPEC_ACSExecuteWithResult, 0, 206, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(207, LNSPEC_DoorAnimated, -1, 4, 105, 0, 0, SPAC_Use, true);
  SetLineTrans(208, LNSPEC_ACSExecuteWithResult, 0, 208, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(209, LNSPEC_ACSExecuteWithResult, 0, 209, -1, 0, 0, SPAC_Use, false);

  SetLineTrans(210, 174, -1, 0, 0, 0, 0, SPAC_Cross, false);
  //  211 S1 PlaySound UNUSED
  SetLineTrans(212, LNSPEC_ACSExecuteWithResult, 0, 212, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(213, LNSPEC_ACSExecuteWithResult, 0, 213, -1, 0, 0, SPAC_Use, true);
  SetLineTrans(214, LNSPEC_ACSExecuteWithResult, 0, 214, -1, 0, 0, SPAC_Use, true);
  SetLineTrans(215, LNSPEC_ACSExecuteWithResult, 0, 215, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(216, LNSPEC_ACSExecuteWithResult, 0, 216, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(217, LNSPEC_DoorLockedRaise, 0, 16, 150, 23, 0, SPAC_Use, true);
  //  218 W1 Clear NonBlock Quest UNUSED
  SetLineTrans(219, LNSPEC_ACSLockedExecute, 0, 0, 219, -1, 18, SPAC_Use, false);

  SetLineTrans(220, LNSPEC_ACSLockedExecute, 0, 0, 220, -1, 19, SPAC_Use, false);
  SetLineTrans(221, LNSPEC_DoorLockedRaise, 0, 16, 150, 24, 0, SPAC_Use, true);
  SetLineTrans(222, LNSPEC_DoorLockedRaise, -1, 16, 0, 25, 0, SPAC_Use, false); // ??? Realy a key?
  SetLineTrans(223, LNSPEC_DoorLockedRaise, -1, 16, 0, 26, 0, SPAC_Use, true);
  SetLineTrans(224, LNSPEC_DoorLockedRaise, 0, 16, 0, 20, 0, SPAC_Use, false);
  SetLineTrans(225, LNSPEC_DoorLockedRaise, 0, 16, 0, 21, 0, SPAC_Use, false);
  SetLineTrans(226, LNSPEC_ACSExecuteWithResult, 0, 226, -1, 0, 0, SPAC_Use, false);
  SetLineTrans(227, LNSPEC_ACSExecuteWithResult, 0, 227, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(228, LNSPEC_ACSExecuteWithResult, 0, 228, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(229, LNSPEC_ACSExecuteWithResult, 0, 229, -1, 0, 0, SPAC_Use, true);

  SetLineTrans(230, LNSPEC_ACSExecuteWithResult, 0, 230, -1, 0, 0, SPAC_Cross, true);
  SetLineTrans(231, LNSPEC_Teleport, 0, -1, 0, 0, 0, SPAC_Cross, true, true); // ??? (InSou)
  SetLineTrans(232, LNSPEC_ACSExecuteWithResult, 0, 232, -1, 0, 0, SPAC_Use, true);
  SetLineTrans(233, LNSPEC_ACSExecuteWithResult, 0, 233, -1, 0, 0, SPAC_Use, false);
  SetLineTrans(234, LNSPEC_ACSExecuteWithResult, 0, 234, -1, 0, 0, SPAC_Use, true);
  SetLineTrans(235, LNSPEC_ACSExecuteWithResult, 0, 235, -1, 0, 0, SPAC_Use, false);
}
#endif
