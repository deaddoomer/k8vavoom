//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2019 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, either version 3 of the License, or
//**  (at your option) any later version.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class MenuScreenPlayerSetup : MenuScreen;

MenuInputLine   PlayerName;
MenuChoiceSlider  ColR;
MenuChoiceSlider  ColG;
MenuChoiceSlider  ColB;
MenuSpriteAnim    Anim;

//==========================================================================
//
//  CreateChoices
//
//==========================================================================

override void CreateChoices()
{
  int currY = ChoicesStartY;

  PlayerName = MenuInputLine(NewChild(MenuInputLine));
  PlayerName.SetOrigin(ChoicesStartX + 10, currY);
  PlayerName.CursorXOffs = -10;
  PlayerName.Text = "Name";
  PlayerName.Value = GetCvarS('Name');
  PlayerName.ValueChanged = &ChangePlayerName;
  currY += PlayerName.Height;

  int Col = ParseColor(GetCvarS('color'));

  ColR = NewChild(MenuChoiceSlider);
  ColR.SetOrigin(ChoicesStartX, currY);
  ColR.Text = "Red";
  ColR.ValueDelta = 0.1;
  ColR.SetInitialValue(float((Col >> 16) & 0xff) / 255.0);
  ColR.ValueChanging = &ChangeColor;
  currY += ColR.Height;

  ColG = NewChild(MenuChoiceSlider);
  ColG.SetOrigin(ChoicesStartX, currY);
  ColG.Text = "Green";
  ColG.ValueDelta = 0.1;
  ColG.SetInitialValue(float((Col >> 8) & 0xff) / 255.0);
  ColG.ValueChanging = &ChangeColor;
  currY += ColG.Height;

  ColB = NewChild(MenuChoiceSlider);
  ColB.SetOrigin(ChoicesStartX, currY);
  ColB.Text = "Blue";
  ColB.ValueDelta = 0.1;
  ColB.SetInitialValue(float(Col & 0xff) / 255.0);
  ColB.ValueChanging = &ChangeColor;
  currY += ColB.Height;

  R_InstallSprite("PLAY", 500);

  Anim = MenuSpriteAnim(NewChild(MenuSpriteAnim));
  Anim.SetPos(250, 140);
  Anim.SprDef = 500;
  Anim.Speed = 8;
  Anim.NumFrames = 4;
  Anim.TranslStart = 128;
  Anim.TranslEnd = 143;
  Anim.Color = Col;
}

//==========================================================================
//
//  ChangePlayerName
//
//==========================================================================

void ChangePlayerName(Object Sender)
{
  SetCvarS('Name', PlayerName.Value);
}

//==========================================================================
//
//  ChangeColor
//
//==========================================================================

bool ChangeColor(Object Sender, float newValue)
{
  float r = Sender == ColR ? newValue : ColR.Value;
  float g = Sender == ColG ? newValue : ColG.Value;
  float b = Sender == ColB ? newValue : ColB.Value;
  int Col = RGBA(int(r * 255.0), int(g * 255.0), int(b * 255.0), 255);

  SetCvarS('color', va("%x %x %x", int(r * 255.0), int(g * 255.0), int(b * 255.0)));
  Anim.Color = Col;
  return true;
}

defaultproperties
{
  ChoicesStartX = 64;
  ChoicesStartY = 40;
  SelectorType = MenuSelector_SmallRight;
  Title = "PLAYER SETUP";
}
