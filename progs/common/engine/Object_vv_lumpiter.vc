//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2020 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
//
//  Lump iteration
//
//==========================================================================
struct WadLumpIteratorInfoNS {
  EWadNamespace ns;
  int curr;
}

static final bool WadIterateNS_opIterInit (out WadLumpIteratorInfoNS it, EWadNamespace ns) {
  it.ns = ns;
  it.curr = W_IterateNS(-1, ns);
  return (it.curr >= 0);
}

static final bool WadIterateNS_opIterNext (out WadLumpIteratorInfoNS it, out int lumpnum) {
  if (it.curr < 0) return false; // done
  lumpnum = it.curr;
  it.curr = W_IterateNS(it.curr, it.ns);
  return true;
}


// ////////////////////////////////////////////////////////////////////////// //
struct WadLumpIteratorInfoName {
  string fname;
  int curr;
}

static final bool WadIterateFile_opIterInit (out WadLumpIteratorInfoName it, string fname) {
  it.fname = fname;
  it.curr = W_IterateFile(-1, fname);
  return (it.curr >= 0);
}

static final bool WadIterateFile_opIterNext (out WadLumpIteratorInfoName it, out int lumpnum) {
  if (it.curr < 0) return false; // done
  lumpnum = it.curr;
  it.curr = W_IterateFile(it.curr, it.fname);
  return true;
}
