//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2022 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
//**
//**  Something for monsters to hate and shoot at
//**
//**************************************************************************
class HateTarget : Actor __mobjinfo__(9076);


//==========================================================================
//
//  BeginPlay
//
//==========================================================================
override void BeginPlay () {
  ::BeginPlay();
  if (Angles.yaw) {
    // each degree translates into 5 units of health and the result is
    // rounded up to nearest 10
    Health = (int(Angles.yaw)+1)/2*10;
  } else {
    Special2 = 1;
    Health = 1000001;
  }
}


//==========================================================================
//
//  TakeSpecialDamage
//
//==========================================================================
override int TakeSpecialDamage (EntityEx inflictor, EntityEx source, int damage, name DmgType, optional bool forced) {
  if (Special2 && !forced) return 0;
  return damage;
}


//==========================================================================
//
//  AngleIncrements
//
//==========================================================================
override int AngleIncrements () {
  return 1;
}


states {
Spawn:
  TNT1 A -1
  Stop
}


defaultproperties {
  Radius = 20.0;
  Height = 56.0;
  Mass = 99999.0;
  bShootable = true;
  bNoGravity = true;
  bNoBlood = true;
  bNoSplash = true;
}
