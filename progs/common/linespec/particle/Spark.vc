//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2021 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
//**
//**  Actor that makes a particle spark when activated
//**
//**************************************************************************
class Spark : Actor __mobjinfo__(9026);


//==========================================================================
//
//  AngleIncrements
//
//==========================================================================
override int AngleIncrements () {
  return 1;
}


//==========================================================================
//
//  Activate
//
//==========================================================================
override bool Activate (EntityEx Activator) {
  ::Activate(Activator);
  foreach (auto i; 0..MAXPLAYERS) {
    auto plr = Level.Game.Players[i];
    if (!plr || !plr.bSpawned) continue;
    PlayerEx(plr).ClientSparkParticles((Args[0] ? Args[0] : 32), Origin, Angles.yaw);
  }
  PlaySound('world/spark', CHAN_AUTO);
  return true;
}


defaultproperties {
  bNoSector = true;
  bNoBlockmap = true;
  bNoGravity = true;
}
