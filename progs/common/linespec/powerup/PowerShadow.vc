//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2022 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class PowerShadow : PowerInvisibility;

int ShadowStage;


//==========================================================================
//
//  HandlePickup
//
//  if player already has it, picking it up again makes him completely
//  ivisible
//
//==========================================================================
override bool HandlePickup (Inventory Item) {
  if (ShadowStage == 0 && Item.Class == Class) {
    Powerup Pow = Powerup(Item);
    // permanent powerups can be always picked up
    if (!Pow.EffectTime) {
      Item.bPickupGood = true;
      return true;
    }
    // only increase effect time
    if (EffectTime < Pow.EffectTime) EffectTime = Pow.EffectTime;
    // go to stage 2
    ShadowStage = 1;
    Item.bPickupGood = true;
    return true;
  }

  if (Inventory) return Inventory.HandlePickup(Item);
  return false;
}


//==========================================================================
//
//  InitEffect
//
//==========================================================================
override void InitEffect () {
  if (!Owner) return;
  Owner.RenderStyle = (ShadowStage == 0 ? STYLE_Translucent : STYLE_None);
  Owner.Alpha = (ShadowStage == 0 ? 0.25 : 0.0);
  EntityEx(Owner).bShadow = true;
}


//==========================================================================
//
//  GetViewEntRenderParams
//
//==========================================================================
override void GetViewEntRenderParams (ref float OutAlpha, ref int OutRenderStyle) {
  if (EffectTime > PlayerEx::BLINKTHRESHOLD || (int(4.0*EffectTime)&1)) {
    OutRenderStyle = STYLE_Translucent;
    OutAlpha = 0.4;
  }
  if (Inventory) Inventory.GetViewEntRenderParams(OutAlpha, OutRenderStyle);
}


defaultproperties {
  EffectTime = 55.0;
  bHubPower = true;
  bShowTimer = true;
  PowerupTimerName = "Shadow";
}
