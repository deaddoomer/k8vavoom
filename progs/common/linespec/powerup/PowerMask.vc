//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2019 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, either version 3 of the License, or
//**  (at your option) any later version.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class PowerMask : PowerIronFeet;

//==========================================================================
//
//  DoEffect
//
//==========================================================================

override void DoEffect()
{
  ::DoEffect();

  if (!Owner)
  {
    return;
  }

  if (!(Level.XLevel.TicTime & 0x3f))
  {
    Owner.PlaySound('misc/mask', CHAN_VOICE);
  }
}

//==========================================================================
//
//  AbsorbDamage
//
//==========================================================================

override void AbsorbDamage(int damage, name DmgType, out int NewDamage)
{
  if (nameicmp(DmgType, 'Fire') == 0)
  {
    // If the player wears an environmental suit it's not
    // damaged by fire damage
    NewDamage = 0;
  }
  else
  {
    ::AbsorbDamage(damage, DmgType, NewDamage);
  }
}

defaultproperties
{
  EffectTime = 80.0;
  BlendColour = 0;
  bHubPower = true;
}
