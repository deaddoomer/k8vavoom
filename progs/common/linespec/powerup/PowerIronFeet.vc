//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2022 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class PowerIronFeet : Powerup;


//==========================================================================
//
//  AbsorbDamage
//
//==========================================================================
override int AbsorbDamage (EntityEx source, EntityEx inflictor, int damage, name DmgType, int origDamage) {
  if (nameicmp(DmgType, 'Drowning') == 0) {
    return 0;
  }
  return damage;
}


//==========================================================================
//
//  GetColormapOverride
//
//==========================================================================
override int GetColormapOverride (out bool dontBlink) {
  switch (GetCvarI('k8ColormapEnviSuit')) {
    //case CMapOverride.Original:
    case CMapOverride.Monochrome: dontBlink = true; return MONOCOLOR;
    case CMapOverride.Gold: dontBlink = true; return GOLDCOLOR;
    case CMapOverride.Green: dontBlink = true; return GREENCOLOR;
    case CMapOverride.Red: dontBlink = true; return REDCOLOR;
    case CMapOverride.BeRed: dontBlink = true; return BEREDCOLOR;
    case CMapOverride.Blue: dontBlink = true; return BLUECOLOR;
    case CMapOverride.Inverse: dontBlink = true; return INVERSXCOLOR;
    case CMapOverride.NoColor: dontBlink = true; return TRANSNOCOLOR;
    case CMapOverride.FixedAmp:
      dontBlink = true;
      /*
      if (Owner && Owner.bIsPlayer && Owner.Player && Owner.Player.MO == Owner) {
        Owner.Player.ExtraLight += 8;
      }
      */
      return NOTHINGCOLOR;
  }
  return 0;
}


defaultproperties {
  EffectTime = 60.0;
  BlendColor = RGBA(0, 255, 0, 32);
  bShowTimer = true;
  PowerupTimerName = "EnviroProtection";
}
