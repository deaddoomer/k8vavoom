//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2019 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, either version 3 of the License, or
//**  (at your option) any later version.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class PowerInvisibility : Powerup;

//==========================================================================
//
//  InitEffect
//
//==========================================================================

override void InitEffect()
{
  Owner.RenderStyle = STYLE_OptFuzzy;
  //Owner.Alpha = 0.2;
  Owner.Alpha = 1.0-fclamp(Strength, 0.0, 100.0)/100.0;
  EntityEx(Owner).bShadow = true;
}

//==========================================================================
//
//  DoEffect
//
//==========================================================================

override void DoEffect()
{
  ::DoEffect();
  //  Re-init effect every tic since other PowerInvisibility powers may
  // interfere with this one.
  InitEffect();
}

//==========================================================================
//
//  EndEffect
//
//==========================================================================

override void EndEffect()
{
  if (!Owner)
  {
    return;
  }

  Owner.RenderStyle = STYLE_Normal;
  Owner.Alpha = 1.0;
  EntityEx(Owner).bShadow = false;
  EntityEx(Owner).bGhost = false;
  //  If there are other invisibility powers, reinit their effect.
  Inventory Item;
  for (Item = EntityEx(Owner).Inventory; Item; Item = Item.Inventory)
  {
    if (PowerInvisibility(Item) && Item != self)
    {
      PowerInvisibility(Item).InitEffect();
    }
  }
}

//==========================================================================
//
//  GetViewEntRenderParams
//
//==========================================================================

override void GetViewEntRenderParams(ref float OutAlpha, ref int OutRenderStyle)
{
  if (EffectTime > PlayerEx::BLINKTHRESHOLD ||
    (ftoi(4.0 * EffectTime) & 1))
  {
    OutRenderStyle = STYLE_OptFuzzy;
    OutAlpha = 0.4;
  }
  if (Inventory)
  {
    Inventory.GetViewEntRenderParams(OutAlpha, OutRenderStyle);
  }
}

defaultproperties
{
  bShadow = true;
  EffectTime = 60.0;
  Strength = 80;
}
