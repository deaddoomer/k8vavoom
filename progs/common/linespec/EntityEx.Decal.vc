//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**    Copyright (C) 2018 Ketmar Dark
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//==========================================================================
//
//  SpawnDecal
//
//==========================================================================

final void SpawnDecal (TVec org, name dectype, sector_t* sec, line_t* li) {
  if (!dectype || !sec || !li) return; // just in case

  // calculate `dist` -- distance from wall start
  TVec *v1, *v2;
  if (li->frontsector == sec) { v1 = li->v1; v2 = li->v2; } else { v1 = li->v2; v2 = li->v1; }
  float dx = v2->x-v1->x;
  float dy = v2->y-v1->y;
  float dist = 0; // distance from wall start
       if (fabs(dx) > fabs(dy)) dist = (org.x-v1->x)/dx;
  else if (dy != 0) dist = (org.y-v1->y)/dy;
  else dist = 0;

  print("Want to spawn decal '%s' (%s); dist=%f", NameToStr(dectype), (li->frontsector == sec ? "front" : "back"), dist);
}
