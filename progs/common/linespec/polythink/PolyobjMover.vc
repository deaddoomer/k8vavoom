//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2021 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class PolyobjMover : PolyobjThinker;

int polyobj;
float speed;
float dist;
float angle;
bool carryThings;


//==========================================================================
//
//  Tick
//
//==========================================================================
override void Tick (float deltaTime) {
  float move = speed*deltaTime;
  float absMove = fabs(move);
  if (dist < absMove) move = dist*(move < 0.0 ? -1.0 : 1.0);
  float xMove = move*cos(angle);
  float yMove = move*sin(angle);
  if (XLevel.MovePolyobj(polyobj, xMove, yMove, forced:carryThings)) {
    dist -= absMove;
    if (dist <= 0.0) {
      polyobj_t *poly = XLevel.GetPolyobj(polyobj);
      if (poly->SpecialData == self) poly->SpecialData = none;
      PolyobjStopSequence(poly);
      Destroy();
      return;
    }
  }
}


defaultproperties {
}
