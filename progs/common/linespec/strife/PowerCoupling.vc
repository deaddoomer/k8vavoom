//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2020 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
// 289 287
class PowerCoupling : Actor game(GAME_Strife) __mobjinfo__(220);


//==========================================================================
//
//  Died
//
//==========================================================================
override void Died (EntityEx source, EntityEx inflictor) {
  ::Died(source, inflictor);

  int plridx = -1;
  foreach (int i; 0..MAXPLAYERS) {
    if (Level.Game.Players[i] && Level.Game.Players[i].bSpawned && Level.Game.Players[i].Health > 0) {
      plridx = i;
      break;
    }
  }

  if (plridx < 0) return;

  // if player destroyed it with dagger, alert guards now
  if (LastHeard != source) {
    // temporarely link it to the world, since we need sector
    LinkToWorld(properFloorCheck:false);
    LineSpecialLevelInfo(Level).NoiseAlert(source, self);
    UnlinkFromWorld();
  }
  LineSpecialLevelInfo(Level).EV_DoDoor(225, 16, 0, 0, 0, VerticalDoor::DOOREV_Close, nullptr, Actor(Level.Game.Players[plridx].MO));
  LineSpecialLevelInfo(Level).EV_DoFloor(44, 8, 128, 0, 0, FloorMover::FLOOREV_LowerToHighest, nullptr);
  EntityEx(Level.Game.Players[plridx].MO).GiveInventoryType(QuestItem6);
  PlayerEx(Level.Game.Players[plridx]).ClientVoice(13);
  PlayerEx(Level.Game.Players[plridx]).SetObjectives(13);
  Spawn(BrokenPowerCoupling, Origin);
}


states {
Spawn:
  COUP AB 5
  Loop
}


defaultproperties {
  Health = 40;
  Radius = 17.0;
  Height = 64.0;
  Mass = 999999.0;
  Speed = 6.0*35.0;
  bSolid = true;
  bShootable = true;
  //bUnknown5 = true;
  bInCombat = true;
  bDropped = true;
  bNoBlood = true;
  bNoDeathmatch = true;
}
