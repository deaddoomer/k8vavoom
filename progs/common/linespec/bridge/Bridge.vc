//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2023 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class Bridge : /*Actor*/CustomBridge game(GAME_Raven) __mobjinfo__(118) __scriptid__(21);


//==========================================================================
//
//  A_BridgeInit
//
//==========================================================================
/*
[decorate] final void A_BridgeInit () {
  float StartAngle;
  BridgeBall ball1;
  BridgeBall ball2;
  BridgeBall ball3;

  StartAngle = Random()*360.0;
  Special1 = 0;

  // Spawn triad into world
  ball1 = BridgeBall(Spawn(BridgeBall, Origin));
  ball1.OrbitAngle = StartAngle;
  ball1.Target = self;

  ball2 = BridgeBall(Spawn(BridgeBall, Origin));
  ball2.OrbitAngle = AngleMod360(StartAngle+120.0);
  ball2.Target = self;

  ball3 = BridgeBall(Spawn(BridgeBall, Origin));
  ball3.OrbitAngle = AngleMod360(StartAngle+240.0);
  ball3.Target = self;

  ball1.A_BridgeOrbit();
  ball2.A_BridgeOrbit();
  ball3.A_BridgeOrbit();
}
*/


//==========================================================================
//
//  RemoveThing
//
//==========================================================================
/*
override void RemoveThing () {
  Special1 = true; // removing the bridge
  bSolid = false;
  SetState(GetStatePlus(IdleState, 3, IgnoreJump:true));
}
*/

/*
states {
Spawn:
  TLGL A 2
  TLGL A 2 A_BridgeInit
  TLGL A -1
  Stop
  TLGL A 2
  TLGL A 300
  Stop
}
*/


defaultproperties {
  //Radius = 32.0;
  //Height = 2.0;
  RenderStyle = STYLE_Translucent;
  Alpha = 0.0;
  /*
  bSolid = true;
  bNoGravity = true;
  bNoLiftDrop = true;
  bActLikeBridge = true;
  */
}
