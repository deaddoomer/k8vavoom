//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2019 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, either version 3 of the License, or
//**  (at your option) any later version.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class PhoenixRodPowered : PhoenixRod;

//===========================================================================
//
//  A_InitPhoenixPL2
//
//===========================================================================

final void A_InitPhoenixPL2()
{
  if (!bIsPlayer)
  {
    return;
  }
  Weapon Wpn = PlayerEx(Player).ReadyWeapon;

  PhoenixRod(Wpn).FlameCount = 10 * 35;
}

//===========================================================================
//
//  A_FirePhoenixPL2
//
//  Flame thrower effect.
//
//===========================================================================

final void A_FirePhoenixPL2()
{
  Actor A;
  TVec dir;
  TVec org;

  if (!bIsPlayer)
  {
    return;
  }
  Weapon Wpn = PlayerEx(Player).ReadyWeapon;
  if (!Wpn) return;

  if (--PhoenixRod(Wpn).FlameCount == 0)
  {
    // Out of flame
    Player.SetViewObject(Wpn);
    Player.SetViewState(PS_WEAPON, Wpn.FindState('Shutdown'));
    PlayerEx(Player).Refire = 0;
    return;
  }
  org.x = Origin.x + (Random() - Random()) * 2.0;
  org.y = Origin.y + (Random() - Random()) * 2.0;
  org.z = Origin.z + 26.0 - sin(Angles.pitch);
  org.z -= FloorClip;
  A = Spawn(PhoenixFX2, org);
  A.Target = self;
  A.Angles.yaw = Angles.yaw;
  A.Angles.pitch = Angles.pitch;
  AngleVector(A.Angles, out dir);
  A.Velocity = Velocity + A.Speed * dir;
  if (!PlayerEx(Player).Refire || !(XLevel.TicTime % 38))
  {
    PlaySound('weapons/phoenixpowshoot', CHAN_WEAPON);
  }
  A.CheckMissileSpawn();
}

//===========================================================================
//
//  A_ShutdownPhoenixPL2
//
//===========================================================================

final void A_ShutdownPhoenixPL2()
{
  if (!bIsPlayer)
  {
    return;
  }
  Weapon Wpn = PlayerEx(Player).ReadyWeapon;

  Wpn.DepleteAmmo(Wpn.FireMode);
}

states
{
Fire:
  PHNX B 3 A_InitPhoenixPL2
Hold:
  PHNX C 1 Bright A_FirePhoenixPL2
  PHNX B 4 A_ReFire
Shutdown:
  PHNX B 4 A_ShutdownPhoenixPL2
  Goto Super::Ready
}

defaultproperties
{
  AmmoUse1 = 1;
  AmmoGive1 = 0;
  SisterWeaponType = PhoenixRod;
  bPoweredUp = true;
}
