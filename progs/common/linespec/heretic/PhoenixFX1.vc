//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2020 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class PhoenixFX1 : Actor
  game(GAME_Heretic)
  __scriptid__(163);

//==========================================================================
//
//  DoSpecialDamage
//
//==========================================================================

override int DoSpecialDamage(EntityEx victim, EntityEx source, int damage)
{
  if (victim.Class == Sorcerer2 && P_Random() < 96)
  {
    // D'Sparil teleports away
    Sorcerer2(victim).DSparilTeleport();
    return -1;
  }
  return ::DoSpecialDamage(victim, source, damage);
}

//===========================================================================
//
//  A_PhoenixPuff
//
//===========================================================================

[decorate] final void A_PhoenixPuff()
{
  SeekerMissile(5.0, 10.0);

  EntityEx puff = Spawn(PhoenixPuff, Origin);
  if (puff) {
    float angle = AngleMod360(Angles.yaw + 90.0);
    puff.Velocity.x = 1.3 * cos(angle) * 35.0;
    puff.Velocity.y = 1.3 * sin(angle) * 35.0;
    puff.Velocity.z = 0.0;
  }

  puff = Spawn(PhoenixPuff, Origin);
  if (puff) {
    float angle = AngleMod360(Angles.yaw - 90.0);
    puff.Velocity.x = 1.3 * cos(angle) * 35.0;
    puff.Velocity.y = 1.3 * sin(angle) * 35.0;
    puff.Velocity.z = 0.0;
  }
}

states
{
Spawn:
  FX04 A 4 Bright A_PhoenixPuff
  Loop
Death:
  FX08 A 6 Bright A_Explode
  FX08 BC 5 Bright
  FX08 DEFGH 4 Bright
  Stop
}

defaultproperties
{
  Radius = 11.0;
  Height = 8.0;
  Speed = 700.0;
  MissileDamage = 20;
  RenderStyle = STYLE_Add;
  bMissile = true;
  bNoBlockmap = true;
  bNoGravity = true;
  bDropOff = true;
  bNoTeleport = true;
  bActivatePCross = true;
  bThruGhost = true;
  bActivateImpact = true;
  bBloodSplatter = true;
  DamageType = 'Fire';
  bConditionalFireDamage = true;
  bExplodeParticles = true;
  SightSound = 'weapons/phoenixshoot';
  DeathSound = 'weapons/phoenixhit';
}
