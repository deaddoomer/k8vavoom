//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2023 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class RainPillar : Actor;


//==========================================================================
//
//  DoSpecialDamage
//
//==========================================================================
override int DoSpecialDamage (EntityEx victim, EntityEx source, int damage) {
  if (Actor(victim).bBoss) {
    // decrease damage for bosses
    damage = (P_Random()&7)+1;
  }
  return ::DoSpecialDamage(victim, source, damage);
}


//===========================================================================
//
//  A_RainImpact
//
//===========================================================================
[decorate] final void A_RainImpact () {
  if (Origin.z > FloorZ) {
    SetState(FindState('AirDeath'));
  } else if (P_Random() < 40) {
    HitFloorType();
  }
}


states {
Spawn:
  FX20 A -1 Bright
  Stop
Death:
  FX20 B 4 Bright A_RainImpact
  FX20 CDEF 4 Bright
  Stop
AirDeath:
  FX20 GHI 4 Bright
  Stop
}


defaultproperties {
  Radius = 5.0;
  Height = 12.0;
  Speed = 420.0;
  MissileDamage = 5;
  RenderStyle = STYLE_Add;
  bMissile = true;
  bNoBlockmap = true;
  bNoGravity = true;
  bDropOff = true;
  bNoTeleport = true;
  bActivatePCross = true;
  bBloodSplatter = true;
}


// ////////////////////////////////////////////////////////////////////////// //
class RainPlayer2 : RainPillar;


states {
Spawn:
  FX21 A -1 Bright
  Stop
Death:
  FX21 B 4 Bright A_RainImpact
  FX21 CDEF 4 Bright
  Stop
AirDeath:
  FX21 GHI 4 Bright
  Stop
}


defaultproperties {
}


// ////////////////////////////////////////////////////////////////////////// //
class RainPlayer3 : RainPillar;


states {
Spawn:
  FX22 A -1 Bright
  Stop
Death:
  FX22 B 4 Bright A_RainImpact
  FX22 CDEF 4 Bright
  Stop
AirDeath:
  FX22 GHI 4 Bright
  Stop
}


defaultproperties {
}


// ////////////////////////////////////////////////////////////////////////// //
class RainPlayer4 : RainPillar;


states {
Spawn:
  FX23 A -1 Bright
  Stop
Death:
  FX23 B 4 Bright A_RainImpact
  FX23 CDEF 4 Bright
  Stop
AirDeath:
  FX23 GHI 4 Bright
  Stop
}


defaultproperties {
}
