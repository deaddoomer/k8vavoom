//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2021 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class ChickenPlayer : PlayerPawn;


//==========================================================================
//
//  MorphPlayerThink
//
//==========================================================================
override void MorphPlayerThink () {
  if (Health > 0) {
    // handle beak movement
    Player.SetViewStateOffsets(0, Weapon::WEAPONTOP+float(PlayerEx(Player).ChickenPeck)/2.0);
  }

  if (int(32.0*PlayerEx(Player).MorphTime)&15) return;

  if (!(Velocity.x+Velocity.y) && P_Random() < 160) {
    // twitch view angle
    Angles.yaw = AngleMod360(Angles.yaw+(Random()-Random())*45.0/4.0);
    Player.bFixAngle = true;
  }

  if (Origin.z <= FloorZ && P_Random() < 32) {
    // jump and noise
    Velocity.z += 1.0*35.0;
    SetPainState();
    return;
  }

  if (P_Random() < 48) {
    // just noise
    PlaySound('chicken/attack', CHAN_VOICE);
  }
}


states {
Spawn:
  CHKN A -1
  Stop
See:
  CHKN ABAB 3
  Loop
Melee:
Missile:
  CHKN C 4
  CHKN C 4
  CHKN C 4
  Goto Spawn
Pain:
  CHKN D 4 A_Feathers
  CHKN C 4 A_Pain
  Goto Spawn
Death:
  CHKN E 6 A_Scream
  CHKN F 6 A_Feathers
  CHKN G 6
  CHKN H 6 A_NoBlocking
  CHKN IJK 6
  CHKN L -1
  Stop
}


defaultproperties {
  Health = 30;
  Radius = 16.0;
  Height = 24.0;
  Gravity = 0.125;
  PainChance = 1.0;
  ViewHeight = 21.0;
  // chicken speed
  ForwardMove1 = 1.2;
  ForwardMove2 = 1.2;
  SideMove1 = 1.2;
  SideMove2 = 1.2;
  GruntSpeed = 12.0;
  JumpVelZ = 1.0*35.0;
  MorphWeapon = Beak;
  bPickUp = false;
  bOnmobjCopyVel = true;
  PainSound = 'chicken/pain';
  DeathSound = 'chicken/death';
}
