//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2021 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class CFlameMissile : FastProjectile;

float FlameSpeed;
Actor bmo;


//==========================================================================
//
//  BlasterHitMobj
//
//==========================================================================
override bool BlasterHitMobj (Entity Other) {
  bmo = Actor(Other);
  return ::BlasterHitMobj(Other);
}


//===========================================================================
//
//  SpawnBlasterEffects
//
//===========================================================================
override void SpawnBlasterEffects () {
  if (!--Special1) {
    Special1 = 4;
    float z = Origin.z-12.0;
    if (z < FloorZ) z = FloorZ;
    EntityEx A = Spawn(CFlameFloor, vector(Origin.x, Origin.y, z));
    if (A) A.Angles.yaw = Angles.yaw;
  }
}


//==========================================================================
//
//  A_CFlamePuff
//
//==========================================================================
[decorate] final void A_CFlamePuff () {
  bInvisible = false;
  Velocity = vector(0.0, 0.0, 0.0);
  PlaySound('ClericFlameExplode', CHAN_VOICE);
}


//==========================================================================
//
//  A_CFlameMissile
//
//==========================================================================
[decorate] final void A_CFlameMissile () {
  bInvisible = false;
  PlaySound('ClericFlameExplode', CHAN_VOICE);
  if (bmo && bmo.bShootable) {
    // hit something, so spawn the flame circle around the thing
    float dist = bmo.Radius+18.0;
    foreach (int i; 0..4) {
      float an = float(i)*45.0;
      EntityEx A = Spawn(CircleFlame, bmo.Origin+vector(dist*cos(an), dist*sin(an), 5.0));
      if (A) {
        A.Angles.yaw = an;
        A.Target = Target;
        A.Velocity.x = FlameSpeed*cos(an);
        A.Velocity.y = FlameSpeed*sin(an);
        A.Special1f = A.Velocity.x;
        A.Special2f = A.Velocity.y;
        A.StateTime -= Random()*0.1;
      }
      A = Spawn(CircleFlame, bmo.Origin+vector(-dist*cos(an), -dist*sin(an), 5.0));
      if (A) {
        A.Angles.yaw = AngleMod360(180.0+an);
        A.Target = Target;
        A.Velocity.x = -FlameSpeed*cos(an);
        A.Velocity.y = -FlameSpeed*sin(an);
        A.Special1f = A.Velocity.x;
        A.Special2f = A.Velocity.y;
        A.StateTime -= Random()*0.1;
      }
    }
    SetState(FindState('FlamePuff'));
  }
}


states {
Spawn:
  CFFX A 4 Bright
  CFFX A 1 A_CFlamePuff
  Goto Death+1
Death:
  CFFX A 1 Bright A_CFlameMissile
  CFFX ABC 3 Bright
  CFFX D 4 Bright
  CFFX E 3 Bright
  CFFX F 4 Bright
  CFFX G 3 Bright
  CFFX H 4 Bright
  CFFX I 3 Bright
  CFFX J 4 Bright
  CFFX K 3 Bright
  CFFX L 4 Bright
  CFFX M 3 Bright
  Stop
FlamePuff:
  CFFX ABC 3 Bright
  CFFX D 4 Bright
  CFFX E 3 Bright
  CFFX F 4 Bright
  CFFX G 3 Bright
  CFFX H 4 Bright
  CFFX I 3 Bright
  CFFX C 3 Bright
  CFFX D 4 Bright
  CFFX E 3 Bright
  CFFX F 4 Bright
  CFFX G 3 Bright
  CFFX H 4 Bright
  CFFX I 3 Bright
  CFFX J 4 Bright
  CFFX K 3 Bright
  CFFX L 4 Bright
  CFFX M 3 Bright
  Stop
}


defaultproperties {
  Radius = 14.0;
  Height = 8.0;
  Speed = 7000.0;
  MissileDamage = 8;
  RenderStyle = STYLE_Add;
  bInvisible = true;
  DamageType = 'Fire';
  FlameSpeed = 9.0/20.0*35.0;
}
