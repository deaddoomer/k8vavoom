//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2021 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class FSwordMissile : Actor;


//==========================================================================
//
//  DoSpecialDamage
//
//==========================================================================
override int DoSpecialDamage (EntityEx victim, EntityEx source, int damage) {
  if (victim.bIsPlayer) damage -= damage>>2;
  return damage;
}


//==========================================================================
//
//  GetExplodeParms
//
//==========================================================================
override void GetExplodeParms (ref int damage, ref float distance, ref bool damageSelf) {
  // fighter runesword
  damage = 64;
  damageSelf = false;
}


//==========================================================================
//
//  A_FSwordFlames
//
//==========================================================================
[decorate] final void A_FSwordFlames () {
  for (int i = 1+(P_Random()&3); i; --i) {
    Spawn(FSwordFlame, Origin+vector((Random()-0.5)*16.0, (Random()-0.5)*16.0, (Random()-0.5)*8.0));
  }
}


states {
Spawn:
  FSFX ABC 3 Bright
  Loop
Death:
  FSFX D 4 Bright
  FSFX E 3 Bright A_FSwordFlames
  FSFX F 4 Bright A_Explode
  FSFX G 3 Bright
  FSFX H 4 Bright
  FSFX I 3 Bright
  FSFX J 4 Bright
  FSFX KLM 3 Bright
  Stop
}


defaultproperties {
  Radius = 16.0;
  Height = 8.0;
  Speed = 1050.0;
  MissileDamage = 8;
  RenderStyle = STYLE_Add;
  bMissile = true;
  bNoBlockmap = true;
  bDropOff = true;
  bNoGravity = true;
  bNoTeleport = true;
  bActivateImpact = true;
  bActivatePCross = true;
  bExtremeDeath = true;
  bBloodSplatter = true;
  DeathSound = 'FighterSwordExplode';
}
