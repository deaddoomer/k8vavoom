//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2021 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class Key : Inventory abstract;


//==========================================================================
//
//  HandlePickup
//
//==========================================================================
override bool HandlePickup (Inventory Item) {
  if (Item.Class == Class) {
    // in sinle player keys are always picked up, even if you already have one
    if (!Level.Game.netgame) Item.bPickupGood = true;
    return true;
  }

  if (Inventory) return Inventory.HandlePickup(Item);
  return false;
}


//==========================================================================
//
//  CoopPickedUp
//
//  give the key to all players
//
//==========================================================================
override void CoopPickedUp (EntityEx Toucher) {
  if (!Toucher.bIsPlayer) return;
  if (!GetCvarB('sv_coop_share_keys')) return;
  foreach (auto playnum; 0..MAXPLAYERS) {
    auto pl = PlayerEx(Level.Game.Players[playnum]);
    if (!pl || !pl.bSpawned || !pl.MO || pl.MO == Toucher || pl.MO == Toucher.Player.MO) continue;
    // check if it already have this key
    bool found = false;
    for (auto inv = EntityEx(pl.MO).Inventory; inv; inv = inv.Inventory) {
      if (inv.Class == Class) {
        found = true;
        break;
      }
    }
    if (found) continue;
    printdebug("%C: autoadding to the player #%d", self, playnum);
    //Inventory Copy = CreateCopy(Toucher);
    EntityEx pmo = EntityEx(pl.MO);
    // must create a copy
    Inventory Copy = SpawnEntityChecked(class!Inventory, class!Inventory(Class), pmo.Origin, pmo.Angles, default, AllowReplace:false);
    assert(Copy);
    Copy.Amount = Amount;
    Copy.MaxAmount = MaxAmount;
    Copy.bTransferInventory = bTransferInventory;
    Copy.AttachToOwner(pmo);
    printdebug("%C: autoadded to the player #%d", self, playnum);
  }
}


//==========================================================================
//
//  ShouldStay
//
//==========================================================================
override bool ShouldStay () {
  return Level.Game.netgame;
}


defaultproperties {
  PickupSound = 'misc/k_pkup';
  bInterHubStrip = true;
}
