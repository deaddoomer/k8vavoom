//**************************************************************************
//**
//**  ##   ##    ##    ##   ##   ####     ####   ###     ###
//**  ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**   ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**   ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**    ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**     #    ##    ##    #      ####     ####   ##       ##
//**
//**  $Id$
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**  This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
class FadeSetter : Actor __mobjinfo__(9039);

override void BeginPlay () {
  ::BeginPlay();
  if (!Sector) return;
  //print("FadeSetter: %d;%d;%d", Args[0], Args[1], Args[2]);
  int Fade = RGBA(Args[0], Args[1], Args[2], 255);
  Sector.params.Fade = Fade;
  Destroy();
}

defaultproperties {
  bNoSector = true;
  bNoBlockmap = true;
  bNoGravity = true;
  bNoSplash = true;
}


class ColorSetter : Actor __mobjinfo__(9038);

override void BeginPlay () {
  ::BeginPlay();
  if (!Sector) return;
  //print("FadeSetter: %d;%d;%d", Args[0], Args[1], Args[2]);
  int color = RGBA(Args[0], Args[1], Args[2], 255);
  if (Args[3] > 0) print("WARNING: desaturation in thing 9038 is not supported yet!");
  Sector.params.LightColour = color;
  Destroy();
}

defaultproperties {
  bNoSector = true;
  bNoBlockmap = true;
  bNoGravity = true;
  bNoSplash = true;
}
