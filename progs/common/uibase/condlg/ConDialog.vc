//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2023 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
// Strife NPC dialog UI
class ConDialog : MenuScreen;

struct RandomConversation {
  string Name;
  string[10] Texts;
};

// background
int BackPic;

// speech
string SpeakerName;
string SpeechText;

// choices
ConDlgChoice[6] WinChoices;
int NumChoices;

// true if gold icon should be drawn
bool bNeedGold;

RandomConversation[5] RandomConversations;
string[3] CancelTexts;


//==========================================================================
//
//  SetSpeech
//
//==========================================================================
void SetSpeech (EntityEx Speaker, int SpeechNum) {
  GameObject::FRogueConSpeech *Speech;

  //Width = GetVirtualWidth();
  //Height = GetVirtualHeight();
  //SetSize(GetVirtualWidth(), GetVirtualHeight());

  if (!SpeechNum) return;
  if (SpeechNum < 0) {
    SpeechNum = -SpeechNum;
    if (SpeechNum > ClGame.GLevel.GenericSpeeches.length) return;
    Speech = &ClGame.GLevel.GenericSpeeches[SpeechNum-1];
  } else {
    if (SpeechNum > ClGame.GLevel.LevelSpeeches.length) return;
    Speech = &ClGame.GLevel.LevelSpeeches[SpeechNum-1];
  }
  if (Speech.BackPic) BackPic = R_RegisterPic(Speech.BackPic);

  // get name of the speaker
       if (Speech.Name) SpeakerName = Speech.Name;
  else if (Speaker) SpeakerName = Speaker.StrifeName;
  if (!SpeakerName) SpeakerName = "Person";

  SpeechText = Speech.Text;

  // check for random conversation text
  if (stricmp(SpeechText[0..6], "RANDOM") == 0) {
    string tempStr = SpeechText[7..$];
    foreach (auto i; 0..RandomConversations.length) {
      if (stricmp(tempStr, RandomConversations[i].Name) == 0) {
        SpeechText = RandomConversations[i].Texts[P_Random()%RandomConversations[i].Texts.length];
        break;
      }
    }
  }

  // split speech text
  SetFont('smallfont');
  SpeechText = SplitTextWithNewlines(SpeechText, Width-128);

  foreach (auto i; 0..Speech.Choices.length) {
    if (!Speech.Choices[i].Text) continue;
    WinChoices[NumChoices] = GetItemContainer().NewChild(ConDlgChoice);
    WinChoices[NumChoices].SetText(Speech.Choices[i].Text);
    if (Speech.Choices[i].NeedItem1 == 168 && Speech.Choices[i].NeedAmount1 > 0) {
      //WinChoices[NumChoices].Text = va("%s \cDfor \cX%d\cD gold", Speech.Choices[i].Text, Speech.Choices[i].NeedAmount1);
      WinChoices[NumChoices].Price = Speech.Choices[i].NeedAmount1;
      bNeedGold = true;
    }
    WinChoices[NumChoices].ImpulseNum = 201+i;
    ++NumChoices;
  }

  WinChoices[NumChoices] = GetItemContainer().NewChild(ConDlgChoice);
  WinChoices[NumChoices].SetText(CancelTexts[P_Random()%3]);
  WinChoices[NumChoices].ImpulseNum = 200;
  ++NumChoices;

  foreach (auto i; 0..NumChoices) WinChoices[i].SetPos(100, Height-4*10-NumChoices*18+i*18);

  if (Speech.Voice) LocalSound(Speech.Voice);

  SetDefaultChoice();
  CreateSelector();
}


//==========================================================================
//
//  CreateBackButton
//
//  don't create back button on conversation windows
//
//==========================================================================
override void CreateBackButton () {
}


//==========================================================================
//
//  CreateItemContainer
//
//  we don't need it here
//
//==========================================================================
override Widget CreateItemContainer () {
  return none;
}


//==========================================================================
//
//  OnDraw
//
//==========================================================================
override void OnDraw () {
  SetFont('smallfont');
  SetTextAlign(hleft, vtop);

  if (BackPic != -1) {
    DrawFullScreenPic(BackPic);
  } else {
    ShadeRect(60, 46, Width-120, 70, 0.3);
  }

  if (bNeedGold) {
    Inventory Item = EntityEx(StatusBarShared(ClGame.GSBar).GetClGame().cl.MO).FindInventory(Coin);
    //int ypos = 510-NumChoices*22;
    int ypos = Height+30-NumChoices*22;
    int xpos = Width-110;
    DrawPic(/*480*/xpos, ypos, R_RegisterPic('i_coin'));
    DrawText(/*510*/xpos+30, ypos, va("%d", Item ? Item.Amount : 0), CR_WHITE);
  }

  ShadeRect(60, Height-4*10-NumChoices*22, Width-128, NumChoices*22, 0.3);
  DrawText(64, 48, SpeakerName, CR_GREEN);
  DrawText(64, 72, SpeechText);
}


//==========================================================================
//
//  OnBeforePopMenu
//
//  this is called before `ClGame.PopMenu()`
//  return `false` to prevent closing (but still eat the event)
//
//==========================================================================
override bool OnBeforePopMenu (bool userAbort) {
  if (userAbort) {
    CmdBuf_AddText("Impulse 200\n");
  }
  StopLocalSounds();
  return true;
}


//==========================================================================
//
//  OnEvent
//
//==========================================================================
override bool OnEvent (ref event_t evt) {
  /*
  if (evt.type == ev_keydown) {
    int key = ConvertBoundKey(evt.keycode);
    switch (key) {
      case K_ESCAPE:
      case K_MOUSE2:
        CmdBuf_AddText("Impulse 200\n");
        StopLocalSounds();
        ClGame.PopMenu();
        return true;
    }
  }
  */
  return ::OnEvent(evt);
}


defaultproperties {
  X = 0;
  Y = 0;
  Width = 640;
  Height = 480;
  SelectorType = MenuSelector_Big;
  BackPic = -1;
  RandomConversations[0].Name = "PEASANT";
  RandomConversations[0].Texts[0] = "PLEASE DON'T HURT ME.";
  RandomConversations[0].Texts[1] = "IF YOU'RE LOOKING TO HURT ME, I'M \nNOT REALLY WORTH THE EFFORT.";
  RandomConversations[0].Texts[2] = "I DON'T KNOW ANYTHING.";
  RandomConversations[0].Texts[3] = "GO AWAY OR I'LL CALL THE GUARDS!";
  RandomConversations[0].Texts[4] = "I WISH SOMETIMES THAT ALL THESE \nREBELS WOULD JUST LEARN THEIR \nPLACE AND STOP THIS NONSENSE.";
  RandomConversations[0].Texts[5] = "JUST LEAVE ME ALONE, OK?";
  RandomConversations[0].Texts[6] = "I'M NOT SURE, BUT SOMETIMES I THINK \nTHAT I KNOW SOME OF THE ACOLYTES.";
  RandomConversations[0].Texts[7] = "THE ORDER'S GOT EVERYTHING AROUND HERE PRETTY WELL LOCKED UP TIGHT.";
  RandomConversations[0].Texts[8] = "THERE'S NO WAY THAT THIS IS JUST A \nSECURITY FORCE.";
  RandomConversations[0].Texts[9] = "I'VE HEARD THAT THE ORDER IS REALLY \nNERVOUS ABOUT THE FRONT'S \nACTIONS AROUND HERE.";
  RandomConversations[1].Name = "REBEL";
  RandomConversations[1].Texts[0] = "THERE'S NO WAY THE ORDER WILL \nSTAND AGAINST US.";
  RandomConversations[1].Texts[1] = "WE'RE ALMOST READY TO STRIKE. \nMACIL'S PLANS ARE FALLING IN PLACE.";
  RandomConversations[1].Texts[2] = "WE'RE ALL BEHIND YOU, DON'T WORRY.";
  RandomConversations[1].Texts[3] = "DON'T GET TOO CLOSE TO ANY OF THOSE BIG ROBOTS. THEY'LL MELT YOU DOWN \nFOR SCRAP!";
  RandomConversations[1].Texts[4] = "THE DAY OF OUR GLORY WILL SOON \nCOME, AND THOSE WHO OPPOSE US WILL \nBE CRUSHED!";
  RandomConversations[1].Texts[5] = "DON'T GET TOO COMFORTABLE. WE'VE \nSTILL GOT OUR WORK CUT OUT FOR US.";
  RandomConversations[1].Texts[6] = "MACIL SAYS THAT YOU'RE THE NEW \nHOPE. BEAR THAT IN MIND.";
  RandomConversations[1].Texts[7] = "ONCE WE'VE TAKEN THESE CHARLATANS DOWN, WE'LL BE ABLE TO REBUILD THIS WORLD AS IT SHOULD BE.";
  RandomConversations[1].Texts[8] = "REMEMBER THAT YOU AREN'T FIGHTING \nJUST FOR YOURSELF, BUT FOR \nEVERYONE HERE AND OUTSIDE.";
  RandomConversations[1].Texts[9] = "AS LONG AS ONE OF US STILL STANDS, \nWE WILL WIN.";
  RandomConversations[2].Name = "AGUARD";
  RandomConversations[2].Texts[0] = "MOVE ALONG,  PEASANT.";
  RandomConversations[2].Texts[1] = "FOLLOW THE TRUE FAITH, ONLY THEN \nWILL YOU BEGIN TO UNDERSTAND.";
  RandomConversations[2].Texts[2] = "ONLY THROUGH DEATH CAN ONE BE \nTRULY REBORN.";
  RandomConversations[2].Texts[3] = "I'M NOT INTERESTED IN YOUR USELESS \nDRIVEL.";
  RandomConversations[2].Texts[4] = "IF I HAD WANTED TO TALK TO YOU I \nWOULD HAVE TOLD YOU SO.";
  RandomConversations[2].Texts[5] = "GO AND ANNOY SOMEONE ELSE!";
  RandomConversations[2].Texts[6] = "KEEP MOVING!";
  RandomConversations[2].Texts[7] = "IF THE ALARM GOES OFF, JUST STAY OUT OF OUR WAY!";
  RandomConversations[2].Texts[8] = "THE ORDER WILL CLEANSE THE WORLD \nAND USHER IT INTO THE NEW ERA.";
  RandomConversations[2].Texts[9] = "PROBLEM?  NO, I THOUGHT NOT.";
  RandomConversations[3].Name = "BEGGAR";
  RandomConversations[3].Texts[0] = "ALMS FOR THE POOR?";
  RandomConversations[3].Texts[1] = "WHAT ARE YOU LOOKING AT, SURFACER?";
  RandomConversations[3].Texts[2] = "YOU WOULDN'T HAVE ANY EXTRA FOOD, WOULD YOU?";
  RandomConversations[3].Texts[3] = "YOU  SURFACE PEOPLE WILL NEVER \nUNDERSTAND US.";
  RandomConversations[3].Texts[4] = "HA, THE GUARDS CAN'T FIND US.  THOSE \nIDIOTS DON'T EVEN KNOW WE EXIST. ";
  RandomConversations[3].Texts[5] = "ONE DAY EVERYONE BUT THOSE WHO SERVE THE ORDER WILL BE FORCED TO   JOIN US.";
  RandomConversations[3].Texts[6] = "STARE NOW,  BUT YOU KNOW THAT THIS WILL BE YOUR OWN FACE ONE DAY.";
  RandomConversations[3].Texts[7] = "THERE'S NOTHING THING MORE \nANNOYING THAN A SURFACER WITH AN ATTITUDE!";
  RandomConversations[3].Texts[8] = "THE ORDER WILL MAKE SHORT WORK OF YOUR PATHETIC FRONT.";
  RandomConversations[3].Texts[9] = "WATCH YOURSELF SURFACER. WE KNOW OUR ENEMIES!";
  RandomConversations[4].Name = "PGUARD";
  RandomConversations[4].Texts[0] = "WE ARE THE HANDS OF FATE. TO EARN \nOUR WRATH IS TO FIND OBLIVION!";
  RandomConversations[4].Texts[1] = "THE ORDER WILL CLEANSE THE WORLD \nOF THE WEAK AND CORRUPT!";
  RandomConversations[4].Texts[2] = "OBEY THE WILL OF THE MASTERS!";
  RandomConversations[4].Texts[3] = "LONG LIFE TO THE BROTHERS OF THE \nORDER!";
  RandomConversations[4].Texts[4] = "FREE WILL IS AN ILLUSION THAT BINDS \nTHE WEAK MINDED.";
  RandomConversations[4].Texts[5] = "POWER IS THE PATH TO GLORY. TO \nFOLLOW THE ORDER IS TO WALK THAT \nPATH!";
  RandomConversations[4].Texts[6] = "TAKE YOUR PLACE AMONG THE \nRIGHTEOUS, JOIN US!";
  RandomConversations[4].Texts[7] = "THE ORDER PROTECTS ITS OWN.";
  RandomConversations[4].Texts[8] = "ACOLYTES?  THEY HAVE YET TO SEE THE FULL GLORY OF THE ORDER.";
  RandomConversations[4].Texts[9] = "IF THERE IS ANY HONOR INSIDE THAT \nPATHETIC SHELL OF A BODY, \nYOU'LL ENTER INTO THE ARMS OF THE \nORDER.";
  CancelTexts[0] = "BYE!";
  CancelTexts[1] = "Thanks, Bye!";
  CancelTexts[2] = "See you later!";
}
