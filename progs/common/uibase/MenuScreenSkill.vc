//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MenuScreenSkill : MenuScreen;

//==========================================================================
//
//	CreateChoices
//
//==========================================================================

void CreateChoices()
{
	int i;
	int j;
	int CurY = ChoicesStartY;
	for (i = 0; i < P_GetNumSkills(); i++)
	{
		MenuChoiceSkill Btn = MenuChoiceSkill(NewChild(MenuChoiceSkill));
		SkillDef* SDef = P_GetSkillDef(i);
		Btn.SetPos(ChoicesStartX, CurY);
		if (SDef->bMenuNameIsPic)
		{
			Btn.PicHandle = R_RegisterPic(StrToName(SDef->MenuName));
		}
		else
		{
			Btn.SetText(SDef->MenuName);
		}
		for (j = 0; j < SDef->PlayerClassNames.Num; j++)
		{
			if (!stricmp(SDef->PlayerClassNames[j].ClassName,
				ClGame.SkillClassName))
			{
				Btn.SetText(SDef->PlayerClassNames[j].MenuName);
				Btn.PicHandle = 0;
			}
		}
		if (strlen(SDef->TextColour) > 0)
		{
			Btn.Text = strcat(strcat("\c[", SDef->TextColour),
				strcat("]", Btn.Text));
		}
		Btn.SkillIndex = i;
		Btn.bMustConfirm = SDef->bMustConfirm;
		Btn.ConfirmationText = SDef->ConfirmationText;
		Btn.Activated = ActivateSkill;
		CurY += Btn.Height;
	}
}

//==========================================================================
//
//	SetDefaultChoice
//
//==========================================================================

void SetDefaultChoice()
{
	::SetDefaultChoice();
	CycleNextChoice();
	CycleNextChoice();
	CycleNextChoice();
}

//==========================================================================
//
//	ActivateSkill
//
//==========================================================================

void ActivateSkill(Object Sender)
{
	MenuChoiceSkill Btn = MenuChoiceSkill(Sender);
	if (Btn.bMustConfirm)
	{
		ClGame.SkillToConfirm = Btn.SkillIndex;
		ClGame.MessageBoxStartMessage(
			strlen(Btn.ConfirmationText) > 0 ? Btn.ConfirmationText :
			"are you sure? this skill level\nisn\'t even remotely fair.\n\npress y or n.",
			ClientGameShared::MB_Nightmare, true);
	}
	else
	{
		ClGame.NewGame(Btn.SkillIndex);
	}
}

defaultproperties
{
	ChoicesStartX = 38;
	ChoicesStartY = 40;
	SelectorType = MenuSelector_Big;
	Title = "CHOOSE SKILL LEVEL:";
}
