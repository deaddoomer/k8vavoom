//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2023 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
// either text, or picture
class MenuChoiceTextPicButton : MenuBigTextButton;

int PicHandle;
bool ignoreOffsets = true;


//==========================================================================
//
//  SetText
//
//==========================================================================
override void SetText (string AText, optional bool disableTranslation) {
  PicHandle = 0; // no picture
  ::SetText(AText, disableTranslation!optional);
}


//==========================================================================
//
//  SetPicture
//
//==========================================================================
void SetPicture (int handle) {
  PicHandle = handle;
}


//==========================================================================
//
//  CalcTextWidth
//
//==========================================================================
override int CalcTextWidth () {
  if (PicHandle) {
    picinfo_t pinf;
    R_GetPicInfo(PicHandle, out pinf);
    int wdt = pinf.width;
    if (!ignoreOffsets) wdt -= pinf.xoffset;
    return wdt;
  } else {
    return ::CalcTextWidth();
  }
}


//==========================================================================
//
//  CalcTextHeight
//
//==========================================================================
override int CalcTextHeight () {
  if (PicHandle) {
    picinfo_t pinf;
    R_GetPicInfo(PicHandle, out pinf);
    int hgt = pinf.height;
    if (!ignoreOffsets) hgt -= pinf.yoffset;
    return hgt;
  } else {
    return ::CalcTextHeight();
  }
}


//==========================================================================
//
//  OnDraw
//
//==========================================================================
override void OnDraw () {
  if (PicHandle > 0) {
    int x = 0, y = 0;
    if (ignoreOffsets) {
      picinfo_t pinf;
      R_GetPicInfo(PicHandle, out pinf);
      x = pinf.xoffset;
      y = pinf.yoffset;
    }
    DrawPic(x, y, PicHandle);
  } else {
    ::OnDraw();
  }
}


defaultproperties {
}
