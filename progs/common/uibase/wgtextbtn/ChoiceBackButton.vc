//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš, dj_jl
//**  Copyright (C) 2018-2021 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class MenuChoice_BackButton : MenuTextButton;

bool drawAlways;


//==========================================================================
//
//  OnDraw
//
//==========================================================================
override void OnDraw () {
  if (drawAlways || GetRootWidget.bMouseEnabled || GetRootWidget.bMouseForced /*|| GetCvarB('ui_mouse')*/) {
    SetFont('bigfont');
    int Col = (IsFocused ? CR_YELLOW : CR_UNTRANSLATED);
    DrawText(0, 0, Text, Col);
  }
}


//==========================================================================
//
//  OnEvent
//
//==========================================================================
override bool OnEvent (ref event_t evt) {
  // "on click"
  if (evt.bubbling && evt.type == ev_click && evt.dest == self) {
    if (evt.keycode == K_MOUSE1) {
      auto par = FindParentWithClass(MenuScreen);
      if (par) par.DoPopMenu(userAbort:true);
      return true;
    }
  }
  return ::OnEvent(evt);
}


defaultproperties {
  TextFont = 'bigfont';
  Text = "x";
  Height = 23;
}
