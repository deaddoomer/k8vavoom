//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2020 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class MenuChoice_OnOff : MenuChoiceEnum;

//int TextNormalColor = CR_WHITE;
//int TextNormalColor = CR_RED;
//int TextFocusedColor = CR_YELLOW;
bool inverted;


//==========================================================================
//
//  SetInverted
//
//==========================================================================
void SetInverted (bool ainverted) {
  if (inverted == ainverted) return;
  inverted = ainverted;
  vallist.length = 2;
  vallist[0].value = 0;
  vallist[1].value = 1;
  if (ainverted) {
    vallist[0].caption = "On";
    vallist[1].caption = "Off";
  } else {
    vallist[0].caption = "Off";
    vallist[1].caption = "On";
  }
}


//==========================================================================
//
//  OnDraw
//
//==========================================================================
override void OnDraw () {
  DrawBackground();

  SetFont('smallfont');

  int ty = TextHeightAdd/2;

  int Col = (IsFocused ? TextColorFocus : TextColor);
  if (bLeftAlign) {
    SetTextAlign(hleft, vtop);
    DrawText(0, ty, Text, Col);
  } else {
    SetTextAlign(hright, vtop);
    DrawText(CursorXOffs, ty, Text, Col);
  }

  int xx = (bLeftAlign ? TextWidth(Text)+8 : CursorXOffs+10);
  int Col2 = (IsFocused ? CR_YELLOW : Value ? CR_GREEN : CR_RED);
  SetTextAlign(hleft, vtop);
  if (inverted) {
    DrawText(xx, ty, (Value ? "Off" : "On"), Col2);
  } else {
    DrawText(xx, ty, (Value ? "On" : "Off"), Col2);
  }
}


defaultproperties {
  //EnumNames[0] = "Off";
  //EnumNames[1] = "On";
  vallist.length = 2;
  vallist[0].caption = "Off";
  vallist[0].value = 0;
  vallist[1].caption = "On";
  vallist[1].value = 1;
}
