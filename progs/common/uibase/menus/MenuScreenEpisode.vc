//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2019 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, either version 3 of the License, or
//**  (at your option) any later version.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class MenuScreenEpisode : MenuScreen;


//==========================================================================
//
//  CreateChoices
//
//==========================================================================
override void CreateChoices () {
  MenuChoiceEpisode Epi;
  int currentY = ChoicesStartY;
  int ecount = P_GetNumEpisodes();
  //if (ecount > 6) Height = 400;
  int calcHeight = ChoicesStartY;
  int maxwdt = -1;
  foreach (auto i; 0..ecount) {
    EpisodeDef *EDef = P_GetEpisodeDef(i);
    if (EDef->bOptional && !IsMapPresent(EDef->Name)) continue;
    Epi = MenuChoiceEpisode(NewChild(MenuChoiceEpisode));
    Epi.SetPos(ChoicesStartX, currentY);
    int wdt = -1;
    if (EDef->PicName) {
      Epi.PicHandle = R_RegisterPic(EDef->PicName);
      picinfo_t pinf;
      R_GetPicInfo(Epi.PicHandle, &pinf);
      wdt = pinf.width;
      if (Epi.Height < pinf.height) Epi.Height = pinf.height+8;
    } else if (EDef->bLookupText) {
      Epi.Text = GetLangString(EDef->Text);
    } else {
      Epi.Text = EDef->Text;
    }
    if (wdt < 0) wdt = Epi.CalcTextWidth();
    //print("i=%d; wdt=%d; curmax=%d; <%q> (%s)", i, wdt, maxwdt, Epi.Text, Epi.TextFont);
    maxwdt = max(maxwdt, wdt);
    Epi.EDef = EDef;
    Epi.Activated = &ActivateEpisode;
    currentY += Epi.Height;
    calcHeight += Epi.Height;
  }
  foreach (auto it; Items) if (it.Width < maxwdt) it.Width = maxwdt;
  calcHeight = clamp(calcHeight, 200, 440);
  if (calcHeight > Height) {
    Height = calcHeight;
    Y = (GetVirtualHeight()-calcHeight)/2;
    Width = 370; // for "the plutonia experiment"
  }
  maxwdt += 60;
  if (Width < maxwdt) Width = maxwdt;
}


//==========================================================================
//
//  ActivateEpisode
//
//==========================================================================
void ActivateEpisode (Object Sender) {
  MenuChoiceEpisode Epi = MenuChoiceEpisode(Sender);
  if (!IsMapPresent(Epi.EDef->Name)) {
    ClGame.MessageBoxStartMessage("ONLY AVAILABLE IN THE REGISTERED VERSION", ClientGameShared::MB_Shareware, false);
    return;
  }
  ClientGameShared(ClGame).SetEpisode(Epi.EDef);
}


defaultproperties {
  ChoicesStartX = 48;
  ChoicesStartY = 40;
  SelectorType = MenuSelector_Big;
  Title = "WHICH EPISODE?";
  MenuScrollable = true;
}
