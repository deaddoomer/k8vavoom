//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš, dj_jl
//**  Copyright (C) 2018-2019 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, either version 3 of the License, or
//**  (at your option) any later version.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class MenuScreenSpecialControls : MenuScreenControls;


//==========================================================================
//
//  CreateControlKeyChoices
//
//==========================================================================
override void CreateControlKeyChoices () {
  // first, generate arrays for using for building controls list
  GenerateArrays();

  if (menukeys_list.Num > 0) {
    foreach (auto i; 0..menukeys_list.length) {
      // for each menukey, we must check the alias name inside of all defaultbinds and binds, to extract key binds

      // first look inside of default binds list
      if (dbinds_list.Num > 0) {
        foreach (auto j; 0..dbinds_list.length) {
          if (!strcmp(menukeys_list[i].alias_name, dbinds_list[j].alias_name)) {
            // the alias name is the same, so we'll use the bind for a MenuControlKey
            AddControl(menukeys_list[i].desc, dbinds_list[j].alias_name, "");
          }
        }
      }
      // also look inside of the binds list
      if (binds_list.length > 0) {
        foreach (auto j; 0..binds_list.length) {
          if (!strcmp(menukeys_list[i].alias_name, binds_list[j].alias_name)) {
            // the alias name is the same, so we'll use the bind for a MenuControlKey
            AddControl(menukeys_list[i].desc, binds_list[j].alias_name, "");
          }
        }
      }
    }
  }
}


defaultproperties {
}
