//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2020 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class MenuScreenSinglePlayer : MenuScreen;

MenuTextButton savegameBtn;
MenuTextButton endgameBtn;


//==========================================================================
//
//  CreateChoices
//
//==========================================================================
override void CreateChoices () {
  MenuTextButton Btn;

  Btn = GetItemContainer().NewChild(MenuBigTextButton);
  Btn.SetPos(ChoicesStartX, GetCurrentY());
  Btn.SetText("New Game");
  Btn.Activated = &ActivateNewGame;
  //currentY += Btn.Height;

  Btn = GetItemContainer().NewChild(MenuBigTextButton);
  Btn.SetPos(ChoicesStartX, GetCurrentY());
  Btn.SetText("Load Game");
  Btn.Activated = &ActivateLoad;
  //currentY += Btn.Height;

  Btn = GetItemContainer().NewChild(MenuBigTextButton);
  Btn.SetPos(ChoicesStartX, GetCurrentY());
  Btn.SetText("Save Game");
  Btn.Activated = &ActivateSave;
  //currentY += Btn.Height;
  savegameBtn = Btn;
  // disable "save game" button if we're not in the game
  if (ClGame.Game.NetMode < GameInfo::NM_Standalone) Btn.Enabled = false;

  Btn = GetItemContainer().NewChild(MenuBigTextButton);
  Btn.SetPos(ChoicesStartX, GetCurrentY());
  Btn.SetText("End Game");
  Btn.Activated = &ActivateEndGame;
  //currentY += Btn.Height;
  endgameBtn = Btn;
  // disable "end game" button if we're not in the game
  if (ClGame.Game.NetMode < GameInfo::NM_Standalone) Btn.Enabled = false;
}


//==========================================================================
//
//  Tick
//
//==========================================================================
override void Tick (float DeltaTime) {
  bool enb = (ClGame.Game.NetMode >= GameInfo::NM_Standalone);
  if (enb != endgameBtn.Enabled || enb != savegameBtn.Enabled) {
    if (!enb && CursorPos >= 0 && CursorPos < Items.length) {
      if (Items[CursorPos] == endgameBtn || Items[CursorPos] == savegameBtn) {
        DoHome(); // move cursor up
      }
    }
    savegameBtn.Enabled = enb;
    endgameBtn.Enabled = enb;
  }
  ::Tick(DeltaTime);
}


//==========================================================================
//
//  ActivateNewGame
//
//==========================================================================
void ActivateNewGame (Object Sender) {
  if (!ClGame.bLocalServer) return;
  if (ClGame.Game.PlayerClasses.length > 1) {
    ClGame.PushMenuScreen(ClGame.SpawnMenu(MenuScreenClass));
  } else {
    ClientGameShared(ClGame).SetPClass(0);
  }
}


//==========================================================================
//
//  ActivateLoad
//
//==========================================================================
void ActivateLoad (Object Sender) {
  ClGame.PushMenuScreen(ClGame.SpawnMenu(MenuScreenLoadGame));
}


//==========================================================================
//
//  ActivateSave
//
//==========================================================================
void ActivateSave (Object Sender) {
  ClGame.PushMenuScreen(ClGame.SpawnMenu(MenuScreenSaveGame));
}


//==========================================================================
//
//  ActivateEndGame
//
//==========================================================================
void ActivateEndGame (Object Sender) {
  ClGame.MessageBoxShowEndGameQuery();
}


defaultproperties {
  MenuName = 'Single_Player_Menu';
  bTickEnabled = true; // to update endgame button status
  ChoicesStartX = 97;
  SelectorType = MenuSelector_Big;
  Title = "SINGLE PLAYER";
}
