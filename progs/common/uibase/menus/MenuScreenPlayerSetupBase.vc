//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2020 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, version 3 of the License ONLY.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class MenuScreenPlayerSetup : MenuScreen;

//array!name SkinNames;

MenuInputLine PlayerName;
MenuChoiceSlider ColR;
MenuChoiceSlider ColG;
MenuChoiceSlider ColB;
MenuSpriteAnim Anim;
MenuModel Mdl;
MenuChoiceEnum EPClass;
MenuChoiceColor ColorBox;
int PClass;


struct ClassInfo {
  string sprite; // "PLAY"
  string className;
}

array!ClassInfo PClasses;


//==========================================================================
//
//  CreateClasses
//
//==========================================================================
void CreateClasses () {
  auto cls = PClasses.alloc();
  cls.sprite = "PLAY";
  cls.className = "Doomguy";
}


//==========================================================================
//
//  Byte2Float
//
//==========================================================================
final float Byte2Float (int b) {
  if (b <= 0) return 0.0;
  if (b >= 255) return 1.0;
  int v = (b*10+5)/255;
  return v/10.0;
}


//==========================================================================
//
//  CreateChoices
//
//==========================================================================
override void CreateChoices () {
  PClasses.clear();
  CreateClasses();

  if (PClasses.length == 0) {
    auto cls = PClasses.alloc();
    cls.sprite = "PLAY";
    cls.className = "Doomguy";
  }

  foreach (auto idx, const ref auto pcl; PClasses) {
    R_InstallSprite(pcl.sprite, idx+500);
  }
  R_InstallSpriteComplete();


  int Col = ParseColor(GetCvarS('color'));

  ColorBox = GetItemContainer().NewChild(MenuChoiceColor);
  ColorBox.SetInitialValue(Col);
  ColorBox.SetText("Color");
  ColorBox.SetOrigin(ChoicesStartX, currentY);
  currentY += ColorBox.Height;


  PlayerName = GetItemContainer().NewChild(MenuInputLine);
  PlayerName.SetOrigin(ChoicesStartX+10, currentY);
  PlayerName.CursorXOffs = -10;
  PlayerName.Text = "Name";
  PlayerName.Value = GetCvarS('Name');
  PlayerName.ValueChanged = &ChangeName;
  currentY += PlayerName.Height;

  if (PClasses.length > 1) {
    EPClass = GetItemContainer().NewChild(MenuChoiceEnum);
    EPClass.SetOrigin(ChoicesStartX, currentY);
    EPClass.Text = "Class";
    foreach (const ref auto pcl; PClasses) EPClass.AddItem(pcl.className);
    EPClass.SetInitialValue(GetCvar('class'));
    EPClass.ValueChanging = &ChangeClass;
    currentY += EPClass.Height;
  }


  ColR = GetItemContainer().NewChild(MenuChoiceSlider);
  ColR.Width = 420;
  ColR.SetOrigin(ChoicesStartX, currentY);
  ColR.Text = "Red";
  ColR.ValueDelta = 0.1;
  ColR.SetInitialValue(Byte2Float((Col>>16)&0xff));
  ColR.ValueChanging = &ChangeColor;
  currentY += ColR.Height;

  ColG = GetItemContainer().NewChild(MenuChoiceSlider);
  ColG.Width = 420;
  ColG.SetOrigin(ChoicesStartX, currentY);
  ColG.Text = "Green";
  ColG.ValueDelta = 0.1;
  ColG.SetInitialValue(Byte2Float((Col>>8)&0xff));
  ColG.ValueChanging = &ChangeColor;
  currentY += ColG.Height;

  ColB = GetItemContainer().NewChild(MenuChoiceSlider);
  ColB.Width = 420;
  ColB.SetOrigin(ChoicesStartX, currentY);
  ColB.Text = "Blue";
  ColB.ValueDelta = 0.1;
  ColB.SetInitialValue(Byte2Float(Col&0xff));
  ColB.ValueChanging = &ChangeColor;
  currentY += ColB.Height;


  Anim = GetItemContainer().NewChild(MenuSpriteAnim);
  Anim.SetPos(220, 150);
  Anim.SprDef = 500;
  Anim.Speed = 8;
  Anim.NumFrames = 4;
  Anim.TranslStart = 112;
  Anim.TranslEnd = 127;
  Anim.Color = Col;

  /* NOT YET
  auto model = InstallModel("models/players/doomguy/player.xml");
  if (model) {
    name SkinName;
    string SkinDesc;

    SetCvarS('model', "doomguy");

    Mdl = GetItemContainer().NewChild(MenuModel);
    Mdl.Origin = vector(-128.0, 64.0, -32.0);
    Mdl.Angle = 345.0;
    Mdl.Model = model;
    Mdl.TranslStart = 112;
    Mdl.TranslEnd = 127;
    Mdl.Color = Col;
  }
  */

  PClass = (EPClass ? int(EPClass.Value) : 0);
  SetPClass();
}


//==========================================================================
//
//  ChangeName
//
//==========================================================================
void ChangeName (Object Sender) {
  SetCvarS('Name', PlayerName.Value);
}


//==========================================================================
//
//  ChangeColor
//
//==========================================================================
bool ChangeColor (Object Sender, float newValue) {
  float r = (Sender == ColR ? newValue : ColR.Value);
  float g = (Sender == ColG ? newValue : ColG.Value);
  float b = (Sender == ColB ? newValue : ColB.Value);
  int Col = RGBA(int(r*255.0), int(g*255.0), int(b*255.0), 255);

  SetCvarS('color', va("#%02x%02x%02x", int(r*255.0), int(g*255.0), int(b*255.0)));
  Anim.Color = Col;
  if (Mdl) Mdl.Color = Col;
  ColorBox.SetNewColor(Col);
  return true;
}


//==========================================================================
//
//  ChangeClass
//
//==========================================================================
bool ChangeClass (Object Sender, float newValue) {
  SetCvar('class', int(newValue));
  PClass = int(newValue);
  SetPClass();
  return true;
}


//==========================================================================
//
//  SetPClass
//
//==========================================================================
void SetPClass () {
  Anim.SprDef = 500+PClass;
}


defaultproperties {
  ChoicesStartX = 64;
  ChoicesStartY = 40;
  SelectorType = MenuSelector_SmallRight;
  Title = "PLAYER SETUP";
}
