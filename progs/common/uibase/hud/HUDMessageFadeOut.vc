//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2019 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, either version 3 of the License, or
//**  (at your option) any later version.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class HUDMessageFadeOut : HUDMessage;

int State;
float FadeOutTime;


//==========================================================================
//
//  Reset
//
//==========================================================================
override void Reset () {
  ::Reset();
  State = default.State;
  FadeOutTime = default.FadeOutTime;
}


//==========================================================================
//
//  Init
//
//==========================================================================
override void Init (string Message, name AFont, int Type, int AId, int Color,
                    float AMsgX, float AMsgY, int AHudWidth, int AHudHeight, float AHoldTime,
                    float Time1, float Time2)
{
  ::Init(Message, AFont, Type, AId, Color, AMsgX, AMsgY, AHudWidth, AHudHeight, AHoldTime, Time1, Time2);
  Time1 = fclamp(Time1, 0, 100000);
  HoldTime = fclamp(HoldTime, 0, 100000);
  if (!HoldTime) HoldTime = 1.0/35.0;
  if (!Time1) Time1 = 1.0/35.0;
  FadeOutTime = Time1;
}


//==========================================================================
//
//  Tick
//
//==========================================================================
override void Tick (float DeltaTime) {
  if (!IsActive) return; // do not tick when game is paused
  //Time += DeltaTime;
  switch (State) {
    case 0:
      if (Time > HoldTime) {
        State = 1;
        Time -= HoldTime;
        //print("FADEOUT(%q): NewTime=%s, fotime=%s", (MsgLines.length ? MsgLines[0].Text : ""), Time, FadeOutTime);
        //return;
        goto case;
      }
      break;
    case 1:
      if (Time > FadeOutTime || !FadeOutTime) {
        //print("  DEAD!");
        MarkDead(); //Destroy();
        return;
      }
      MsgAlpha = fclamp(1.0-Time/FadeOutTime, 0.0, 1.0);
      //print("  alpha=%s (time=%s; fotime=%s)", MsgAlpha, Time, FadeOutTime);
      break;
  }
  // moved here, so messages won't blink
  Time += DeltaTime;
}


defaultproperties {
}
