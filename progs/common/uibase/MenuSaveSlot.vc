//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
class MenuSaveSlot : MenuChoiceSlot;

const int SLOTTEXTLEN = 24;

int Status;
bool bEnteringText;
int SlotNum;
string Text;
string EnterText;


//==========================================================================
//
//  OnCreate
//
//==========================================================================
override void OnCreate () {
  ::OnCreate();
  InitSlot();
}


//==========================================================================
//
//  OnDraw
//
//==========================================================================
override void OnDraw () {
  if (bEnteringText && IsFocus()) {
    DrawSlot(0, EnterText, true);
  } else {
    DrawSlot(0, Text, false);
  }
}


//==========================================================================
//
//  ActivateSlot
//
//==========================================================================
void ActivateSlot () {
}


//==========================================================================
//
//  OnKeyDown
//
//==========================================================================
override bool OnKeyDown (int key) {
  if (bEnteringText) {
    // save game string input
    switch (key) {
      case K_ESCAPE:
      case K_MOUSE2:
        bEnteringText = false;
        break;

      case K_ENTER:
      case K_PADENTER:
      case K_MOUSE1:
        bEnteringText = false;
        if (EnterText) {
          Text = EnterText;
          CmdBuf_AddText("Save %d \"%s\"\n", SlotNum, Text);
          GetClGame().ForceMenuOff();
        }
        break;

      case K_BACKSPACE:
        if (EnterText) EnterText = EnterText[0..$-1];
        break;

      default:
        if (key >= 32 && key < 128 && key != 34) {
          string tk = TranslateKey(key);
          if (tk && tk != "\"") {
            if (EnterText.length < SLOTTEXTLEN-1) EnterText ~= TranslateKey(key);
          }
        }
        break;
    }
    return true;
  }

  if (key == K_ENTER || key == K_PADENTER || key == K_MOUSE1 || key == K_JOY1) {
    ActivateSlot();
    return true;
  }
  return false;
}


//==========================================================================
//
//  OnMouseClick
//
//==========================================================================
override void OnMouseClick (int X, int Y) {
  SetFocus();
  if (bEnteringText) {
    bEnteringText = false;
    if (EnterText) {
      Text = EnterText;
      CmdBuf_AddText("Save %d \"%s\"\n", SlotNum, Text);
      GetClGame().ForceMenuOff();
    }
  }

  ActivateSlot();
}


defaultproperties {
}
