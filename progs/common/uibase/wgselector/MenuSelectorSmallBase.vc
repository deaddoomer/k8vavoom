//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**  Copyright (C) 1999-2006 Jānis Legzdiņš
//**  Copyright (C) 2018-2019 Ketmar Dark
//**
//**  This program is free software: you can redistribute it and/or modify
//**  it under the terms of the GNU General Public License as published by
//**  the Free Software Foundation, either version 3 of the License, or
//**  (at your option) any later version.
//**
//**  This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**  You should have received a copy of the GNU General Public License
//**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//**
//**************************************************************************
class MenuSelector_SmallBase : MenuSelectorBase;

int OrgXDelta;
int MarkDelta;

float Time;


//==========================================================================
//
//  OnCreate
//
//==========================================================================
override void OnCreate () {
  ::OnCreate();
  Disable(); //k8: why?
}


//==========================================================================
//
//  SetYOfs
//
//==========================================================================
override void SetYOfs (int hgt) {
  if (hgt < 12) { yofs = 0; return; }
  yofs = max(0, (hgt-8)/2);
}


//==========================================================================
//
//  SetOrigin
//
//==========================================================================
override void SetOrigin (int OrgX, int OrgY) {
  yofs = 0;
  //::SetOrigin(OrgX, OrgY);
  SetPos(OrgX+OrgXDelta, OrgY);
}


//==========================================================================
//
//  Tick
//
//==========================================================================
override void Tick (float DeltaTime) {
  Time += DeltaTime;
}


//==========================================================================
//
//  GetMarkColor
//
//==========================================================================
int GetMarkColor () {
#if 0
  int phase = int(Time*1000/400)%3;
  int clr = CR_FIRE;
  switch (phase) {
    case 0: clr = CR_LIGHTBLUE/*CR_FIRE*/; break;
    case 1: clr = CR_SAPPHIRE/*CR_GOLD*/; break;
    case 2: clr = CR_CYAN/*CR_WHITE*/; break;
  }
#else
  int phase = int(Time*1000/400)%2;
  int clr = (phase ? CR_DARKGREEN : CR_WHITE);
#endif
  return clr;
}


defaultproperties {
  bTickEnabled = true;
  Width = 320;
  Height = 200;
}
