//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class HUDMessageFadeOut : HUDMessage;

int     State;
float   FadeOutTime;

//==========================================================================
//
//  Init
//
//==========================================================================

override void Init(string Message, name AFont, int Type, int AId, int Colour,
  float AMsgX, float AMsgY, int AHudWidth, int AHudHeight, float AHoldTime,
  float Time1, float Time2)
{
  ::Init(Message, AFont, Type, AId, Colour, AMsgX, AMsgY, AHudWidth,
    AHudHeight, AHoldTime, Time1, Time2);
  FadeOutTime = Time1;
}

//==========================================================================
//
//  Tick
//
//==========================================================================

override void Tick(float DeltaTime)
{
  Time += DeltaTime;
  if (State == 0 && HoldTime < Time)
  {
    State = 1;
    Time -= HoldTime;
  }
  if (State == 1)
  {
    if (FadeOutTime < Time)
    {
      Destroy();
    }
    else
    {
      MsgAlpha = (1.0 - Time / FadeOutTime);
    }
  }
}

defaultproperties
{
}
