#---------------------------------------
#
#	Configure script output
#
#---------------------------------------

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
datadir=@datadir@
libexecdir=@libexecdir@

ASMFLAGS=@ASMFLAGS@
CC=@CC@
CFLAGS=@CFLAGS@
CXX=@CXX@
CXXFLAGS=@CXXFLAGS@
EXEEXT=@EXEEXT@
INSTALL=@INSTALL@
INSTALL_DATA=@INSTALL_DATA@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
INSTALL_SCRIPT=@INSTALL_SCRIPT@
INSTALL_TARGETS=@INSTALL_TARGETS@
IWADDIR_PARM=@IWADDIR_PARM@
LDFLAGS=@LDFLAGS@
LIB_STDCXX=@LIB_STDCXX@
MAIN_CFLAGS=@MAIN_CFLAGS@
MAIN_EXE=@MAIN_EXE@
OBJEXT=@OBJEXT@
SERVER_EXE=@SERVER_EXE@
TARGETS=@TARGETS@

@SET_MAKE@

OBJ_FILES = @OBJ_FILES@
LIBS = @MAIN_LIBS@
LIB_FILES = @LIB_FILES@
SV_LIBS = @SV_LIBS@
SV_OBJ_FILES = @SV_OBJ_FILES@

INSTALL_DIR = $(DESTDIR)$(datadir)/vavoom

C_ARGS   = -c -W -Wall $(CFLAGS)
CPP_ARGS = -c -W -Wall $(CXXFLAGS) $(MAIN_CFLAGS)
ASM_ARGS = -c -W -Wall -x assembler-with-cpp $(ASMFLAGS)
LINK_ARGS = -Wall $(LDFLAGS)

#---------------------------------------
#
#	Main executable objects and libs
#
#---------------------------------------

#-- Common files --
COMMON_OBJS = \
	obj/am_map.$(OBJEXT) \
	obj/args.$(OBJEXT) \
	obj/chat.$(OBJEXT) \
	obj/cheats.$(OBJEXT) \
	obj/cl_demo.$(OBJEXT) \
	obj/cl_input.$(OBJEXT) \
	obj/cl_main.$(OBJEXT) \
	obj/cl_parse.$(OBJEXT) \
	obj/cl_poly.$(OBJEXT) \
	obj/cl_trace.$(OBJEXT) \
	obj/cmd.$(OBJEXT) \
	obj/console.$(OBJEXT) \
	obj/crc.$(OBJEXT) \
	obj/cvar.$(OBJEXT) \
	obj/d_aclip.$(OBJEXT) \
	obj/d_alias.$(OBJEXT) \
	obj/d_data.$(OBJEXT) \
	obj/d_draw.$(OBJEXT) \
	obj/d_edge.$(OBJEXT) \
	obj/d_main.$(OBJEXT) \
	obj/d_part.$(OBJEXT) \
	obj/d_polyse.$(OBJEXT) \
	obj/d_scache.$(OBJEXT) \
	obj/d_span.$(OBJEXT) \
	obj/d_sprite.$(OBJEXT) \
	obj/d_surf.$(OBJEXT) \
	obj/d_tex.$(OBJEXT) \
	obj/d_aclipa.$(OBJEXT) \
	obj/d_aliasa.$(OBJEXT) \
	obj/d_edgea.$(OBJEXT) \
	obj/d_polysa.$(OBJEXT) \
	obj/d_varsa.$(OBJEXT) \
	obj/d_zspan.$(OBJEXT) \
	obj/d8_part.$(OBJEXT) \
	obj/d8_poly.$(OBJEXT) \
	obj/d8_s16.$(OBJEXT) \
	obj/d8_span.$(OBJEXT) \
	obj/d8_spr.$(OBJEXT) \
	obj/d8_surf.$(OBJEXT) \
	obj/d16_part.$(OBJEXT) \
	obj/d16_poly.$(OBJEXT) \
	obj/d16_s16.$(OBJEXT) \
	obj/d16_span.$(OBJEXT) \
	obj/d16_spr.$(OBJEXT) \
	obj/d16_surf.$(OBJEXT) \
	obj/d32_part.$(OBJEXT) \
	obj/d32_poly.$(OBJEXT) \
	obj/d32_s16.$(OBJEXT) \
	obj/d32_span.$(OBJEXT) \
	obj/d32_spr.$(OBJEXT) \
	obj/d32_surf.$(OBJEXT) \
	obj/debug.$(OBJEXT) \
	obj/finale.$(OBJEXT) \
	obj/files.$(OBJEXT) \
	obj/host.$(OBJEXT) \
	obj/iline.$(OBJEXT) \
	obj/imission.$(OBJEXT) \
	obj/in_input.$(OBJEXT) \
	obj/infostr.$(OBJEXT) \
	obj/l_glbsp.$(OBJEXT) \
	obj/l_glvis.$(OBJEXT) \
	obj/level.$(OBJEXT) \
	obj/mapinfo.$(OBJEXT) \
	obj/maths.$(OBJEXT) \
	obj/menu.$(OBJEXT) \
	obj/message.$(OBJEXT) \
	obj/misc.$(OBJEXT) \
	obj/name.$(OBJEXT) \
	obj/net_dgrm.$(OBJEXT) \
	obj/net_loop.$(OBJEXT) \
	obj/net_main.$(OBJEXT) \
	obj/net_null.$(OBJEXT) \
	obj/p_setup.$(OBJEXT) \
	obj/p_thinker.$(OBJEXT) \
	obj/pr_cmds.$(OBJEXT) \
	obj/pr_exec.$(OBJEXT) \
	obj/r_bsp.$(OBJEXT) \
	obj/r_light.$(OBJEXT) \
	obj/r_main.$(OBJEXT) \
	obj/r_model.$(OBJEXT) \
	obj/r_sky.$(OBJEXT) \
	obj/r_surf.$(OBJEXT) \
	obj/r_tex.$(OBJEXT) \
	obj/r_things.$(OBJEXT) \
	obj/s_data.$(OBJEXT) \
	obj/s_eaxutl.$(OBJEXT) \
	obj/s_qmus2mid.$(OBJEXT) \
	obj/s_sound.$(OBJEXT) \
	obj/s_tmidty.$(OBJEXT) \
	obj/s_wav.$(OBJEXT) \
	obj/sbar.$(OBJEXT) \
	obj/sc_man.$(OBJEXT) \
	obj/screen.$(OBJEXT) \
	obj/sn_sonix.$(OBJEXT) \
	obj/str.$(OBJEXT) \
	obj/stream.$(OBJEXT) \
	obj/sv_acs.$(OBJEXT) \
	obj/sv_ent.$(OBJEXT) \
	obj/sv_main.$(OBJEXT) \
	obj/sv_poly.$(OBJEXT) \
	obj/sv_save.$(OBJEXT) \
	obj/sv_sight.$(OBJEXT) \
	obj/sv_swtch.$(OBJEXT) \
	obj/sv_tick.$(OBJEXT) \
	obj/sv_user.$(OBJEXT) \
	obj/sv_world.$(OBJEXT) \
	obj/text.$(OBJEXT) \
	obj/ui_gc.$(OBJEXT) \
	obj/ui_modal.$(OBJEXT) \
	obj/ui_root.$(OBJEXT) \
	obj/ui_win.$(OBJEXT) \
	obj/vclass.$(OBJEXT) \
	obj/vobject.$(OBJEXT) \
	obj/wad.$(OBJEXT) \
	obj/zone.$(OBJEXT)

#-- Common OpenGL files --
GL_OBJS = \
	obj/gl_draw.$(OBJEXT) \
	obj/gl_main.$(OBJEXT) \
	obj/gl_poly.$(OBJEXT) \
	obj/gl_tex.$(OBJEXT)

#-- OpenAL files --
AL_OBJS = \
	obj/s_al.$(OBJEXT)

#-- Vorbis files --
VORBIS_OBJS = \
	obj/s_vorbis.$(OBJEXT)

#-- MP3 files --
MP3_OBJS = \
	obj/s_mp3.$(OBJEXT)

#-- MikMod files --
MIKMOD_OBJS = \
	obj/s_mikmod.$(OBJEXT)

#-- FLAC files --
FLAC_OBJS = \
	obj/s_flac.$(OBJEXT)

#-- DOS --
SYS_OBJS_DJGPP = \
	obj/cd_dos.$(OBJEXT) \
	obj/d_alleg.$(OBJEXT) \
	obj/in_dos.$(OBJEXT) \
	obj/mplib.$(OBJEXT) \
	obj/mplpc.$(OBJEXT) \
	obj/net_bw.$(OBJEXT) \
	obj/net_ipx.$(OBJEXT) \
	obj/net_mp.$(OBJEXT) \
	obj/npxsetup.$(OBJEXT) \
	obj/s_alleg.$(OBJEXT) \
	obj/s_allegm.$(OBJEXT) \
	obj/sys_i386.$(OBJEXT) \
	obj/sys_dos.$(OBJEXT)
GL_SYS_OBJ_DJGPP = obj/gl_alleg.$(OBJEXT)

#-- Linux with Allegro --
SYS_OBJS_UNIX_ALLEGRO = \
	obj/d_alleg.$(OBJEXT) \
	obj/in_alleg.$(OBJEXT) \
	obj/net_udp.$(OBJEXT) \
	obj/s_alleg.$(OBJEXT) \
	obj/s_allegm.$(OBJEXT) \
	obj/sys_i386.$(OBJEXT) \
	obj/sys_lin.$(OBJEXT)
GL_SYS_OBJ_UNIX_ALLEGRO = obj/gl_agl.$(OBJEXT)

#-- Linux with SDL --
SYS_OBJS_UNIX_SDL = \
	obj/d_sdl.$(OBJEXT) \
	obj/in_sdl.$(OBJEXT) \
	obj/net_udp.$(OBJEXT) \
	obj/s_sdl.$(OBJEXT) \
	obj/s_sdlm.$(OBJEXT) \
	obj/sys_i386.$(OBJEXT) \
	obj/sys_sdl.$(OBJEXT)
GL_SYS_OBJ_UNIX_SDL = obj/gl_sdl.$(OBJEXT)

#-- CD audio drivers for various UNIX platforms --
CDAUDIO_OBJ_LINUX = obj/cd_linux.$(OBJEXT)
CDAUDIO_OBJ_BSD = obj/cd_bsd.$(OBJEXT)

#-- Windows --
SYS_OBJS_WIN32 = \
	obj/cd_win32.$(OBJEXT) \
	obj/d_win32.$(OBJEXT) \
	obj/d3d_draw.$(OBJEXT) \
	obj/d3d_info.$(OBJEXT) \
	obj/d3d_main.$(OBJEXT) \
	obj/d3d_poly.$(OBJEXT) \
	obj/d3d_tex.$(OBJEXT) \
	obj/in_win32.$(OBJEXT) \
	obj/net_wins.$(OBJEXT) \
	obj/net_wipx.$(OBJEXT) \
	obj/s_win32.$(OBJEXT) \
	obj/s_win32m.$(OBJEXT) \
	obj/sys_i386.$(OBJEXT) \
	obj/sys_win.$(OBJEXT)
GL_SYS_OBJ_WIN32 = obj/gl_win32.$(OBJEXT)

#---------------------------------------
#
#	Dedicated server objcts and libs
#
#---------------------------------------

SV_COMMON_OBJ_FILES = \
	obj/sv/args.$(OBJEXT) \
	obj/sv/cmd.$(OBJEXT) \
	obj/sv/crc.$(OBJEXT) \
	obj/sv/cvar.$(OBJEXT) \
	obj/sv/debug.$(OBJEXT) \
	obj/sv/files.$(OBJEXT) \
	obj/sv/host.$(OBJEXT) \
	obj/sv/infostr.$(OBJEXT) \
	obj/sv/level.$(OBJEXT) \
	obj/sv/mapinfo.$(OBJEXT) \
	obj/sv/maths.$(OBJEXT) \
	obj/sv/message.$(OBJEXT) \
	obj/sv/misc.$(OBJEXT) \
	obj/sv/name.$(OBJEXT) \
	obj/sv/net_dgrm.$(OBJEXT) \
	obj/sv/net_loop.$(OBJEXT) \
	obj/sv/net_main.$(OBJEXT) \
	obj/sv/net_null.$(OBJEXT) \
	obj/sv/p_setup.$(OBJEXT) \
	obj/sv/p_thinker.$(OBJEXT) \
	obj/sv/pr_cmds.$(OBJEXT) \
	obj/sv/pr_exec.$(OBJEXT) \
	obj/sv/r_tex.$(OBJEXT) \
	obj/sv/s_data.$(OBJEXT) \
	obj/sv/sc_man.$(OBJEXT) \
	obj/sv/str.$(OBJEXT) \
	obj/sv/stream.$(OBJEXT) \
	obj/sv/sv_acs.$(OBJEXT) \
	obj/sv/sv_ent.$(OBJEXT) \
	obj/sv/sv_main.$(OBJEXT) \
	obj/sv/sv_poly.$(OBJEXT) \
	obj/sv/sv_save.$(OBJEXT) \
	obj/sv/sv_sight.$(OBJEXT) \
	obj/sv/sv_swtch.$(OBJEXT) \
	obj/sv/sv_tick.$(OBJEXT) \
	obj/sv/sv_user.$(OBJEXT) \
	obj/sv/sv_world.$(OBJEXT) \
	obj/sv/vclass.$(OBJEXT) \
	obj/sv/vobject.$(OBJEXT) \
	obj/sv/wad.$(OBJEXT) \
	obj/sv/zone.$(OBJEXT)

SV_SYS_OBJS_DJGPP = \
	obj/sv/mplib.$(OBJEXT) \
	obj/sv/mplpc.$(OBJEXT) \
	obj/sv/net_bw.$(OBJEXT) \
	obj/sv/net_ipx.$(OBJEXT) \
	obj/sv/net_mp.$(OBJEXT) \
	obj/sv/npxsetup.$(OBJEXT) \
	obj/sv/sys_bsd.$(OBJEXT)

SV_SYS_OBJS_UNIX = \
	obj/sv/net_udp.$(OBJEXT) \
	obj/sv/sys_bsd.$(OBJEXT)

SV_SYS_OBJS_WIN32 = \
	obj/sv/net_wins.$(OBJEXT) \
	obj/sv/net_wipx.$(OBJEXT) \
	obj/sv/sys_wind.$(OBJEXT)

#---------------------------------------
#
#	WAD files
#
#---------------------------------------

WAD_FILES = \
	basev/common/wad0.wad \
	basev/doom/wad0.wad \
	basev/doom1/wad0.wad \
	basev/doom2/wad0.wad \
	basev/tnt/wad0.wad \
	basev/plutonia/wad0.wad \
	basev/heretic/wad0.wad \
	basev/hexen/wad0.wad \
	basev/strife/wad0.wad

# ---------------------------------------

.PHONY: all exe suid crash sv svexe utils progs data clean install

# ---------------------------------------

all: $(TARGETS)

exe: $(MAIN_EXE) utils/vavoom

$(MAIN_EXE): $(OBJ_FILES) $(LIB_FILES)
	$(CXX) $(LINK_ARGS) -o $@ $^ $(LIBS)

suid:
	chown root.root Vavoom
	chmod 4755 Vavoom

crash:
	addr2line -e Vavoom -f < crash.txt >> basev/debug.txt

obj/%.$(OBJEXT) : source/%.c
	$(CC) $(C_ARGS) -o $@ $<

obj/%.$(OBJEXT) : source/%.cpp source/*.h
	$(CXX) $(CPP_ARGS) -o $@ $<

obj/%.$(OBJEXT) : source/%.s source/asm_i386.h
	$(CC) $(ASM_ARGS) -o $@ $<

utils/vavoom: Makefile
	echo "#!/bin/sh" > $@
	echo "# Needed to make symlinks/shortcuts work." >> $@
	echo "# the binaries must run with correct working directory" >> $@
	echo "cd \"$(datadir)/vavoom\"" >> $@
	echo "\"$(bindir)/$(MAIN_EXE)\" \$$* $(IWADDIR_PARM)" >> $@
	echo "exit \$$?" >> $@

# ---------------------------------------

source/timidity/libtimidity.a: source/timidity/*.cpp source/timidity/*.h
	$(MAKE) -C source/timidity

utils/glbsp/libglbsp.a:
	$(MAKE) -C utils/glbsp -f Plugin.mak

utils/glvis/libglvis.a:
	$(MAKE) -C utils/glvis libglvis.a

# ---------------------------------------

sv: svexe data

svexe: $(SERVER_EXE) utils/vavoom-dedicated

$(SERVER_EXE): $(SV_OBJ_FILES)
	$(CXX) $(LINK_ARGS) -o $@ $(SV_OBJ_FILES) $(SV_LIBS)

obj/sv/%.$(OBJEXT) : source/%.c
	$(CC) $(C_ARGS) -DSERVER -o $@ $<

obj/sv/%.$(OBJEXT) : source/%.cpp source/*.h
	$(CXX) $(CPP_ARGS) -DSERVER -o $@ $<

obj/sv/%.$(OBJEXT) : source/%.s
	$(CC) $(ASM_ARGS) -DSERVER -o $@ $<

utils/vavoom-dedicated: Makefile
	echo "#!/bin/sh" > $@
	echo "# Needed to make symlinks/shortcuts work." >> $@
	echo "# the binaries must run with correct working directory" >> $@
	echo "cd \"$(datadir)/vavoom\"" >> $@
	echo "\"$(bindir)/$(SERVER_EXE)\" \$$* $(IWADDIR_PARM)" >> $@
	echo "exit \$$?" >> $@

# ---------------------------------------

utils:
	$(MAKE) -C utils/acc
	$(MAKE) -C utils/vcc
	$(MAKE) -C utils/vlumpy
	$(MAKE) -C utils/glvis
	$(MAKE) -C utils/fixmd2

progs: utils/bin/vcc$(EXEEXT)
	$(MAKE) VCC=../../utils/bin/vcc$(EXEEXT) OUTDIR=../../basev/common/progs -C progs/common
	$(MAKE) VCC=../../utils/bin/vcc$(EXEEXT) OUTDIR=../../basev/doom1/progs -C progs/doom
	$(MAKE) VCC=../../utils/bin/vcc$(EXEEXT) OUTDIR=../../basev/doom2/progs -C progs/doom2
	$(MAKE) VCC=../../utils/bin/vcc$(EXEEXT) OUTDIR=../../basev/heretic/progs -C progs/heretic
	$(MAKE) VCC=../../utils/bin/vcc$(EXEEXT) OUTDIR=../../basev/hexen/progs -C progs/hexen
	$(MAKE) VCC=../../utils/bin/vcc$(EXEEXT) OUTDIR=../../basev/strife/progs -C progs/strife

data: progs $(WAD_FILES)

basev/%/wad0.wad: basev/%/wad0.ls utils/bin/vlumpy$(EXEEXT)
	utils/bin/vlumpy$(EXEEXT) $<

basev/strife/strfhelp.o: utils/editing/acs/*.acs utils/bin/acc$(EXEEXT)
	utils/bin/acc$(EXEEXT) utils/editing/acs/strfhelp.acs basev/strife/strfhelp.o

utils/bin/acc$(EXEEXT):
	$(MAKE) -C utils/acc

utils/bin/vcc$(EXEEXT):
	$(MAKE) -C utils/vcc

utils/bin/vlumpy$(EXEEXT):
	$(MAKE) -C utils/vlumpy

basev/common/wad0.wad : basev/common/progs/common.dat basev/common/progs/clcommon.dat \
	basev/common/progs/svcommon.dat
basev/doom1/wad0.wad : basev/doom1/progs/shared.dat basev/doom1/progs/clprogs.dat \
	basev/doom1/progs/svprogs.dat
basev/doom2/wad0.wad : basev/doom2/progs/shared.dat basev/doom2/progs/clprogs.dat \
	basev/doom2/progs/svprogs.dat
basev/heretic/wad0.wad : basev/heretic/progs/shared.dat basev/heretic/progs/clprogs.dat \
	basev/heretic/progs/svprogs.dat
basev/hexen/wad0.wad : basev/hexen/progs/shared.dat basev/hexen/progs/clprogs.dat \
	basev/hexen/progs/svprogs.dat
basev/strife/wad0.wad : basev/strife/progs/shared.dat basev/strife/progs/clprogs.dat \
	basev/strife/progs/svprogs.dat basev/strife/strfhelp.o

# ---------------------------------------

INSTALL_DIRS = $(INSTALL_DIR) \
		$(INSTALL_DIR)/basev \
		$(INSTALL_DIR)/basev/common \
		$(INSTALL_DIR)/basev/doom \
		$(INSTALL_DIR)/basev/doom1 \
		$(INSTALL_DIR)/basev/doom2 \
		$(INSTALL_DIR)/basev/tnt \
		$(INSTALL_DIR)/basev/plutonia \
		$(INSTALL_DIR)/basev/heretic \
		$(INSTALL_DIR)/basev/hexen \
		$(INSTALL_DIR)/basev/strife

install: $(INSTALL_TARGETS)

installexe:
	$(INSTALL) -d $(DESTDIR)$(bindir)
	$(INSTALL_PROGRAM) $(MAIN_EXE) $(DESTDIR)$(bindir)
	$(INSTALL_SCRIPT) utils/vavoom $(DESTDIR)$(bindir)

installsvexe:
	$(INSTALL) -d $(DESTDIR)$(bindir)
	$(INSTALL_PROGRAM) $(SERVER_EXE) $(DESTDIR)$(bindir)
	$(INSTALL_SCRIPT) utils/vavoom-dedicated $(DESTDIR)$(bindir)

installdata:
	$(INSTALL) -d $(INSTALL_DIRS)
	$(INSTALL_DATA) basev/games.txt $(INSTALL_DIR)/basev
	$(INSTALL_DATA) basev/common/default.cfg basev/common/startup.vs basev/common/wad0.wad $(INSTALL_DIR)/basev/common
	$(INSTALL_DATA) basev/doom/wad0.wad $(INSTALL_DIR)/basev/doom
	$(INSTALL_DATA) basev/doom1/wad0.wad basev/doom1/base.txt $(INSTALL_DIR)/basev/doom1
	$(INSTALL_DATA) basev/doom2/wad0.wad basev/doom2/base.txt $(INSTALL_DIR)/basev/doom2
	$(INSTALL_DATA) basev/tnt/wad0.wad basev/tnt/base.txt $(INSTALL_DIR)/basev/tnt
	$(INSTALL_DATA) basev/plutonia/wad0.wad basev/plutonia/base.txt $(INSTALL_DIR)/basev/plutonia
	$(INSTALL_DATA) basev/heretic/wad0.wad $(INSTALL_DIR)/basev/heretic
	$(INSTALL_DATA) basev/hexen/wad0.wad $(INSTALL_DIR)/basev/hexen
	$(INSTALL_DATA) basev/strife/wad0.wad $(INSTALL_DIR)/basev/strife
	$(INSTALL_DATA) source/vavoom.png $(INSTALL_DIR)

# ---------------------------------------

clean:
	-rm obj/{,cl/,sv/}*.{o,obj} *.tds \
		utils/{acc,fixmd2,glbsp,glvis,vcc{,/vcpp},vlumpy}/*.{o,obj,a,lib,tds} \
		basev/{doom{,1,2},heretic,hexen,plutonia,strife,tnt}/{progs/*.dat,wad0.wad}

# ---------------------------------------
#
#	Generation of asm files for Windows
#
# ---------------------------------------

ASM_FILES = \
	source/d_aclipa.asm \
	source/d_aliasa.asm \
	source/d_edgea.asm \
	source/d_polysa.asm \
	source/d_zspan.asm \
	source/d_varsa.asm \
	source/d8_part.asm \
	source/d8_poly.asm \
	source/d8_s16.asm \
	source/d8_span.asm \
	source/d8_spr.asm \
	source/d8_surf.asm \
	source/d16_part.asm \
	source/d16_poly.asm \
	source/d16_s16.asm \
	source/d16_span.asm \
	source/d16_spr.asm \
	source/d16_surf.asm \
	source/d32_part.asm \
	source/d32_poly.asm \
	source/d32_s16.asm \
	source/d32_span.asm \
	source/d32_spr.asm \
	source/d32_surf.asm \
	source/pr_execa.asm \
	source/sys_i386.asm

asm: $(ASM_FILES)

source/%.asm : source/%.s source/asm_i386.h source/gas2tasm.exe
	$(CC) -x assembler-with-cpp -E -P -DGAS2TASM $< -o - | source/gas2tasm.exe > $@

source/gas2tasm.exe : source/gas2tasm.c
	$(CC) -O3 -ffast-math -fomit-frame-pointer -s -o $@ $<
