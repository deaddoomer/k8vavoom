; Defines general parameters of the game for which wadfiles are intended.
;
;       Name            textual name for internal use
;       IWAD            standard 8.3 base name and extension of main wadfile
;       NewMap          default name for new map -- dictates format for all maps
;       Directory       directory in which main wadfile (and game files) reside
;       Run                     command to execute (from the directory) for running a map

[WadGame]
Name=Vavoom for DOOM ][: Hell On Earth
IWAD=doom2.wad
NewMap=MAP01
Directory=Z:\mnt\win98\vavoom
Run=vavoom.exe -doom2 -progs progs/doom2/ -file $_Wadfile +map MAP$_Wadmap
;Run=vavoom.exe -doom2 -file $_Wadfile +map MAP$_Wadmap
; Defines parameters of the default sector motif created when no motif
; file can be located at startup.

[Default.Sector]
Above=STARTAN2
Main=STARTAN2
Below=STARTAN2
Ceiling=CEIL3_5
Floor=FLOOR4_8
CeilingHeight=128
FloorHeight=0
Lighting=160
; Defines parameters of the default door motif created when no motif
; file can be located at startup.

[Default.Door]
Base=FLAT1
Door=BIGDOOR2
Track=DOORTRAK
Type=12
; Defines parameters of the default stair motif created when no motif
; file can be located at startup.

[Default.Stair]
FloorRunner=STONE4
CeilingRunner=STONE4
Stairwell=STONE4
FloorInc=8
CeilingInc=0
LightingInc=0
;       ID                              used to classify things
;       Flags                   supplies some additional information:
;                                               0x0001 - indicate thing facing angle
;       Red                             red value for drawing things of said class
;       Green                   green value for drawing things of said class
;       Blue                    blue value for drawing things of said class
;       Name                    textual description of class

[Things.Classes]
0x001   0x0001  255     255     255     Start
0x002   0x0000  128     128     0       Weapon
0x003   0x0001  255     0       0       Enemy
0x004   0x0000  128     128     0       Ammo
0x005   0x0000  0       255     255     Powerup
0x006   0x0000  255     255     0       Key
0x007   0x0000  192     192     192     Scenery
0x008   0x0001  255     0       255     Teleport
0x009   0x0000  192     0       0       Hazard
0x00a   0x0000  0       192     0       Armor
0x00b   0x0000  0       0       255     Healing
0x00d   0x0000  0       0       255     Special
;       ID                              used to uniquely identify things in a map
;       Class                   classification (defined above section)
;       Size                    approximate thing size (in map units)
;       Sprite                  name of the sprite to use for display purposes
;       Name                    textual description of thing

[Things.Types]
0x001   1       32      playa1          Player 1 *( number, -, -, -, - )
0x002   1       32      playa1          Player 2 *( number, -, -, -, - )
0x003   1       32      playa1          Player 3 *( number, -, -, -, - )
0x004   1       32      playa1          Player 4 *( number, -, -, -, - )
0x005   6       20      bkeya0          Blue card
0x006   6       20      ykeya0          Yellow card
0x007   3       256     spida1d1        Spider demon
0x008   5       20      bpaka0          Backpack
0x009   3       40      sposa1          Former sergeant
0x00a   7       20      sposu0          Body of former sergeant (shredded)
0x00b   1       32      playf1          Deathmatch
0x00c   7       20      troou0          Body of imp (shredded)
0x00d   6       20      rkeya0          Red card
0x00e   8       20      bfe2b0          Destination
0x00f   7       20      playm0          Body of player
0x010   3       80      cybra1          Cyberdemon
0x011   4       20      celpa0          Bulk cell (100)
0x012   7       20      possl0          Body of former human
0x013   7       20      sposl0          Body of former sergeant
0x014   7       20      troom0          Body of imp
0x015   7       20      sargn0          Body of demon
0x016   7       20      headl0          Body of cacodemon
0x018   7       20      pol5a0          Body of lost soul (blood)
0x019   7       20      pol6a0          Pole w/dead player
0x01a   7       20      pol6a0          Pole w/dying player
0x01b   7       20      treda0          Pole w/head
0x01c   7       20      pol2a0          Pole w/heads
0x01d   7       20      pol3a0          Skulls and candles
0x01e   7       20      col1a0          Column (tall/green)
0x01f   7       20      col2a0          Column (short/green)
0x020   7       20      col3a0          Column (tall/red)
0x021   7       20      col4a0          Column (short/red)
0x022   7       20      canda0          Candle *( radius, -, -, -, - )
0x023   7       20      cbraa0          Candelabra *( radius, -, -, -, - )
0x024   7       20      col5a0          Column w/heart
0x025   7       20      col6a0          Column w/skull
0x026   6       20      rskua0          Red skull
0x027   6       20      yskua0          Yellow skull
0x028   6       20      bskua0          Blue skull
0x029   7       20      ceyea0          Eye *( radius, -, -, -, - )
0x02a   7       20      fskua0          Floating skull
0x02b   7       20      tre1a0          Tree (short)
0x02c   7       20      tblua0          Torch (tall/blue) *( radius, -, -, -, - )
0x02d   7       20      tgrna0          Torch (tall/green) *( radius, -, -, -, - )
0x02e   7       20      treda0          Torch (tall/red) *( radius, -, -, -, - )
0x02f   7       20      smita0          Tree (thorny)
0x030   7       20      eleca0          Column (electric)
0x031   7       20      gor1a0          Chain w/dying player hung by neck (block player)
0x032   7       20      gor2a0          Chain w/player hung by ankles (block player)
0x033   7       20      gor3a0          Chain w/one legged player hung by ankle (block player)
0x034   7       20      gor4a0          Chain w/half player torso and legs (block player)
0x035   7       20      gor5a0          Chain w/player leg (block player)
0x036   7       20      tre2a0          Tree (large)
0x037   7       20      smbta0          Torch (short/blue) *( radius, -, -, -, - )
0x038   7       20      smgta0          Torch (short/green) *( radius, -, -, -, - )
0x039   7       20      smrta0          Torch (short/red) *( radius, -, -, -, - )
0x03a   3       60      sarga5          Spectre
0x03b   7       20      gor2a0          Chain w/player hung by ankles (no block)
0x03c   7       20      gor4a0          Chain w/half player torso and legs (no block)
0x03d   7       20      gor3a0          Chain w/one legged player hung by ankle (no block)
0x03e   7       20      gor5a0          Chain w/half player torso and one leg (no block)
0x03f   7       20      gor1a0          Chain w/dying player hung by neck (no block)
0x040   3       40      vilea1d1        Arch-Vile
0x041   3       40      cposa1          Former commando
0x042   3       40      skela1d1        Revenant
0x043   3       96      fatta1          Mancubus
0x044   3       128     bspia1d1        Arachnotron
0x045   3       48      bos2a1c1        Hell knight
0x046   9       20      fcana0          Flaming barrel
0x047   3       62      paina1          Pain elemental
0x048   7       32      keena0          Commander Keen
0x049   7       20      hdb1a0          Body w/o guts
0x04a   7       20      hdb2a0          Body w/o guts and leg
0x04b   7       20      hdb3a0          Body w/o lower half
0x04c   7       20      hdb4a0          Body w/o lower half and cranium
0x04d   7       20      hdb5a0          Body w/o lower half and head
0x04e   7       20      hdb6a0          Body w/o most anything...
0x04f   7       20      pob1a0          Blood w/empty skin
0x050   7       20      pob2a0          Blood spatter
0x051   7       20      brs1a0          Brain w/spinal column
0x052   2       20      sgn2a0          Super shotgun
0x053   5       20      megaa0          Megasphere
0x054   3       40      sswvd1          SS soldier
0x055   7       20      tlmpa0          Gas lamp *( radius, -, -, -, - )
0x056   7       20      tlp2a0          Gas lamp (small) *( radius, -, -, -, - )
0x057   3       32      bfe2a0          Spawn spot
0x058   3       32      bbrna0          Boss brain
0x059   3       32      bosfc0          Boss shooter
0x5dc   13      20      ifogd0          Floor slope
0x5dd   13      20      ifogd0          Ceiling slope
0x5de   13      20      ifogd0          Static light *( radius, -, -, -, - )
0x5df   13      20      ifogd0          Static colored light *( radius, r, g, b, - )
0x5e0   13      20      ifogd0          Vertex floor height
0x5e1   13      20      ifogd0          Vertex ceiling height
0x7d1   2       20      shota0          Shotgun
0x7d2   2       20      mguna0          Chaingun
0x7d3   2       20      launa0          Rocket launcher
0x7d4   2       20      plasa0          Plasma rifle
0x7d5   2       20      csawa0          Chainsaw
0x7d6   2       20      bfuga0          BFG 9000
0x7d7   4       20      clipa0          Ammo clip (4)
0x7d8   4       20      shela0          Shotgun shells (4)
0x7da   4       20      rocka0          Rocket
0x7db   11      20      stima0          Stimpak (10)
0x7dc   11      20      media0          Medipak (25)
0x7dd   5       20      soula0          Soul sphere
0x7de   11      20      bon1a0          Potion (1)
0x7df   10      20      bon2a0          Helmet (1)
0x7e2   10      20      arm1a0          Green (100)
0x7e3   10      20      arm2a0          Blue (200)
0x7e6   5       20      pinva0          Invunerability
0x7e7   5       20      pstra0          Berserk
0x7e8   5       20      pinsa0          Invisibility
0x7e9   5       20      suita0          Radiation suit
0x7ea   5       20      pmapa0          Computer map
0x7ec   7       20      colua0          Electric lamp *( radius, -, -, -, - )
0x7f3   9       20      bar1a0          Barrel
0x7fd   5       20      pvisa0          Light amplification goggles
0x7fe   4       20      broka0          Box of rockets (8)
0x7ff   4       20      cella0          Energy cell (20)
0x800   4       20      ammoa0          Box of bullets (50)
0x801   4       20      sboxa0          Box of shells (24)
0xbb9   3       40      trooa1          Imp
0xbba   3       60      sarga1          Demon
0xbbb   3       48      bossa1          Baron of hell
0xbbc   3       40      possa1          Former human
0xbbd   3       62      heada1          Cacodemon
0xbbe   3       32      skula1          Lost soul
0x2454  13      20      ifoga0          Polyobject anchor
0x2455  13      20      ifoga0          Start spot
0x2456  13      20      ifoga0          Start spot w/crush
;       ID                              used to classify linedefs
;       Name                    textual description of class
;
;       Note:   When converting a sector to a door, the linedef types
;                       available are those in class number two.

[Specials.Classes]
0x001   Special
0x002   Door
0x003   Ceiling
0x004   Lift
0x005   Floor
0x006   Pillar
0x007   Stairs
0x008   ACS
0x009   Scroll
0x00a   Thing
0x00b   Teleport
0x00c   Lighting
0x00d   Polyobject
0x00e   Exit
0x00f   Elevator
;       ID
;       class
;       description

[Specials.Types]
; Special
0x064   1       Scroll_Texture_Left( speed, -, -, -, - )
0x079   1       Line_SetIdentification( line, -, -, -, - )
0x0a0   1       3d floor( tag, -, -, -, - )
0x0a1   1       Contents( type, trans, flags, -, - )
0x0b5   1       Plane_Align( floor, ceiling, line_id, -, - )
0x0d0   1       TranslucentLine( line, amount, -, -, - )
0x0fb   1       FloorAndCeiling_LowerRaise( tag, speed, -, -, - )
;0x065   1       Scroll_Texture_Right( speed, -, -, -, - )
;0x066   1       Scroll_Texture_Up( speed, -, -, -, - )
;0x067   1       Scroll_Texture_Down( speed, -, -, -, - )
;0x081   1       UsePuzzleItem( item, script, sArg0, sArg1, sArg2 )
;0x08c   1       Sector_ChangeSound( tag, sound, -, -, - )
;0x078   1       Earthquake( intensity, duration, damrad, tremrad, tag )
; Door
0x00a   2       Door_Close( tag, speed, -, -, - )
0x00b   2       Door_Open( tag, speed, -, -, - )
0x00c   2       Door_Raise( tag, speed, delay, -, - )
0x00d   2       Door_LockedRaise( tag, speed, delay, lock, - )
0x0f9   2       Door_CloseWaitOpen( tag, speed, delay, -, - )
;0x0ca   2       Generic_Door( tag, speed, kind, delay, lock )
; Ceiling
0x028   3       Ceiling_LowerByValue( tag, speed, height, -, - )
0x029   3       Ceiling_RaiseByValue( tag, speed, height, -, - )
0x02a   3       Ceiling_CrushAndRaise( tag, speed, crush, -, - )
0x02b   3       Ceiling_LowerAndCrush( tag, speed, crush, -, - )
0x02c   3       Ceiling_CrushStop( tag, -, -, -, - )
0x02d   3       Ceiling_CrushRaiseAndStay( tag, speed, crush, -, - )
0x045   3       Ceiling_MoveToValueTimes8( tag, speed, height, negative, - )
0x0c4   3       Ceiling_CrushAndRaiseA( tag, dnspeed, upspeed, damage, - )
0x0c5   3       Ceiling_CrushAndRaiseSilentA( tag, dnspeed, upspeed, damage, - )
0x0fe   3       Ceiling_LowerToFloor( tag, speed, -, -, - )
;0x0c0   3       Ceiling_LowerToHighestFloor( tag, speed, -, -, - )
;0x0c1   3       Ceiling_LowerInstant( tag, -, height, -, - )
;0x0c2   3       Ceiling_RaiseInstant( tag, -, height, -, - )
;0x0c3   3       Ceiling_CrushRaiseAndStayA( tag, dnspeed, upspeed, damage, - )
;0x0c6   3       Ceiling_RaiseByValueTimes8( tag, speed, height, -, - )
;0x0c7   3       Ceiling_LowerByValueTimes8( tag, speed, height, -, - )
;0x0c9   3       Generic_Ceiling( tag, speed, height, target, chg/mdl/dir/crsh )
;0x0cd   3       Generic_Crusher( tag, dnspeed, upspeed, silent, damage )
;0x0fb   3       FloorAndCeiling_LowerRaise( tag, floorspeed, ceilingspeed, -, - )
;0x0fc   3       Ceiling_RaiseToNearest( tag, speed, -, -, - )
;0x0fd   3       Ceiling_LowerToLowest( tag, speed, -, -, - )
;0x0ff   3       Ceiling_CrushRaiseAndStaySilentA( tag, dnspeed, upspeed, damage, - )
; Lift
0x03c   4       Plat_PerpetualRaise( tag, speed, delay, -, - )
0x03d   4       Plat_Stop( tag, -, -, -, - )
0x03e   4       Plat_DownWaitUpStay( tag, speed, delay, -, - )
0x03f   4       Plat_DownByValue( tag, speed, delay, height, - )
0x040   4       Plat_UpWaitDownStay( tag, speed, delay, -, - )
0x041   4       Plat_UpByValue( tag, speed, delay, height, - )
0x0ce   4       Plat_DownWaitUpStayLip( tag, speed, delay, lip, - )
0x0cf   4       Plat_PerpetualRaiseLip( tag, speed, delay, lip, - )
0x0e4   4       Plat_RaiseAndStayTx0( tag, speed, -, -, - )
0x0e6   4       Plat_UpByValueStayTx( tag, speed, height, -, - )
;0x0cb   4       Generic_Lift( tag, speed, delay, target, height )
;0x0e7   4       Plat_ToggleCeiling( tag, -, -, -, - )
; Floor
0x014   5       Floor_LowerByValue( tag, speed, height, -, - )
0x015   5       Floor_LowerToLowest( tag, speed, -, -, - )
0x016   5       Floor_LowerToNearest( tag, speed, -, -, - )
0x017   5       Floor_RaiseByValue( tag, speed, height, -, - )
0x018   5       Floor_RaiseToHighest( tag, speed, -, -, - )
0x019   5       Floor_RaiseToNearest( tag, speed, -, -, - )
0x01c   5       Floor_RaiseAndCrush( tag, speed, crush, -, - )
0x023   5       Floor_RaiseByValueTimes8( tag, speed, height, -, - )
0x024   5       Floor_LowerByValueTimes8( tag, speed, height, -, - )
0x02e   5       Floor_CrushStop( tag, -, -, -, - )
0x042   5       Floor_LowerInstant( tag, -, height, -, - )
0x043   5       Floor_RaiseInstant( tag, -, height, -, - )
0x044   5       Floor_MoveToValueTimes8( tag, speed, height, negative, - )
0x08a   5       Floor_Waggle( tag, height, freq, offset, duration )
0x0ee   5       Floor_RaiseToLowestCeiling( tag, speed, -, -, - )
0x0ef   5       Floor_RaiseByValueTxTy( tag, speed, height, -, - )
0x0f0   5       Floor_RaiseByTexture( tag, speed, -, -, - )
0x0f1   5       Floor_LowerToLowestTxTy( tag, speed, -, -, - )
0x0f2   5       Floor_LowerToHighest( tag, speed, adjust, -, - )
0x0fa   5       Floor_Donut( tag, pillarspeed, slimespeed, -, - )
;0x0c8   5       Generic_Floor( tag, speed, height, target, chg/mdl/dir/crsh )
;0x0eb   5       Floor_TransferTrigger( tag, -, -, -, - )
;0x0ec   5       Floor_TransferNumeric( tag, -, -, -, - )
; Pillar
0x01d   6       Pillar_Build( tag, speed, height, -, - )
0x01e   6       Pillar_Open( tag, speed, f_height, c_height, - )
0x05e   6       Pillar_BuildAndCrush( tag, speed, height, crush, - )
; Stair
0x01a   7       Stairs_BuildDown( tag, speed, height, delay, reset )
0x01b   7       Stairs_BuildUp( tag, speed, height, delay, reset )
0x01f   7       Stairs_BuildDownSync( tag, speed, height, reset, - )
0x020   7       Stairs_BuildUpSync( tag, speed, height, reset, - )
0x0d9   7       Stairs_BuildUpOld( tag, speed, height, delay, reset )
;0x0cc   7       Generic_Stairs (tag, speed, step, dir/idntext, reset )
; ACS
0x050   8       ACS_Execute( script, map, sArg0, sArg1, sArg2 )
0x051   8       ACS_Suspend( script, map, -, -, - )
0x052   8       ACS_Terminate( script, map, -, -, - )
0x053   8       ACS_LockedExecute( script, map, sArg0, sArg1, lock )
0x0e2   8       ACS_ExecuteAlways( script, map, sArg0, sArg1, sArg2 )
; Thing
0x048   10      ThrustThing( angle, distance, -, -, - )
0x049   10      DamageThing( damage, -, -, -, - )
;0x082   10      Thing_Activate( tag, -, -, -, - )
;0x083   10      Thing_Deactivate( tag, -, -, -, - )
;0x084   10      Thing_Remove( tag, -, -, -, - )
;0x085   10      Thing_Destroy( tag, -, -, -, - )
;0x086   10      Thing_Projectile( tag, type, angle, speed, vspeed )
;0x088   10      Thing_ProjectileGravity( tag, type, angle, speed, vspeed )
;0x087   10      Thing_Spawn( tag, spawntype, angle, -, - )
;0x089   10      Thing_SpawnNoFog( tag, spawntype, angle, -, - )
;ZDoom
;0x0e5   10      Thing_SetGoal( tag, goal, delay, -, - )
;0x0f8   10      HealThing( amount, -, -, -, - )
; Teleport
0x046   11      Teleport( tag, -, -, -, - )
0x04a   11      Teleport_NewMap( map, position, -, -, - )
0x04b   11      Teleport_EndGame( -, -, -, -, - )
0x0d7   11      Teleport_Line( thisline, destline, reverse, -, - )
;0x047   11      Teleport_NoFog( tag, -, -, -, - )
; Lighting
0x06d   12      Light_ForceLightning( tag, -, -, -, - )
0x06e   12      Light_RaiseByValue( tag, value, -, -, - )
0x06f   12      Light_LowerByValue( tag, value, -, -, - )
0x070   12      Light_ChangeToValue( tag, value, -, -, - )
0x071   12      Light_Fade( tag, value, tics, -, - )
0x072   12      Light_Glow( tag, upper, lower, tics, - )
0x073   12      Light_Flicker( tag, upper, lower, -, - )
0x074   12      Light_Strobe( tag, upper, lower, u-tics, l-tics )
0x0e8   12      Light_StrobeDoom( tag, u-tics, l-tics, -, - )
0x0e9   12      Light_MinNeighbor( tag, -, -, -, - )
0x0ea   12      Light_MaxNeighbor( tag, -, -, -, - )
; Polyobject
0x001   13      Polyobj_StartLine( po, mirror, sound, -, - )
0x002   13      Polyobj_RotateLeft( po, speed, angle, -, - )
0x003   13      Polyobj_RotateRight( po, speed, angle, -, - )
0x004   13      Polyobj_Move( po, speed, angle, distance, - )
0x005   13      Polyobj_ExplicitLine( po, order, mirror, sound, - )
0x006   13      Polyobj_MoveTimes8( po, speed, angle, distance, - )
0x007   13      Polyobj_DoorSwing( po, speed, angle, delay, - )
0x008   13      Polyobj_DoorSlide( po, speed, angle, distance, delay )
0x05a   13      Polyobj_OR_RotateLeft( po, speed, angle, -, - )
0x05b   13      Polyobj_OR_RotateRight( po, speed, angle, -, - )
0x05c   13      Polyobj_OR_Move( po, speed, angle, distance, - )
0x05d   13      Polyobj_OR_MoveTimes8( po, speed, angle, distance, - )
; Exit
0x0f3   14      Exit_Normal( position, -, -, -, - )
0x0f4   14      Exit_Secret( position, -, -, -, - )
; Elevator
0x05f   15      FloorAndCeiling_LowerByValue( tag, speed, height, -, - )
0x060   15      FloorAndCeiling_RaiseByValue( tag, speed, height, -, - )

[Sectors.Types]
0x0041 Blink (random)
0x0042 Blink (1/2 second)
0x0043 Blink (1 second)
0x0044 -10/20% health, blink (1/2 second)
0x0045 -5/10% health
0x0047 -2/5% health
0x0048 Light oscillates
0x004a Ceiling drops (after 30 seconds)
0x004b -10/20% health, end level/game
0x004c Blink (1 second sync.)
0x004d Blink (1/2 second sync.)
0x0050 -10/20% health
0x0051 Light flickers randomly
0x0400 Secret
