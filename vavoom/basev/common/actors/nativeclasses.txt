//------------------------------------------------------------------------------
class Actor extends Thinker
	native
{
	//
	//	Monster AI
	//
	action native A_Look();
	action native A_Look2();
	//A_LookEx
	action native A_TurretLook();
	action native A_Wander();
	action native A_Chase(optional state melee, optional state missile, optional eval int flags);
	action native A_FastChase();
	action native A_VileChase();
	//A_ExtChase
	action native A_FaceTarget();
	//A_Die
	action native A_CentaurDefend();
	action native A_AlertMonsters();
	//A_ClearTarget
	action native A_ClearSoundTarget();
	//A_KillMaster
	//A_KillChildren
	action native A_SentinelBob();
	//A_Burst

	//
	//	Generic monster attacks
	//
	action native A_CustomMissile(class<Actor> missiletype, eval float spawnheight,
		eval int spawnoffs_xy, eval float angle, optional eval int aimmode,
		optional eval float pitch);
	action native A_CustomBulletAttack(eval float spread_horiz, eval float spread_vert,
		eval int numbullets, eval int damage, class<Actor> pufftype,
		optional eval float range, optional eval bool aimfacing);
	//A_CustomRailgun
	action native A_CustomMeleeAttack(eval int damage, string meleesound,
		string misssound, string damagetype, eval bool bleed);
	action native A_CustomComboAttack(class<Actor> missiletype, eval float spawnheight,
		eval int damage, string meleesound, string damagetype, eval bool bleed);
	action native A_MeleeAttack();
	action native A_MissileAttack();
	action native A_ComboAttack();
	action native A_BasicAttack(eval int meleedamage, string meleesound,
		class<Actor> missiletype, eval float missileheight);
	action native A_BulletAttack();
	//A_MonsterRail
	action native A_Explode(optional eval int damage, optional eval int distance, optional evanot bool hurtsource);
	//A_RadiusThrust
	//A_Detonate
	//A_ThrowGrenade

	//
	//	Freeze death functions
	//
	action native A_FreezeDeath();
	action native A_GenericFreezeDeath();
	action native A_FreezeDeathChunks();
	action native A_IceGuyDie();

	//
	//	Sound functions
	//
	action native A_PlaySound(string soundname);
	action native A_PlaySoundEx(string soundname, string chanel, optional bool loop, optional int attenuation);
	action native A_PlayWeaponSound(string soundname);
	action native A_ActiveSound();
	action native A_LoopActiveSound();
	action native A_FLoopActiveSound();
	action native A_StopSound();
	action native A_StopSoundEx(string channel);
	action native A_Pain();
	action native A_Scream();
	action native A_XScream();
	action native A_VileStart();
	action native A_BrainPain();
	action native A_BrainAwake();
	action native A_PlayerScream();

	//
	//	Special actions
	//
	action native A_BossDeath();
	action native A_KeenDie();
	action native A_BrainDie();
	action native A_GetHurt();
	action native A_KlaxonBlare();
	action native A_CheckTerrain();
	//A_Print
	//A_SetBlend
	//A_CheckSight
	//A_CheckFloor
	action native A_CheckPlayerDone();
	//A_SkullPop

	//
	//	Spawn functions
	//
	action native A_TossGib();
	//A_SpawnDebris
	//A_SpawnItem
	//A_SpawnItemEx

	//
	//	State jumps
	//
	//A_Jump
	//A_JumpIf
	//A_JumpIfCloser
	//A_JumpIfHealthLower
	//A_JumpIfInventory
	//A_JumpIfInTargetInventory
	//A_JumpIfTargetInLOS

	//
	//	Flags and appearance
	//
	//A_ChangeFlag
	action native A_SetFloorClip();
	action native A_UnSetFloorClip();
	action native A_HideThing();
	action native A_UnHideThing();
	action native A_SetInvulnerable();
	action native A_UnSetInvulnerable();
	action native A_SetReflective();
	action native A_UnSetReflective();
	action native A_SetReflectiveInvulnerable();
	action native A_UnSetReflectiveInvulnerable();
	action native A_SetShootable();
	action native A_UnSetShootable();
	action native A_NoGravity();
	action native A_Gravity();
	action native A_LowGravity();
	action native A_NoBlocking();
	action native A_Fall();
	//A_SetSolid
	//A_UnsetSolid
	//A_SetFloat
	//A_UnsetFloat
	action native A_ScreamAndUnblock();
	action native A_ActiveAndUnblock();
	action native A_SetShadow();
	action native A_ClearShadow();
	//A_SetTranslucent
	//A_FadeIn
	//A_FadeOut
	action native A_QueueCorpse();
	action native A_DeQueueCorpse();

	//
	//	Missile movement
	//
	//A_SeekerMissile
	action native A_Tracer();
	action native A_Tracer2();
	action native A_Fire();
	//A_BishopMissileWeave
	//A_CStaffMissileSlither
	action native A_Countdown();
	action native A_CountdownArg(eval int argnum);
	//A_Stop

	//
	//	Inventory functions
	//
	action native A_GiveInventory(class<Inventory> itemtype, optional eval int amount);
	action native A_GiveToTarget(class<Inventory> itemtype, optional eval int amount);
	action native A_TakeInventory(class<Inventory> itemtype, optional eval int amount);
	action native A_TakeFromTarget(class<Inventory> itemtype, optional eval int amount);
	action native A_DropInventory(class<Inventory> itemtype);
	action native A_SelectWeapon(class<Weapon> weapontype);

	//
	//	Weapon functions
	//
	//A_Recoil

	//
	//	Weapon attack functions
	//
	action native A_Punch();
	//A_FireAssaultGun

	//
	//	Original Doom/Strife monster attacks
	//
	action native A_PosAttack();
	action native A_SPosAttack();
	action native A_SPosAttackUseAtkSound();
	action native A_CPosAttack();
	action native A_CPosRefire();
	action native A_SpidRefire();
	action native A_TroopAttack();
	action native A_SargAttack();
	action native A_HeadAttack();
	action native A_BruisAttack();
	action native A_SkullAttack();
	action native A_BspiAttack();
	action native A_CyberAttack();
	action native A_PainAttack(optional class<Actor> spawntype);
	//A_DualPainAttack
	action native A_PainDie(optional class<Actor> spawntype);
	action native A_SkelFist();
	action native A_SkelMissile();
	action native A_FatAttack1(optional class<Actor> spawntype);
	action native A_FatAttack2(optional class<Actor> spawntype);
	action native A_FatAttack3(optional class<Actor> spawntype);
	action native A_VileTarget();
	action native A_VileAttack();
	action native A_BrainSpit();
	action native A_SpawnFly();
	action native A_SpawnSound();
	action native A_BrainScream();
	action native A_BrainExplode();
	//A_Mushroom
	action native A_M_Saw();
	action native A_SentinelRefire();

	//
	//	Monster specific functions for Doom
	//
	action native A_Hoof();
	action native A_Metal();
	action native A_BabyMetal();
	action native A_FatRaise();
	action native A_SkelWhoosh();
	action native A_StartFire();
	action native A_FireCrackle();
	action native A_BFGSpray(optional class<Actor> flashtype, optional eval int numrays, optioal eval int damage);

	//
	//	Not documented
	//
	//action native A_SetGravity(eval float gravity);
	//action native A_PlayerSkinCheck(state label);
	//action native A_Respawn(optional evalnot bool fog);
	//action native A_BarrelDestroy();
}

//------------------------------------------------------------------------------
class Inventory extends Actor
	native
{
	//
	//	State jumps
	//
	//A_JumpIfNoAmmo

	//
	//	Weapon functions
	//
	action native A_WeaponReady();
	action native A_Lower();
	action native A_Raise();
	action native A_ReFire();
	action native A_GunFlash();
	action native A_CheckReload();
	action native A_Light(eval int value);
	action native A_Light0();
	action native A_Light1();
	action native A_Light2();
	//A_LightInverse

	//
	//	Weapon attack functions
	//
	action native A_Saw(optional string fullsound, optional string hitsound,
		optional eval int damage, optional class<Actor> pufftype);
	action native A_CustomPunch(eval int PunchDamage, optional eval bool NoRandom,
		optional evalnot bool UseAmmo, optional class<Actor> PuffType,
		optional eval float Range);
	action native A_FireBullets(eval float spread_horz, eval float spread_vert,
		eval int numbullets, eval int damage, optional class<Actor> pufftype,
		optional evalnot bool useammo, optional eval float range);
	action native A_FireCustomMissile(class<Actor> MissileType,
		optional eval float Angle, optional evalnot bool UseAmmo,
		optional eval int SpawnXY, optional eval float SpawnZ,
		optional eval int AimAtAngle);
	//A_RailAttack

	//
	//	Not documented Doom weapon atack functions
	//
	action native A_FirePistol();
	action native A_FireShotgun();
	action native A_FireShotgun2();
	action native A_OpenShotgun2();
	action native A_LoadShotgun2();
	action native A_CloseShotgun2();
	action native A_FireCGun();
	action native A_FireMissile();
	action native A_FirePlasma();
	//action native A_FireRailgun();
	//action native A_FireRailgunLeft();
	//action native A_FireRailgunRight();
	//action native A_RailWait();
	action native A_BFGsound();
	action native A_FireBFG();
}
