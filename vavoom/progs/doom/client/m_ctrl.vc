//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**    Controls menus
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//==========================================================================
//
//	MenuScreenControls
//
//==========================================================================

class MenuScreenControls:MenuScreen
{
	menucontrol_t ctl[15];
	menutext_t title;

	defaultproperties
	{
	}
}

void menu_controls(void)
{
	MenuScreenControls ControlsMenu;
	int x = 120;
	int y = 26;

	ControlsMenu = MenuScreenControls(SpawnMenu(MenuScreenControls));

	MenuControl_Init(&ControlsMenu.ctl[0], ControlsMenu, x, y,
		"Move foward", "+Forward", "-Forward");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[1], ControlsMenu, x, y,
		"Move backward", "+Backward", "-Backward");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[2], ControlsMenu, x, y,
		"Turn left", "+Left", "-Left");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[3], ControlsMenu, x, y,
		"Turn right", "+Right", "-Right");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[4], ControlsMenu, x, y,
		"Move left", "+MoveLeft", "-MoveLeft");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[5], ControlsMenu, x, y,
		"Move right", "+MoveRight", "-MoveRight");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[6], ControlsMenu, x, y,
		"Look up", "+LookUp", "-LookUp");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[7], ControlsMenu, x, y,
		"Look down", "+LookDown", "-LookDown");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[8], ControlsMenu, x, y,
		"Center look", "+LookCenter", "-LookCenter");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[9], ControlsMenu, x, y, "Jump",
		"+Jump", "-Jump");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[10], ControlsMenu, x, y, "Fire",
		"+Attack", "-Attack");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[11], ControlsMenu, x, y, "Use",
		"+Use", "-Use");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[12], ControlsMenu, x, y,
		"Strafe", "+Strafe", "-Strafe");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[13], ControlsMenu, x, y, "Run",
		"+Speed", "-Speed");
	y += 10;

	MenuControl_Init(&ControlsMenu.ctl[14], ControlsMenu, x, y,
		"Mouse look", "+MouseLook", "-MouseLook");

	MenuText_InitTitle(&ControlsMenu.title, 160, 24, "SETUP CONTROLS",
		TEXT_BIGC);
	MenuItemWrapper(ControlsMenu.AddItem(MenuItemWrapper)).item = &ControlsMenu.title;

	PushMenuScreen(ControlsMenu);
}

//==========================================================================
//
//	MenuScreenControls2
//
//==========================================================================

class MenuScreenControls2:MenuScreen
{
	menucontrol_t ctl[7];
	menutext_t title;

	defaultproperties
	{
	}
}

void menu_controls2(void)
{
	MenuScreenControls2 Controls2Menu;
	int x = 120;
	int y = 26;

	Controls2Menu = MenuScreenControls2(SpawnMenu(MenuScreenControls2));

	MenuControl_Init(&Controls2Menu.ctl[0], Controls2Menu, x, y,
		"Fly up", "+FlyUp", "-FlyUp");
	y += 10;

	MenuControl_Init(&Controls2Menu.ctl[1], Controls2Menu, x, y,
		"Fly down", "+FlyDown", "-FlyDown");
	y += 10;

	MenuControl_Init(&Controls2Menu.ctl[2], Controls2Menu, x, y,
		"Center flight", "+FlyCenter", "-FlyCenter");
	y += 10;

	MenuControl_Init(&Controls2Menu.ctl[3], Controls2Menu, x, y,
		"Inventory left", "Impulse 13", "");
	y += 10;

	MenuControl_Init(&Controls2Menu.ctl[4], Controls2Menu, x, y,
		"Inventory right", "Impulse 14", "");
	y += 10;

	MenuControl_Init(&Controls2Menu.ctl[5], Controls2Menu, x, y,
		"Inventory use", "Impulse 15", "");
	y += 10;

	MenuControl_Init(&Controls2Menu.ctl[6], Controls2Menu, x, y,
		"Talk key", "ChatMode", "");

	MenuText_InitTitle(&Controls2Menu.title, 160, 24, "SETUP CONTROLS",
		TEXT_BIGC);
	MenuItemWrapper(Controls2Menu.AddItem(MenuItemWrapper)).item = &Controls2Menu.title;

	PushMenuScreen(Controls2Menu);
}

//**************************************************************************
//
//  $Log$
//  Revision 1.5  2002/01/21 18:21:32  dj_jl
//  Working on object-oriented menus
//
//  Revision 1.4  2002/01/07 12:21:10  dj_jl
//  Changed copyright year
//
//  Revision 1.3  2001/09/24 17:24:09  dj_jl
//  Beautification
//
//  Revision 1.2  2001/07/27 14:27:51  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
