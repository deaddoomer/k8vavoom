//**************************************************************************
//**
//**	##   ##    ##    ##   ##   ####     ####   ###     ###
//**	##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**	 ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**	 ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**	  ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**	   #    ##    ##    #      ####     ####   ##       ##
//**
//**	Copyright (C) 1999-2001 JÆnis Legzdi·ý
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**	New game menu
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

struct menu_new_game_t
{
	menu_t			menu;
	menutext_t		start;
	menuswitch_t	players;
	menuswitch_t	monsters;
	menuswitch_t	deathmatch;
	menuswitch_t	skill;
	menuswitch_t	timelimit;
#ifndef DOOM2
	menuswitch_t	episode;
#endif
	menuswitch_t	level;
	menutext_t		title;
};

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

menu_new_game_t	NewGameMenu;

#ifndef DOOM2
string			sw_episode[5] = {"Knee - Deep in the Dead",
					"The Shores of Hell", "Inferno", "Thy Flesh Consumed"};
#endif
string			sw_mapnames[99];

string			sw_players[7] = {"2", "3", "4", "5", "6", "7", "8"};
string			sw_deathmatch[4] = {"Cooperative", "Deathmatch",
					"Deathmatch2", "Deathmatch3"};
string			sw_skill[5] = {"Baby", "Easy", "Normal", "Hard", "Nightmare"};
string			sw_cnt5[13] = {"0", "5", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55", "60"};

// CODE --------------------------------------------------------------------

//==========================================================================
//
//	net_epi_func
//
//==========================================================================

#ifndef DOOM2
void net_epi_func(menucommon_t *item, int msg)
{
	int i;

	if (msg != MMSG_ACTIVATE)
	{
		return;
	}

	for (i = 0; i < 9; i++)
	{
		sw_mapnames[i] = P_GetMapName(NewGameMenu.episode.value * 9 + i + 1);
	}
}
#endif

//==========================================================================
//
//	StartNewGame
//
//==========================================================================

void StartNewGame(void)
{
	CmdBuf_AddText("Disconnect\n");
	CmdBuf_AddText("MaxPlayers %d\n", NewGameMenu.players.value + 2);
	CmdBuf_AddText("NoMonsters %d\n", !NewGameMenu.monsters.value);
	CmdBuf_AddText("DeathMatch %d\n", NewGameMenu.deathmatch.value);
	CmdBuf_AddText("TimeLimit %d\n", NewGameMenu.timelimit.value * 5);
	CmdBuf_AddText("Skill %d\n", NewGameMenu.skill.value);
#ifdef DOOM2
	if (NewGameMenu.level.value + 1 < 10)
		CmdBuf_AddText("Map MAP0%d\n", NewGameMenu.level.value + 1);
	else
		CmdBuf_AddText("Map MAP%d\n", NewGameMenu.level.value + 1);
#else
	CmdBuf_AddText("Map E%dM%d\n",
		NewGameMenu.episode.value + 1, NewGameMenu.level.value + 1);
#endif
}

//==========================================================================
//
//	menu_new_game
//
//==========================================================================

void menu_new_game(void)
{
	int x = 128;
	int y = 40;
	int i;
	int count = 0;

    InitMenu(&NewGameMenu.menu);

	MenuText_InitFunc(&NewGameMenu.start, x, y, "Start Game", TEXT_SMALLR, StartNewGame);
	AddMenuItem(&NewGameMenu.menu, &NewGameMenu.start);
	y += 10;

	MenuSwitch_Init(&NewGameMenu.players, x, y, "Max players", TEXT_SMALLR, 2, 6, &sw_players[0]);
	AddMenuItem(&NewGameMenu.menu, &NewGameMenu.players);
	y += 10;

	MenuSwitch_Init(&NewGameMenu.monsters, x, y, "Monsters", TEXT_SMALLR, 0, 2, &sw_offon[0]);
	AddMenuItem(&NewGameMenu.menu, &NewGameMenu.monsters);
	y += 10;

	MenuSwitch_Init(&NewGameMenu.deathmatch, x, y, "Game type", TEXT_SMALLR, 2, 4, &sw_deathmatch[0]);
	AddMenuItem(&NewGameMenu.menu, &NewGameMenu.deathmatch);
	y += 10;

	MenuSwitch_Init(&NewGameMenu.skill, x, y, "Skill", TEXT_SMALLR, 2, 5, &sw_skill[0]);
	AddMenuItem(&NewGameMenu.menu, &NewGameMenu.skill);
	y += 10;

	MenuSwitch_Init(&NewGameMenu.timelimit, x, y, "Time limit", TEXT_SMALLR, 0, 13, &sw_cnt5[0]);
	AddMenuItem(&NewGameMenu.menu, &NewGameMenu.timelimit);
	y += 10;

#ifdef DOOM2
#ifdef FIXME
	for (i = 1; i <= 99; i++)
	{
		int map = P_TranslateMap(i);
		if (map != -1)
		{
			sw_mapnames[count] = P_GetMapName(map);
			count++;
		}
	}
#else
	for (i = 1; i <= 32; i++)
	{
		sw_mapnames[count] = P_GetMapName(i);
		count++;
	}
#endif
#else
	MenuSwitch_Init(&NewGameMenu.episode, x, y, "Episode", TEXT_SMALLR, 0,
		shareware ? 1 : ExtendedWAD ? 4 : 3, &sw_episode[0]);
	NewGameMenu.episode.callback = net_epi_func;
	AddMenuItem(&NewGameMenu.menu, &NewGameMenu.episode);
	y += 10;
	count = 9;
	net_epi_func(&NewGameMenu.episode, MMSG_ACTIVATE);
#endif

	MenuSwitch_Init(&NewGameMenu.level, x, y, "Level", TEXT_SMALLR, 0, count, &sw_mapnames[0]);
	AddMenuItem(&NewGameMenu.menu, &NewGameMenu.level);

	MenuText_InitTitle(&NewGameMenu.title, 160, 24, "NEW GAME",	TEXT_BIGC);
	AddMenuItem(&NewGameMenu.menu, &NewGameMenu.title);

    PushMenu(&NewGameMenu.menu);
}

