//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class LostSoul : Actor
	__mobjinfo__(3006)
	__scriptid__(110);

//==========================================================================
//
//  A_SkullAttack
//
//  Lost soul attack. Fly at the player like a missile.
//
//==========================================================================

const float SKULLSPEED = 700.0;

final void A_SkullAttack()
{
	if (!Target)
		return;

	bSkullFly = true;

	PlaySound(AttackSound, CHAN_VOICE);
	A_FaceTarget();
	Velocity = Normalise(Target.GetCentre() - Origin) * SKULLSPEED;
}

//==========================================================================
//
//  A_Lights
//
//  Just spawn some dynamic light
//
//==========================================================================

final void A_Lights()
{
	SendExplosion(DLightColour, DLightRadius, Origin + vector(0.0, 0.0, Height * 0.5));

	//  Clear old dynamic light effect
	bDynamicLight = false;
}

states
{
Spawn:
	SKUL AB 10 Bright A_Look
	Loop
See:
	SKUL AB 6 Bright A_Chase
	Loop
Missile:
	SKUL C 10 Bright A_FaceTarget
	SKUL D 4 Bright A_SkullAttack
	SKUL CD 4 Bright
	Goto Missile+2
Pain:
	SKUL E 3 Bright
	SKUL E 3 Bright A_Pain
	Goto See
Death:
	SKUL F 6 Bright
	SKUL G 6 Bright A_Scream
	SKUL H 6 Bright A_Lights
	SKUL I 6 Bright A_Fall
	SKUL JK 6
	Stop
}

defaultproperties
{
	Health = 100;
	Radius = 16.0;
	Height = 56.0;
	Mass = 50.0;
	StepSpeed = 8.0;
	PainChance = 1.0;
	MissileDamage = 3;
	RenderStyle = STYLE_SoulTrans;
	bSolid = true;
	bShootable = true;
	bMonster = true;
	bActivateMCross = true;
	bActivatePushWall = true;
	bNoGravity = true;
	bFloat = true;
	bTriggerHappy = true;
	bNoGravKill = true;
	bFloorClip = true;
	bPassMobj = true;
	ActiveSound = 'skull/active';
	AttackSound = 'skull/melee';
	PainSound = 'skull/pain';
	DeathSound = 'skull/death';
	bDynamicLight = true;
	DLightColour = RGB(179, 0, 0);
	DLightRadius = 126.0;
}
