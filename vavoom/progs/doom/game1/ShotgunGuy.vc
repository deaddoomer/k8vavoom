//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class ShotgunGuy : Pawn
	__mobjinfo__(9);

//==========================================================================
//
//  A_SPosAttack
//
//  Shotgun guy, Spider mastermind attack.
//
//==========================================================================

void A_SPosAttack()
{
	int i;
	int damage;
	TVec aimDir;
	TVec dir;

	if (!Enemy)
		return;

	PlaySound('shotguy/attack', CHAN_WEAPON);
	A_FaceTarget();
	aimDir = AimLineAttack(self, Angles, MISSILERANGE);
	for (i = 0; i < 3; i++)
	{
		dir = aimDir;
		VectorRotateAroundZ(&dir, (Random() - Random()) * 45.0 / 2.0);
		damage = ((P_Random() % 5) + 1) * 3;
		LineAttack(self, dir, MISSILERANGE, damage);
	}

	Effects |= EF_DL_MUZZLEFLASH;
}

//==========================================================================
//
//	DropStuff
//
//==========================================================================

void DropStuff()
{
	Actor A;

	A = Spawn(ItemWeaponShotgun, vector(Origin.x, Origin.y, FloorZ));
	A.bDropped = true;	// special versions of items
}

__states__
{
	S_SPOS_STND('SPOS', 0, 'monsters/sargeant/base.md2', 0, 10.0 / 35.0, S_SPOS_STND2) { A_Look(); }
	S_SPOS_STND2('SPOS', 1, 'monsters/sargeant/base.md2', 1, 10.0 / 35.0, S_SPOS_STND) { A_Look(); }
	S_SPOS_RUN1('SPOS', 0, 'monsters/sargeant/base.md2', 2, 3.0 / 35.0, S_SPOS_RUN2) { A_Chase(); }
	S_SPOS_RUN2('SPOS', 0, 'monsters/sargeant/base.md2', 3, 3.0 / 35.0, S_SPOS_RUN3) { A_Chase(); }
	S_SPOS_RUN3('SPOS', 1, 'monsters/sargeant/base.md2', 4, 3.0 / 35.0, S_SPOS_RUN4) { A_Chase(); }
	S_SPOS_RUN4('SPOS', 1, 'monsters/sargeant/base.md2', 5, 3.0 / 35.0, S_SPOS_RUN5) { A_Chase(); }
	S_SPOS_RUN5('SPOS', 2, 'monsters/sargeant/base.md2', 6, 3.0 / 35.0, S_SPOS_RUN6) { A_Chase(); }
	S_SPOS_RUN6('SPOS', 2, 'monsters/sargeant/base.md2', 7, 3.0 / 35.0, S_SPOS_RUN7) { A_Chase(); }
	S_SPOS_RUN7('SPOS', 3, 'monsters/sargeant/base.md2', 8, 3.0 / 35.0, S_SPOS_RUN8) { A_Chase(); }
	S_SPOS_RUN8('SPOS', 3, 'monsters/sargeant/base.md2', 9, 3.0 / 35.0, S_SPOS_RUN1) { A_Chase(); }
	S_SPOS_ATK1('SPOS', 4, 'monsters/sargeant/base.md2', 10, 10.0 / 35.0, S_SPOS_ATK2) { A_FaceTarget(); }
	S_SPOS_ATK2('SPOS', 5 | FF_FULLBRIGHT, 'monsters/sargeant/base.md2', 11, 10.0 / 35.0, S_SPOS_ATK3) { A_SPosAttack(); }
	S_SPOS_ATK3('SPOS', 4, 'monsters/sargeant/base.md2', 12, 10.0 / 35.0, S_SPOS_RUN1) { }
	S_SPOS_PAIN('SPOS', 6, 'monsters/sargeant/base.md2', 13, 3.0 / 35.0, S_SPOS_PAIN2) { }
	S_SPOS_PAIN2('SPOS', 6, 'monsters/sargeant/base.md2', 14, 3.0 / 35.0, S_SPOS_RUN1) { A_Pain(); }
	S_SPOS_DIE1('SPOS', 7, 'monsters/sargeant/death.md2', 0, 5.0 / 35.0, S_SPOS_DIE2) { }
	S_SPOS_DIE2('SPOS', 8, 'monsters/sargeant/death.md2', 1, 5.0 / 35.0, S_SPOS_DIE3) { A_Scream(); }
	S_SPOS_DIE3('SPOS', 9, 'monsters/sargeant/death.md2', 2, 5.0 / 35.0, S_SPOS_DIE4) { A_Fall(); }
	S_SPOS_DIE4('SPOS', 10, 'monsters/sargeant/death.md2', 3, 5.0 / 35.0, S_SPOS_DIE5) { }
	S_SPOS_DIE5('SPOS', 11, 'monsters/sargeant/death.md2', 4, -1.0, S_NULL) { }
	S_SPOS_XDIE1('SPOS', 12, 'monsters/sargeant/gibs.md2', 0, 5.0 / 35.0, S_SPOS_XDIE2) { }
	S_SPOS_XDIE2('SPOS', 13, 'monsters/sargeant/gibs.md2', 1, 5.0 / 35.0, S_SPOS_XDIE3) { A_XScream(); }
	S_SPOS_XDIE3('SPOS', 14, 'monsters/sargeant/gibs.md2', 2, 5.0 / 35.0, S_SPOS_XDIE4) { A_Fall(); }
	S_SPOS_XDIE4('SPOS', 15, 'monsters/sargeant/gibs.md2', 3, 5.0 / 35.0, S_SPOS_XDIE5) { }
	S_SPOS_XDIE5('SPOS', 16, 'monsters/sargeant/gibs.md2', 4, 5.0 / 35.0, S_SPOS_XDIE6) { }
	S_SPOS_XDIE6('SPOS', 17, 'monsters/sargeant/gibs.md2', 5, 5.0 / 35.0, S_SPOS_XDIE7) { }
	S_SPOS_XDIE7('SPOS', 18, 'monsters/sargeant/gibs.md2', 6, 5.0 / 35.0, S_SPOS_XDIE8) { }
	S_SPOS_XDIE8('SPOS', 19, 'monsters/sargeant/gibs.md2', 7, 5.0 / 35.0, S_SPOS_XDIE9) { }
	S_SPOS_XDIE9('SPOS', 20, 'monsters/sargeant/gibs.md2', 8, -1.0, S_NULL) { }
	S_SPOS_RAISE1('SPOS', 11, 'monsters/sargeant/death.md2', 5, 5.0 / 35.0, S_SPOS_RAISE2) { }
	S_SPOS_RAISE2('SPOS', 10, 'monsters/sargeant/death.md2', 6, 5.0 / 35.0, S_SPOS_RAISE3) { }
	S_SPOS_RAISE3('SPOS', 9, 'monsters/sargeant/death.md2', 7, 5.0 / 35.0, S_SPOS_RAISE4) { }
	S_SPOS_RAISE4('SPOS', 8, 'monsters/sargeant/death.md2', 8, 5.0 / 35.0, S_SPOS_RAISE5) { }
	S_SPOS_RAISE5('SPOS', 7, 'monsters/sargeant/death.md2', 9, 5.0 / 35.0, S_SPOS_RUN1) { }
}

defaultproperties
{
	Health = 30;
	GibsHealth = -30;
	Radius = 20.0;
	Height = 56.0;
	Mass = 100.0;
	StepSpeed = 8.0;
	PainChance = 0.6640625;
	IdleState = S_SPOS_STND;
	SeeState = S_SPOS_RUN1;
	MissileState = S_SPOS_ATK1;
	PainState = S_SPOS_PAIN;
	DeathState = S_SPOS_DIE1;
	GibsDeathState = S_SPOS_XDIE1;
	RaiseState = S_SPOS_RAISE1;
	SightSound = 'shotguy/sight';
	ActiveSound = 'shotguy/active';
	PainSound = 'shotguy/pain';
	DeathSound = 'shotguy/death';
}

//**************************************************************************
//
//  $Log$
//  Revision 1.2  2005/11/17 23:05:22  dj_jl
//  Renamed sounds.
//
//  Revision 1.1  2002/10/26 16:32:20  dj_jl
//  New style of defining classes.
//
//**************************************************************************
