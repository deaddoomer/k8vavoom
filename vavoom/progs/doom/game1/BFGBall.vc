//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class BFGBall : Actor
	__scriptid__(128);

//===========================================================================
//
//  A_BFGSpray
//
//  Spawn a BFG explosion on every monster in view
//
//===========================================================================

final void A_BFGSpray()
{
	int			i;
	int			j;
	int			damage;
	TAVec		aimAng;
	Actor		emo;
	TVec		Dir;
	EntityEx	AimTarget;

	// offset angles from its attack angle
	for (i = 0; i < 40; i++)
	{
		aimAng = Angles;
		aimAng.yaw = AngleMod360(aimAng.yaw - 45.0 + 90.0 / 40.0 * itof(i));

		// target is the originator (player)
		//  of the missile
		AimTarget = Target.AimLineAttack(Dir, aimAng, 16.0 * 64.0);
		if (!AimTarget)
		{
			continue;
		}

		emo = Spawn(BFGExtra, AimTarget.Origin +
			vector(0.0, 0.0, AimTarget.Height / 4.0));

		SendExplosion(DLightColour, DLightRadius, emo.Origin);

		damage = 0;
		for (j = 0; j < 15; j++)
			damage += (P_Random() & 7) + 1;

		AimTarget.Damage(Target, Target, damage);
	}
}

//===========================================================================
//
//  A_Particles
//
//===========================================================================

final void A_Particles()
{
	ParticleEffect(1024, LineSpecialLevelInfo::pt_static, 0, Origin, 16.0,
			vector(512.0, 512.0, 512.0), 0.8, 40.0, RGB(95, 207, 87), 1.0, 2.0);
}

states
{
Spawn:
	BFS1 AB 4 Bright
	Loop
Death:
	BFE1 A 8 Bright A_Particles
	BFE1 B 8 Bright
	BFE1 C 8 Bright A_BFGSpray
	BFE1 DEF 8 Bright
	Stop
}

defaultproperties
{
	Radius = 13.0;
	Height = 8.0;
	Speed = 875.0;
	MissileDamage = 100;
	Alpha = 0.666;
	bMissile = true;
	bNoBlockmap = true;
	bNoGravity = true;
	bDropOff = true;
	bActivatePCross = true;
	bActivateImpact = true;
	bNoTeleport = true;
	bRandomise = true;
	DeathSound = 'weapons/bfgx';
	bDynamicLight = true;
	DLightColour = RGB(95, 207, 87);
	DLightRadius = 150.0;
}
