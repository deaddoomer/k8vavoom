//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Demon : Pawn
	__mobjinfo__(3002)
	__scriptid__(8);

//==========================================================================
//
//  A_Chase
//
//==========================================================================

void A_Chase()
{
	::A_Chase();
	if (Level.Game.fastparm)
		StateTime /= 2.0;
}

//==========================================================================
//
//  A_SargAttack
//
//  Demon, Spectre attack.
//
//==========================================================================

void A_SargAttack()
{
	int damage;

	if (!Enemy)
		return;

	A_FaceTarget();
	if (CheckMeleeRange())
	{
		damage = ((P_Random() % 10) + 1) * 4;
		Enemy.Damage(self, self, damage);
	}
}

__states__
{
	S_SARG_STND('SARG', 0, 'monsters/demon/model.xml', 0, 10.0 / 35.0, S_SARG_STND2) { A_Look(); }
	S_SARG_STND2('SARG', 1, 'monsters/demon/model.xml', 1, 10.0 / 35.0, S_SARG_STND) { A_Look(); }
	S_SARG_RUN1('SARG', 0, 'monsters/demon/model.xml', 2, 2.0 / 35.0, S_SARG_RUN2) { A_Chase(); }
	S_SARG_RUN2('SARG', 0, 'monsters/demon/model.xml', 3, 2.0 / 35.0, S_SARG_RUN3) { A_Chase(); }
	S_SARG_RUN3('SARG', 1, 'monsters/demon/model.xml', 4, 2.0 / 35.0, S_SARG_RUN4) { A_Chase(); }
	S_SARG_RUN4('SARG', 1, 'monsters/demon/model.xml', 5, 2.0 / 35.0, S_SARG_RUN5) { A_Chase(); }
	S_SARG_RUN5('SARG', 2, 'monsters/demon/model.xml', 6, 2.0 / 35.0, S_SARG_RUN6) { A_Chase(); }
	S_SARG_RUN6('SARG', 2, 'monsters/demon/model.xml', 7, 2.0 / 35.0, S_SARG_RUN7) { A_Chase(); }
	S_SARG_RUN7('SARG', 3, 'monsters/demon/model.xml', 8, 2.0 / 35.0, S_SARG_RUN8) { A_Chase(); }
	S_SARG_RUN8('SARG', 3, 'monsters/demon/model.xml', 9, 2.0 / 35.0, S_SARG_RUN1) { A_Chase(); }
	S_SARG_ATK1('SARG', 4, 'monsters/demon/model.xml', 10, 8.0 / 35.0, S_SARG_ATK2)
	{
		A_FaceTarget();
		if (Level.Game.fastparm)
			StateTime /= 2.0;
	}
	S_SARG_ATK2('SARG', 5, 'monsters/demon/model.xml', 11, 8.0 / 35.0, S_SARG_ATK3)
	{
		A_FaceTarget();
		if (Level.Game.fastparm)
			StateTime /= 2.0;
	}
	S_SARG_ATK3('SARG', 6, 'monsters/demon/model.xml', 12, 8.0 / 35.0, S_SARG_RUN1)
	{
		A_SargAttack();
		if (Level.Game.fastparm)
			StateTime /= 2.0;
	}
	S_SARG_PAIN('SARG', 7, 'monsters/demon/model.xml', 13, 2.0 / 35.0, S_SARG_PAIN2)
	{
		if (Level.Game.fastparm)
			StateTime /= 2.0;
	}
	S_SARG_PAIN2('SARG', 7, 'monsters/demon/model.xml', 14, 2.0 / 35.0, S_SARG_RUN1)
	{
		A_Pain();
		if (Level.Game.fastparm)
			StateTime /= 2.0;
	}
	S_SARG_DIE1('SARG', 8, 'monsters/demon/model.xml', 15, 8.0 / 35.0, S_SARG_DIE2) { }
	S_SARG_DIE2('SARG', 9, 'monsters/demon/model.xml', 16, 8.0 / 35.0, S_SARG_DIE3) { A_Scream(); }
	S_SARG_DIE3('SARG', 10, 'monsters/demon/model.xml', 17, 4.0 / 35.0, S_SARG_DIE4) { }
	S_SARG_DIE4('SARG', 11, 'monsters/demon/model.xml', 18, 4.0 / 35.0, S_SARG_DIE5) { A_Fall(); }
	S_SARG_DIE5('SARG', 12, 'monsters/demon/model.xml', 19, 4.0 / 35.0, S_SARG_DIE6) { }
	S_SARG_DIE6('SARG', 13, 'monsters/demon/model.xml', 20, -1.0, none) { }
	S_SARG_RAISE1('SARG', 13, 'monsters/demon/model.xml', 21, 5.0 / 35.0, S_SARG_RAISE2) { }
	S_SARG_RAISE2('SARG', 12, 'monsters/demon/model.xml', 22, 5.0 / 35.0, S_SARG_RAISE3) { }
	S_SARG_RAISE3('SARG', 11, 'monsters/demon/model.xml', 23, 5.0 / 35.0, S_SARG_RAISE4) { }
	S_SARG_RAISE4('SARG', 10, 'monsters/demon/model.xml', 24, 5.0 / 35.0, S_SARG_RAISE5) { }
	S_SARG_RAISE5('SARG', 9, 'monsters/demon/model.xml', 25, 5.0 / 35.0, S_SARG_RAISE6) { }
	S_SARG_RAISE6('SARG', 8, 'monsters/demon/model.xml', 26, 5.0 / 35.0, S_SARG_RUN1) { }
}

defaultproperties
{
	Health = 150;
	Radius = 30.0;
	Height = 56.0;
	Mass = 400.0;
	StepSpeed = 10.0;
	PainChance = 0.703125;
	IdleState = S_SARG_STND;
	SeeState = S_SARG_RUN1;
	MeleeState = S_SARG_ATK1;
	PainState = S_SARG_PAIN;
	DeathState = S_SARG_DIE1;
	RaiseState = S_SARG_RAISE1;
	SightSound = 'demon/sight';
	ActiveSound = 'demon/active';
	AttackSound = 'demon/melee';
	PainSound = 'demon/pain';
	DeathSound = 'demon/death';
}
