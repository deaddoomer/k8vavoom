//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Cacodemon : Pawn
	__mobjinfo__(3005)
	__scriptid__(19);

//==========================================================================
//
//  A_HeadAttack
//
//  Cacodemon attack.
//
//==========================================================================

void A_HeadAttack()
{
	int damage;

	if (!Enemy)
		return;

	A_FaceTarget();
	if (CheckMeleeRange())
	{
		damage = (P_Random() % 6 + 1) * 10;
		Enemy.Damage(self, self, damage);
		return;
	}

	// launch a missile
	SpawnMissile(Enemy, CacodemonMissile);
}

__states__
{
	S_HEAD_STND('HEAD', 0, 'monsters/caco/base.md2', 0, 10.0 / 35.0, S_HEAD_STND) { A_Look(); }
	S_HEAD_RUN1('HEAD', 0, 'monsters/caco/base.md2', 1, 3.0 / 35.0, S_HEAD_RUN1) { A_Chase(); }
	S_HEAD_ATK1('HEAD', 1, 'monsters/caco/base.md2', 2, 5.0 / 35.0, S_HEAD_ATK2) { A_FaceTarget(); }
	S_HEAD_ATK2('HEAD', 2, 'monsters/caco/base.md2', 3, 5.0 / 35.0, S_HEAD_ATK3) { A_FaceTarget(); }
	S_HEAD_ATK3('HEAD', 3 | FF_FULLBRIGHT, 'monsters/caco/base.md2', 4, 5.0 / 35.0, S_HEAD_RUN1) { A_HeadAttack(); }
	S_HEAD_PAIN('HEAD', 4, 'monsters/caco/base.md2', 5, 3.0 / 35.0, S_HEAD_PAIN2) { }
	S_HEAD_PAIN2('HEAD', 4, 'monsters/caco/base.md2', 6, 3.0 / 35.0, S_HEAD_PAIN3) { A_Pain(); }
	S_HEAD_PAIN3('HEAD', 5, 'monsters/caco/base.md2', 7, 6.0 / 35.0, S_HEAD_RUN1) { }
	S_HEAD_DIE1('HEAD', 6, 'monsters/caco/death.md2', 0, 8.0 / 35.0, S_HEAD_DIE2) { }
	S_HEAD_DIE2('HEAD', 7, 'monsters/caco/death.md2', 1, 8.0 / 35.0, S_HEAD_DIE3) { A_Scream(); }
	S_HEAD_DIE3('HEAD', 8, 'monsters/caco/death.md2', 2, 8.0 / 35.0, S_HEAD_DIE4) { }
	S_HEAD_DIE4('HEAD', 9, 'monsters/caco/death.md2', 3, 8.0 / 35.0, S_HEAD_DIE5) { }
	S_HEAD_DIE5('HEAD', 10, 'monsters/caco/death.md2', 4, 8.0 / 35.0, S_HEAD_DIE6) { A_Fall(); }
	S_HEAD_DIE6('HEAD', 11, 'monsters/caco/death.md2', 5, -1.0, none) { }
	S_HEAD_RAISE1('HEAD', 11, 'monsters/caco/death.md2', 6, 8.0 / 35.0, S_HEAD_RAISE2) { }
	S_HEAD_RAISE2('HEAD', 10, 'monsters/caco/death.md2', 7, 8.0 / 35.0, S_HEAD_RAISE3) { }
	S_HEAD_RAISE3('HEAD', 9, 'monsters/caco/death.md2', 8, 8.0 / 35.0, S_HEAD_RAISE4) { }
	S_HEAD_RAISE4('HEAD', 8, 'monsters/caco/death.md2', 9, 8.0 / 35.0, S_HEAD_RAISE5) { }
	S_HEAD_RAISE5('HEAD', 7, 'monsters/caco/death.md2', 10, 8.0 / 35.0, S_HEAD_RAISE6) { }
	S_HEAD_RAISE6('HEAD', 6, 'monsters/caco/death.md2', 11, 8.0 / 35.0, S_HEAD_RUN1) { }
}

defaultproperties
{
	Health = 400;
	Radius = 31.0;
	Height = 56.0;
	Mass = 400.0;
	StepSpeed = 8.0;
	PainChance = 0.5;
	bNoGravity = true;
	bFloat = true;
	IdleState = S_HEAD_STND;
	SeeState = S_HEAD_RUN1;
	MissileState = S_HEAD_ATK1;
	PainState = S_HEAD_PAIN;
	DeathState = S_HEAD_DIE1;
	RaiseState = S_HEAD_RAISE1;
	SightSound = 'caco/sight';
	ActiveSound = 'caco/active';
	PainSound = 'caco/pain';
	DeathSound = 'caco/death';
}
