//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//**************************************************************************
//
//	Arachnotron
//
//**************************************************************************

class Arachnotron:Pawn
	__mobjinfo__(68)
{

//==========================================================================
//
//  A_BabyMetal
//
//  Arachnotron move with metal sound.
//
//==========================================================================

void A_BabyMetal(void)
{
	PlaySound('BabyWalk', CHAN_BODY);
	A_Chase();
}

//==========================================================================
//
//  A_BspiAttack
//
//  Arachnotron attack.
//
//==========================================================================

void A_BspiAttack(void)
{
	if (!Enemy)
		return;

	A_FaceTarget();

	// launch a missile
	SpawnMissile(Enemy, ArachnotronPlasma);
}

//==========================================================================
//
//  A_SpidRefire
//
//  Spider mastermind refire.
//
//==========================================================================

void A_SpidRefire(void)
{
	// keep firing unless target got out of sight
	A_FaceTarget();

	if (P_Random() < 10)
		return;

	if (!Enemy || Enemy.Health <= 0 || !P_CheckSight(self, Enemy))
	{
		SetState(SeeState);
	}
}

__states__
{
	S_BSPI_STND('BSPI', 0, 'monsters/arach.md2', 0, 10.0 / 35.0, S_BSPI_STND2) { A_Look(); }
	S_BSPI_STND2('BSPI', 1, 'monsters/arach.md2', 1, 10.0 / 35.0, S_BSPI_STND) { A_Look(); }
	S_BSPI_SIGHT('BSPI', 0, 'monsters/arach.md2', 2, 20.0 / 35.0, S_BSPI_RUN1) { }
	S_BSPI_RUN1('BSPI', 0, 'monsters/arach.md2', 3, 3.0 / 35.0, S_BSPI_RUN2) { A_BabyMetal(); }
	S_BSPI_RUN2('BSPI', 0, 'monsters/arach.md2', 4, 3.0 / 35.0, S_BSPI_RUN3) { A_Chase(); }
	S_BSPI_RUN3('BSPI', 1, 'monsters/arach.md2', 5, 3.0 / 35.0, S_BSPI_RUN4) { A_Chase(); }
	S_BSPI_RUN4('BSPI', 1, 'monsters/arach.md2', 6, 3.0 / 35.0, S_BSPI_RUN5) { A_Chase(); }
	S_BSPI_RUN5('BSPI', 2, 'monsters/arach.md2', 7, 3.0 / 35.0, S_BSPI_RUN6) { A_Chase(); }
	S_BSPI_RUN6('BSPI', 2, 'monsters/arach.md2', 8, 3.0 / 35.0, S_BSPI_RUN7) { A_Chase(); }
	S_BSPI_RUN7('BSPI', 3, 'monsters/arach.md2', 9, 3.0 / 35.0, S_BSPI_RUN8) { A_BabyMetal(); }
	S_BSPI_RUN8('BSPI', 3, 'monsters/arach.md2', 10, 3.0 / 35.0, S_BSPI_RUN9) { A_Chase(); }
	S_BSPI_RUN9('BSPI', 4, 'monsters/arach.md2', 11, 3.0 / 35.0, S_BSPI_RUN10) { A_Chase(); }
	S_BSPI_RUN10('BSPI', 4, 'monsters/arach.md2', 12, 3.0 / 35.0, S_BSPI_RUN11) { A_Chase(); }
	S_BSPI_RUN11('BSPI', 5, 'monsters/arach.md2', 13, 3.0 / 35.0, S_BSPI_RUN12) { A_Chase(); }
	S_BSPI_RUN12('BSPI', 5, 'monsters/arach.md2', 14, 3.0 / 35.0, S_BSPI_RUN1) { A_Chase(); }
	S_BSPI_ATK1('BSPI', 0 | FF_FULLBRIGHT, 'monsters/arach.md2', 15, 20.0 / 35.0, S_BSPI_ATK2) { A_FaceTarget(); }
	S_BSPI_ATK2('BSPI', 6 | FF_FULLBRIGHT, 'monsters/arach.md2', 16, 4.0 / 35.0, S_BSPI_ATK3) { A_BspiAttack(); }
	S_BSPI_ATK3('BSPI', 7 | FF_FULLBRIGHT, 'monsters/arachatk.md2', 0, 4.0 / 35.0, S_BSPI_ATK4) { }
	S_BSPI_ATK4('BSPI', 7 | FF_FULLBRIGHT, 'monsters/arachatk.md2', 0, 1.0 / 35.0, S_BSPI_ATK2) { A_SpidRefire(); }
	S_BSPI_PAIN('BSPI', 8, 'monsters/arach.md2', 17, 3.0 / 35.0, S_BSPI_PAIN2) { }
	S_BSPI_PAIN2('BSPI', 8, 'monsters/arach.md2', 18, 3.0 / 35.0, S_BSPI_RUN1) { A_Pain(); }
	S_BSPI_DIE1('BSPI', 9, 'monsters/arachdie.md2', 0, 20.0 / 35.0, S_BSPI_DIE2) { A_Scream(); }
	S_BSPI_DIE2('BSPI', 10, 'monsters/arachdie.md2', 1, 7.0 / 35.0, S_BSPI_DIE3) { A_Fall(); }
	S_BSPI_DIE3('BSPI', 11, 'monsters/arachdie.md2', 2, 7.0 / 35.0, S_BSPI_DIE4) { }
	S_BSPI_DIE4('BSPI', 12, 'monsters/arachdie.md2', 3, 7.0 / 35.0, S_BSPI_DIE5) { }
	S_BSPI_DIE5('BSPI', 13, 'monsters/arachdie.md2', 4, 7.0 / 35.0, S_BSPI_DIE6) { }
	S_BSPI_DIE6('BSPI', 14, 'monsters/arachdie.md2', 5, 7.0 / 35.0, S_BSPI_DIE7) { }
	S_BSPI_DIE7('BSPI', 15, 'monsters/arachdie.md2', 6, -1.0, S_NULL) { A_BossDeath(); }
	S_BSPI_RAISE1('BSPI', 15, 'monsters/arachdie.md2', 7, 5.0 / 35.0, S_BSPI_RAISE2) { }
	S_BSPI_RAISE2('BSPI', 14, 'monsters/arachdie.md2', 8, 5.0 / 35.0, S_BSPI_RAISE3) { }
	S_BSPI_RAISE3('BSPI', 13, 'monsters/arachdie.md2', 9, 5.0 / 35.0, S_BSPI_RAISE4) { }
	S_BSPI_RAISE4('BSPI', 12, 'monsters/arachdie.md2', 10, 5.0 / 35.0, S_BSPI_RAISE5) { }
	S_BSPI_RAISE5('BSPI', 11, 'monsters/arachdie.md2', 11, 5.0 / 35.0, S_BSPI_RAISE6) { }
	S_BSPI_RAISE6('BSPI', 10, 'monsters/arachdie.md2', 12, 5.0 / 35.0, S_BSPI_RAISE7) { }
	S_BSPI_RAISE7('BSPI', 9, 'monsters/arachdie.md2', 13, 5.0 / 35.0, S_BSPI_RUN1) { }
}

defaultproperties
{
	Health = 500;
	Radius = 64.0;
	Height = 64.0;
	Mass = 600.0;
	StepSpeed = 12.0;
	PainChance = 128;
	SpawnState = S_BSPI_STND;
	SeeState = S_BSPI_SIGHT;
	MissileState = S_BSPI_ATK1;
	PainState = S_BSPI_PAIN;
	DeathState = S_BSPI_DIE1;
	RaiseState = S_BSPI_RAISE1;
	SightSound = 'BabySight';
	ActiveSound = 'BabyActive';
	PainSound = 'DemonPain';
	DeathSound = 'BabyDeath';
}

}

//**************************************************************************
//
//	ArachnotronPlasma
//
//**************************************************************************

class ArachnotronPlasma:Projectile
{

__states__
{
	S_ARACH_PLAZ('APLS', 0 | FF_FULLBRIGHT, 'missiles/aplasma.md2', 0, 5.0 / 35.0, S_ARACH_PLAZ2) { }
	S_ARACH_PLAZ2('APLS', 1 | FF_FULLBRIGHT, 'missiles/aplasma.md2', 1, 5.0 / 35.0, S_ARACH_PLAZ) { }
	S_ARACH_PLEX('APBX', 0 | FF_FULLBRIGHT, 5.0 / 35.0, S_ARACH_PLEX2) { }
	S_ARACH_PLEX2('APBX', 1 | FF_FULLBRIGHT, 5.0 / 35.0, S_ARACH_PLEX3) { }
	S_ARACH_PLEX3('APBX', 2 | FF_FULLBRIGHT, 5.0 / 35.0, S_ARACH_PLEX4) { }
	S_ARACH_PLEX4('APBX', 3 | FF_FULLBRIGHT, 5.0 / 35.0, S_ARACH_PLEX5) { }
	S_ARACH_PLEX5('APBX', 4 | FF_FULLBRIGHT, 5.0 / 35.0, S_NULL) { }
}

defaultproperties
{
	Radius = 13.0;
	Height = 8.0;
	Speed = 875.0;
	MissileDamage = 5;
	Translucency = 33;
	SpawnState = S_ARACH_PLAZ;
	DeathState = S_ARACH_PLEX;
	SightSound = 'PlasmaFire';
	DeathSound = 'FireballExplode';
	Effects = EF_DL_MISSILE;
}

}

//**************************************************************************
//
//  $Log$
//  Revision 1.14  2002/05/03 17:11:52  dj_jl
//  Object classes split up into their files.
//
//  Revision 1.13  2002/03/20 19:07:43  dj_jl
//  Got rid of a lots of legacy, beautification.
//
//  Revision 1.12  2002/03/02 17:41:12  dj_jl
//  Renamed Enemy to Target. Beautification.
//
//  Revision 1.11  2002/02/26 17:49:47  dj_jl
//  no message
//
//  Revision 1.10  2002/02/22 18:00:06  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.9  2002/01/28 18:50:17  dj_jl
//  Made some functions Actor members.
//  Replaced some pointers with references.
//
//  Revision 1.8  2002/01/17 18:15:52  dj_jl
//  Renamed all map object classes
//
//  Revision 1.7  2002/01/11 18:19:40  dj_jl
//  Started to use names in progs
//
//  Revision 1.6  2002/01/07 12:21:10  dj_jl
//  Changed copyright year
//
//  Revision 1.5  2001/12/12 18:57:40  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.4  2001/09/24 17:24:09  dj_jl
//  Beautification
//
//  Revision 1.3  2001/08/29 17:42:13  dj_jl
//  Added sound channel
//  
//  Revision 1.2  2001/07/27 14:27:51  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
