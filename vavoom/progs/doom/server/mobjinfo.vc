//**************************************************************************
//**
//**	##   ##    ##    ##   ##   ####     ####   ###     ###
//**	##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**	 ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**	 ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**	  ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**	   #    ##    ##    #      ####     ####   ##       ##
//**
//**	$Id$
//**
//**	Copyright (C) 1999-2001 JÆnis Legzdi·ý
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**	Mobj info table
//**
//**	Generated by makeinfo.
//**
//**************************************************************************

//==========================================================================
//
//	misc_PLAYER
//
//==========================================================================

class misc_PLAYER:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 100;
		spawnhealth = health;
		gibshealth = -100;
		radius = 16.0;
		height = 56.0;
		mass = 100.0;
		painchance = 255;
		flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_PICKUP;
		spawnstate = S_PLAY;
		seestate = S_PLAY_RUN1;
		missilestate = S_PLAY_ATK1;
		painstate = S_PLAY_PAIN;
		deathstate = S_PLAY_DIE1;
		xdeathstate = S_PLAY_XDIE1;
		sound_pain = GetSoundID("PlayerPain");
		sound_death = GetSoundID("PlayerDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_zombieman
//
//==========================================================================

class misc_zombieman:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 20;
		spawnhealth = health;
		gibshealth = -20;
		radius = 20.0;
		height = 56.0;
		mass = 100.0;
		speed = 280.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 200;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_POSS_STND;
		seestate = S_POSS_RUN1;
		missilestate = S_POSS_ATK1;
		painstate = S_POSS_PAIN;
		deathstate = S_POSS_DIE1;
		xdeathstate = S_POSS_XDIE1;
		raisestate = S_POSS_RAISE1;
		sound_sight = GetSoundID("ZombieSight1");
		sound_active = GetSoundID("ZombieActive");
		sound_attack = GetSoundID("PistolFire");
		sound_pain = GetSoundID("ZombiePain");
		sound_death = GetSoundID("ZombieDeath1");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_shotgun_guy
//
//==========================================================================

class misc_shotgun_guy:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 30;
		spawnhealth = health;
		gibshealth = -30;
		radius = 20.0;
		height = 56.0;
		mass = 100.0;
		speed = 280.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 170;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_SPOS_STND;
		seestate = S_SPOS_RUN1;
		missilestate = S_SPOS_ATK1;
		painstate = S_SPOS_PAIN;
		deathstate = S_SPOS_DIE1;
		xdeathstate = S_SPOS_XDIE1;
		raisestate = S_SPOS_RAISE1;
		sound_sight = GetSoundID("ZombieSight2");
		sound_active = GetSoundID("ZombieActive");
		sound_pain = GetSoundID("ZombiePain");
		sound_death = GetSoundID("ZombieDeath2");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_arch_vile
//
//==========================================================================

class misc_arch_vile:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 700;
		spawnhealth = health;
		radius = 20.0;
		height = 56.0;
		mass = 500.0;
		speed = 525.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 10;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_VILE_STND;
		seestate = S_VILE_RUN1;
		missilestate = S_VILE_ATK1;
		painstate = S_VILE_PAIN;
		deathstate = S_VILE_DIE1;
		sound_sight = GetSoundID("ArchVileSight");
		sound_active = GetSoundID("ArchVileActive");
		sound_pain = GetSoundID("ArchVilePain");
		sound_death = GetSoundID("ArchVileDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_FIRE
//
//==========================================================================

class misc_FIRE:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_FIRE1;
		effects = EF_DL_MISSILE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_REVENANT
//
//==========================================================================

class misc_REVENANT:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 300;
		spawnhealth = health;
		radius = 20.0;
		height = 56.0;
		mass = 500.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 100;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_SKEL_STND;
		seestate = S_SKEL_RUN1;
		meleestate = S_SKEL_FIST1;
		missilestate = S_SKEL_MISS1;
		painstate = S_SKEL_PAIN;
		deathstate = S_SKEL_DIE1;
		raisestate = S_SKEL_RAISE1;
		sound_sight = GetSoundID("RavenantSight");
		sound_active = GetSoundID("RavenantActive");
		sound_pain = GetSoundID("ZombiePain");
		sound_death = GetSoundID("RavenantDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_TRACER
//
//==========================================================================

class misc_TRACER:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 11.0;
		height = 8.0;
		mass = 100.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 10;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		spawnstate = S_TRACER;
		deathstate = S_TRACEEXP1;
		sound_sight = GetSoundID("RavenantAttack");
		sound_death = GetSoundID("BarrelExplode");
		effects = EF_DL_RBALL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SMOKE
//
//==========================================================================

class misc_SMOKE:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_SMOKE1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MANCUBUS
//
//==========================================================================

class misc_MANCUBUS:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 600;
		spawnhealth = health;
		radius = 48.0;
		height = 64.0;
		mass = 1000.0;
		speed = 280.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 80;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_FATT_STND;
		seestate = S_FATT_RUN1;
		missilestate = S_FATT_ATK1;
		painstate = S_FATT_PAIN;
		deathstate = S_FATT_DIE1;
		raisestate = S_FATT_RAISE1;
		sound_sight = GetSoundID("MancubusSight");
		sound_active = GetSoundID("ZombieActive");
		sound_pain = GetSoundID("MancubusPain");
		sound_death = GetSoundID("MancubusDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_FATSHOT
//
//==========================================================================

class misc_FATSHOT:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 6.0;
		height = 8.0;
		mass = 100.0;
		speed = 700.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		spawnstate = S_FATSHOT1;
		deathstate = S_FATSHOTX1;
		sound_sight = GetSoundID("FireballShoot");
		sound_death = GetSoundID("FireballExplode");
		effects = EF_DL_RBALL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_HEAVY_WEAPON_DUDE
//
//==========================================================================

class misc_HEAVY_WEAPON_DUDE:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 70;
		spawnhealth = health;
		gibshealth = -70;
		radius = 20.0;
		height = 56.0;
		mass = 100.0;
		speed = 280.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 170;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_CPOS_STND;
		seestate = S_CPOS_RUN1;
		missilestate = S_CPOS_ATK1;
		painstate = S_CPOS_PAIN;
		deathstate = S_CPOS_DIE1;
		xdeathstate = S_CPOS_XDIE1;
		raisestate = S_CPOS_RAISE1;
		sound_sight = GetSoundID("ZombieSight2");
		sound_active = GetSoundID("ZombieActive");
		sound_pain = GetSoundID("ZombiePain");
		sound_death = GetSoundID("ZombieDeath2");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_IMP
//
//==========================================================================

class misc_IMP:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 60;
		spawnhealth = health;
		gibshealth = -60;
		radius = 20.0;
		height = 56.0;
		mass = 100.0;
		speed = 280.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 200;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_TROO_STND;
		seestate = S_TROO_RUN1;
		meleestate = S_TROO_ATK1;
		missilestate = S_TROO_ATK1;
		painstate = S_TROO_PAIN;
		deathstate = S_TROO_DIE1;
		xdeathstate = S_TROO_XDIE1;
		raisestate = S_TROO_RAISE1;
		sound_sight = GetSoundID("ImpSight1");
		sound_active = GetSoundID("ImpActive");
		sound_pain = GetSoundID("ZombiePain");
		sound_death = GetSoundID("ImpDeath1");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_DEMON
//
//==========================================================================

class misc_DEMON:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 150;
		spawnhealth = health;
		radius = 30.0;
		height = 56.0;
		mass = 400.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 180;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_SARG_STND;
		seestate = S_SARG_RUN1;
		meleestate = S_SARG_ATK1;
		painstate = S_SARG_PAIN;
		deathstate = S_SARG_DIE1;
		raisestate = S_SARG_RAISE1;
		sound_sight = GetSoundID("DemonSight");
		sound_active = GetSoundID("DemonActive");
		sound_attack = GetSoundID("DemonAttack");
		sound_pain = GetSoundID("DemonPain");
		sound_death = GetSoundID("DemonDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SHADOWS
//
//==========================================================================

class misc_SHADOWS:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		translucency = 90;
		health = 150;
		spawnhealth = health;
		radius = 30.0;
		height = 56.0;
		mass = 400.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 180;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_SARG_STND;
		seestate = S_SARG_RUN1;
		meleestate = S_SARG_ATK1;
		painstate = S_SARG_PAIN;
		deathstate = S_SARG_DIE1;
		raisestate = S_SARG_RAISE1;
		sound_sight = GetSoundID("DemonSight");
		sound_active = GetSoundID("DemonActive");
		sound_attack = GetSoundID("DemonAttack");
		sound_pain = GetSoundID("DemonPain");
		sound_death = GetSoundID("DemonDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_CACODEMON
//
//==========================================================================

class misc_CACODEMON:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 400;
		spawnhealth = health;
		radius = 31.0;
		height = 56.0;
		mass = 400.0;
		speed = 280.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 128;
		flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_FLOAT|MF_COUNTKILL;
		spawnstate = S_HEAD_STND;
		seestate = S_HEAD_RUN1;
		missilestate = S_HEAD_ATK1;
		painstate = S_HEAD_PAIN;
		deathstate = S_HEAD_DIE1;
		raisestate = S_HEAD_RAISE1;
		sound_sight = GetSoundID("CacoSight");
		sound_active = GetSoundID("DemonActive");
		sound_pain = GetSoundID("DemonPain");
		sound_death = GetSoundID("CacoDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BARON_OF_HELL
//
//==========================================================================

class misc_BARON_OF_HELL:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 1000;
		spawnhealth = health;
		radius = 24.0;
		height = 64.0;
		mass = 1000.0;
		speed = 280.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 50;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_BOSS_STND;
		seestate = S_BOSS_RUN1;
		meleestate = S_BOSS_ATK1;
		missilestate = S_BOSS_ATK1;
		painstate = S_BOSS_PAIN;
		deathstate = S_BOSS_DIE1;
		raisestate = S_BOSS_RAISE1;
		sound_sight = GetSoundID("BaronSight");
		sound_active = GetSoundID("DemonActive");
		sound_pain = GetSoundID("DemonPain");
		sound_death = GetSoundID("BaronDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BRUISERSHOT
//
//==========================================================================

class misc_BRUISERSHOT:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 6.0;
		height = 8.0;
		mass = 100.0;
		speed = 525.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		spawnstate = S_BRBALL1;
		deathstate = S_BRBALLX1;
		sound_sight = GetSoundID("FireballShoot");
		sound_death = GetSoundID("FireballExplode");
		effects = EF_DL_GBALL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_HELL_KNIGHT
//
//==========================================================================

class misc_HELL_KNIGHT:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 500;
		spawnhealth = health;
		radius = 24.0;
		height = 64.0;
		mass = 1000.0;
		speed = 280.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 50;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_BOS2_STND;
		seestate = S_BOS2_RUN1;
		meleestate = S_BOS2_ATK1;
		missilestate = S_BOS2_ATK1;
		painstate = S_BOS2_PAIN;
		deathstate = S_BOS2_DIE1;
		raisestate = S_BOS2_RAISE1;
		sound_sight = GetSoundID("KnightSight");
		sound_active = GetSoundID("DemonActive");
		sound_pain = GetSoundID("DemonPain");
		sound_death = GetSoundID("KnightDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_LOST_SOUL
//
//==========================================================================

class misc_LOST_SOUL:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		translucency = 33;
		health = 100;
		spawnhealth = health;
		radius = 16.0;
		height = 56.0;
		mass = 50.0;
		speed = 280.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 256;
		damage = 3;
		flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_FLOAT;
		spawnstate = S_SKULL_STND;
		seestate = S_SKULL_RUN1;
		missilestate = S_SKULL_ATK1;
		painstate = S_SKULL_PAIN;
		deathstate = S_SKULL_DIE1;
		sound_active = GetSoundID("DemonActive");
		sound_attack = GetSoundID("LostSoulAttack");
		sound_pain = GetSoundID("DemonPain");
		sound_death = GetSoundID("FireballExplode");
		effects = EF_DL_MISSILE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_THE_SPIDER_MASTERMIND
//
//==========================================================================

class misc_THE_SPIDER_MASTERMIND:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 3000;
		spawnhealth = health;
		radius = 128.0;
		height = 100.0;
		mass = 1000.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 40;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_SPID_STND;
		seestate = S_SPID_RUN1;
		missilestate = S_SPID_ATK1;
		painstate = S_SPID_PAIN;
		deathstate = S_SPID_DIE1;
		sound_sight = GetSoundID("SpiderSight");
		sound_active = GetSoundID("DemonActive");
		sound_attack = GetSoundID("ShotgunFire");
		sound_pain = GetSoundID("DemonPain");
		sound_death = GetSoundID("SpiderDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_ARACHNOTRON
//
//==========================================================================

class misc_ARACHNOTRON:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 500;
		spawnhealth = health;
		radius = 64.0;
		height = 64.0;
		mass = 600.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 128;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_BSPI_STND;
		seestate = S_BSPI_SIGHT;
		missilestate = S_BSPI_ATK1;
		painstate = S_BSPI_PAIN;
		deathstate = S_BSPI_DIE1;
		raisestate = S_BSPI_RAISE1;
		sound_sight = GetSoundID("BabySight");
		sound_active = GetSoundID("BabyActive");
		sound_pain = GetSoundID("DemonPain");
		sound_death = GetSoundID("BabyDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_THE_CYBERDEMON
//
//==========================================================================

class misc_THE_CYBERDEMON:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 4000;
		spawnhealth = health;
		radius = 40.0;
		height = 110.0;
		mass = 1000.0;
		speed = 560.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 20;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_CYBER_STND;
		seestate = S_CYBER_RUN1;
		missilestate = S_CYBER_ATK1;
		painstate = S_CYBER_PAIN;
		deathstate = S_CYBER_DIE1;
		sound_sight = GetSoundID("CyberSight");
		sound_active = GetSoundID("DemonActive");
		sound_pain = GetSoundID("DemonPain");
		sound_death = GetSoundID("CyberDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_PAIN_ELEMENTAL
//
//==========================================================================

class misc_PAIN_ELEMENTAL:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 400;
		spawnhealth = health;
		radius = 31.0;
		height = 56.0;
		mass = 400.0;
		speed = 280.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 128;
		flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_FLOAT|MF_COUNTKILL;
		spawnstate = S_PAIN_STND;
		seestate = S_PAIN_RUN1;
		missilestate = S_PAIN_ATK1;
		painstate = S_PAIN_PAIN;
		deathstate = S_PAIN_DIE1;
		raisestate = S_PAIN_RAISE1;
		sound_sight = GetSoundID("PainElementalSight");
		sound_active = GetSoundID("DemonActive");
		sound_pain = GetSoundID("PainElementalPain");
		sound_death = GetSoundID("PainElementalDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_WOLFSS
//
//==========================================================================

class misc_WOLFSS:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 50;
		spawnhealth = health;
		gibshealth = -50;
		radius = 20.0;
		height = 56.0;
		mass = 100.0;
		speed = 280.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 170;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		spawnstate = S_SSWV_STND;
		seestate = S_SSWV_RUN1;
		missilestate = S_SSWV_ATK1;
		painstate = S_SSWV_PAIN;
		deathstate = S_SSWV_DIE1;
		xdeathstate = S_SSWV_XDIE1;
		raisestate = S_SSWV_RAISE1;
		sound_sight = GetSoundID("SSNaziSight");
		sound_active = GetSoundID("ZombieActive");
		sound_pain = GetSoundID("ZombiePain");
		sound_death = GetSoundID("SSNaziDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_KEEN
//
//==========================================================================

class misc_KEEN:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 100;
		spawnhealth = health;
		radius = 16.0;
		height = 72.0;
		mass = 10000000.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 256;
		flags = MF_SOLID|MF_SHOOTABLE|MF_SPAWNCEILING|MF_NOGRAVITY|MF_COUNTKILL;
		spawnstate = S_KEENSTND;
		painstate = S_KEENPAIN;
		deathstate = S_COMMKEEN;
		sound_pain = GetSoundID("KeenPain");
		sound_death = GetSoundID("KeenDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BOSSBRAIN
//
//==========================================================================

class misc_BOSSBRAIN:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 250;
		spawnhealth = health;
		radius = 16.0;
		height = 16.0;
		mass = 10000000.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 255;
		flags = MF_SOLID|MF_SHOOTABLE;
		spawnstate = S_BRAIN;
		painstate = S_BRAIN_PAIN;
		deathstate = S_BRAIN_DIE1;
		sound_pain = GetSoundID("BossPain");
		sound_death = GetSoundID("BossDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BOSSSPIT
//
//==========================================================================

class misc_BOSSSPIT:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 32.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOSECTOR|MF_NOBLOCKMAP;
		spawnstate = S_BRAINEYE;
		seestate = S_BRAINEYESEE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BOSSTARGET
//
//==========================================================================

class misc_BOSSTARGET:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 32.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOSECTOR|MF_NOBLOCKMAP;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SPAWNSHOT
//
//==========================================================================

class misc_SPAWNSHOT:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 6.0;
		height = 32.0;
		mass = 100.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 3;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_NOCLIP|MF_MISSILE;
		spawnstate = S_SPAWN1;
		sound_sight = GetSoundID("BossFire");
		sound_death = GetSoundID("FireballExplode");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SPAWNFIRE
//
//==========================================================================

class misc_SPAWNFIRE:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_SPAWNFIRE1;
		effects = EF_DL_MISSILE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BARREL
//
//==========================================================================

class misc_BARREL:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 20;
		spawnhealth = health;
		radius = 10.0;
		height = 42.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SHOOTABLE|MF_NOBLOOD;
		spawnstate = S_BAR1;
		deathstate = S_BEXP;
		sound_death = GetSoundID("BarrelExplode");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_TROOPSHOT
//
//==========================================================================

class misc_TROOPSHOT:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 6.0;
		height = 8.0;
		mass = 100.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 3;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		spawnstate = S_TBALL1;
		deathstate = S_TBALLX1;
		sound_sight = GetSoundID("FireballShoot");
		sound_death = GetSoundID("FireballExplode");
		effects = EF_DL_RBALL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_HEADSHOT
//
//==========================================================================

class misc_HEADSHOT:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 6.0;
		height = 8.0;
		mass = 100.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 5;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		spawnstate = S_RBALL1;
		deathstate = S_RBALLX1;
		sound_sight = GetSoundID("FireballShoot");
		sound_death = GetSoundID("FireballExplode");
		effects = EF_DL_RBALL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_ROCKET
//
//==========================================================================

class misc_ROCKET:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 11.0;
		height = 8.0;
		mass = 100.0;
		speed = 700.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 20;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		spawnstate = S_ROCKET;
		deathstate = S_EXPLODE1;
		sound_sight = GetSoundID("LauncherFire");
		sound_death = GetSoundID("BarrelExplode");
		effects = EF_DL_MISSILE | EF_ROCKET;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_PLASMA
//
//==========================================================================

class misc_PLASMA:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 13.0;
		height = 8.0;
		mass = 100.0;
		speed = 875.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 5;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		spawnstate = S_PLASBALL;
		deathstate = S_PLASEXP;
		sound_sight = GetSoundID("PlasmaFire");
		sound_death = GetSoundID("FireballExplode");
		effects = EF_DL_PLASMA;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BFG
//
//==========================================================================

class misc_BFG:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 13.0;
		height = 8.0;
		mass = 100.0;
		speed = 875.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 100;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		spawnstate = S_BFGSHOT;
		deathstate = S_BFGLAND;
		sound_death = GetSoundID("RocketExplode");
		effects = EF_DL_GBALL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_ARACHPLAZ
//
//==========================================================================

class misc_ARACHPLAZ:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 13.0;
		height = 8.0;
		mass = 100.0;
		speed = 875.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 5;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		spawnstate = S_ARACH_PLAZ;
		deathstate = S_ARACH_PLEX;
		sound_sight = GetSoundID("PlasmaFire");
		sound_death = GetSoundID("FireballExplode");
		effects = EF_DL_MISSILE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_PUFF
//
//==========================================================================

class misc_PUFF:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_PUFF1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BLOOD
//
//==========================================================================

class misc_BLOOD:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP;
		spawnstate = S_BLOOD1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_TFOG
//
//==========================================================================

class misc_TFOG:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_TFOG;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_IFOG
//
//==========================================================================

class misc_IFOG:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_IFOG;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_TELEPORTMAN
//
//==========================================================================

class misc_TELEPORTMAN:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOSECTOR|MF_NOBLOCKMAP;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_EXTRABFG
//
//==========================================================================

class misc_EXTRABFG:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_BFGEXP;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC0
//
//==========================================================================

class misc_MISC0:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_ARM1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC1
//
//==========================================================================

class misc_MISC1:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_ARM2;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC2
//
//==========================================================================

class misc_MISC2:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		spawnstate = S_BON1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC3
//
//==========================================================================

class misc_MISC3:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		spawnstate = S_BON2;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC4
//
//==========================================================================

class misc_MISC4:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (deathmatch)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_BKEY;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC5
//
//==========================================================================

class misc_MISC5:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (deathmatch)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_RKEY;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC6
//
//==========================================================================

class misc_MISC6:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (deathmatch)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_YKEY;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC7
//
//==========================================================================

class misc_MISC7:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (deathmatch)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_YSKULL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC8
//
//==========================================================================

class misc_MISC8:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (deathmatch)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_RSKULL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC9
//
//==========================================================================

class misc_MISC9:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (deathmatch)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_BSKULL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC10
//
//==========================================================================

class misc_MISC10:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_STIM;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC11
//
//==========================================================================

class misc_MISC11:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_MEDI;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC12
//
//==========================================================================

class misc_MISC12:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		spawnstate = S_SOUL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_INV
//
//==========================================================================

class misc_INV:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		spawnstate = S_PINV;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC13
//
//==========================================================================

class misc_MISC13:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		spawnstate = S_PSTR;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_INS
//
//==========================================================================

class misc_INS:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		spawnstate = S_PINS;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC14
//
//==========================================================================

class misc_MISC14:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_SUIT;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC15
//
//==========================================================================

class misc_MISC15:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		spawnstate = S_PMAP;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC16
//
//==========================================================================

class misc_MISC16:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		spawnstate = S_PVIS;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MEGA
//
//==========================================================================

class misc_MEGA:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		spawnstate = S_MEGA;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_CLIP
//
//==========================================================================

class misc_CLIP:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_CLIP;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC17
//
//==========================================================================

class misc_MISC17:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AMMO;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC18
//
//==========================================================================

class misc_MISC18:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_ROCK;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC19
//
//==========================================================================

class misc_MISC19:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_BROK;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC20
//
//==========================================================================

class misc_MISC20:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_CELL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC21
//
//==========================================================================

class misc_MISC21:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_CELP;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC22
//
//==========================================================================

class misc_MISC22:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_SHEL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC23
//
//==========================================================================

class misc_MISC23:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_SBOX;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC24
//
//==========================================================================

class misc_MISC24:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_BPAK;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC25
//
//==========================================================================

class misc_MISC25:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_BFUG;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_CHAINGUN
//
//==========================================================================

class misc_CHAINGUN:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_MGUN;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC26
//
//==========================================================================

class misc_MISC26:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_CSAW;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC27
//
//==========================================================================

class misc_MISC27:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_LAUN;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC28
//
//==========================================================================

class misc_MISC28:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_PLAS;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SHOTGUN
//
//==========================================================================

class misc_SHOTGUN:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_SHOT;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SUPERSHOTGUN
//
//==========================================================================

class misc_SUPERSHOTGUN:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_SHOT2;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC29
//
//==========================================================================

class misc_MISC29:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 72.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_TECHLAMP;
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 64.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
	}
};

//==========================================================================
//
//	misc_MISC30
//
//==========================================================================

class misc_MISC30:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 56.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_TECH2LAMP;
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 48.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
	}
};

//==========================================================================
//
//	misc_MISC31
//
//==========================================================================

class misc_MISC31:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 48.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_COLU;
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
	}
};

//==========================================================================
//
//	misc_MISC32
//
//==========================================================================

class misc_MISC32:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 52.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_TALLGRNCOL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC33
//
//==========================================================================

class misc_MISC33:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 40.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_SHRTGRNCOL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC34
//
//==========================================================================

class misc_MISC34:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 52.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_TALLREDCOL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC35
//
//==========================================================================

class misc_MISC35:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 40.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_SHRTREDCOL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC36
//
//==========================================================================

class misc_MISC36:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 40.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_SKULLCOL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC37
//
//==========================================================================

class misc_MISC37:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 40.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_HEARTCOL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC38
//
//==========================================================================

class misc_MISC38:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_EVILEYE;
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 128.0);
	}
};

//==========================================================================
//
//	misc_MISC39
//
//==========================================================================

class misc_MISC39:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 48.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_FLOATSKULL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC40
//
//==========================================================================

class misc_MISC40:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 64.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_TORCHTREE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC41
//
//==========================================================================

class misc_MISC41:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 64.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_BLUETORCH;
		::OnMapSpawn(mthing);
		AddStaticLightRGB(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0, RGB(0, 0, 255));
	}
};

//==========================================================================
//
//	misc_MISC42
//
//==========================================================================

class misc_MISC42:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 64.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_GREENTORCH;
		::OnMapSpawn(mthing);
		AddStaticLightRGB(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0, RGB(0, 255, 0));
	}
};

//==========================================================================
//
//	misc_MISC43
//
//==========================================================================

class misc_MISC43:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 64.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_REDTORCH;
		::OnMapSpawn(mthing);
		AddStaticLightRGB(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0, RGB(255, 0, 0));
	}
};

//==========================================================================
//
//	misc_MISC44
//
//==========================================================================

class misc_MISC44:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 40.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_BTORCHSHRT;
		::OnMapSpawn(mthing);
		AddStaticLightRGB(origin + vector(0.0, 0.0, 16.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0, RGB(0, 0, 255));
	}
};

//==========================================================================
//
//	misc_MISC45
//
//==========================================================================

class misc_MISC45:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 40.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_GTORCHSHRT;
		::OnMapSpawn(mthing);
		AddStaticLightRGB(origin + vector(0.0, 0.0, 16.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0, RGB(0, 255, 0));
	}
};

//==========================================================================
//
//	misc_MISC46
//
//==========================================================================

class misc_MISC46:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 40.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_RTORCHSHRT;
		::OnMapSpawn(mthing);
		AddStaticLightRGB(origin + vector(0.0, 0.0, 16.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0, RGB(255, 0, 0));
	}
};

//==========================================================================
//
//	misc_MISC47
//
//==========================================================================

class misc_MISC47:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 40.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_STALAGTITE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC48
//
//==========================================================================

class misc_MISC48:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 120.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_TECHPILLAR;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC49
//
//==========================================================================

class misc_MISC49:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		spawnstate = S_CANDLESTIK;
		::OnMapSpawn(mthing);
		AddStaticLight(origin, mthing->arg1 ? itof(mthing->arg1) * 8.0 : 64.0);
	}
};

//==========================================================================
//
//	misc_MISC50
//
//==========================================================================

class misc_MISC50:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 56.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_CANDELABRA;
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 128.0);
	}
};

//==========================================================================
//
//	misc_MISC51
//
//==========================================================================

class misc_MISC51:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 68.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_BLOODYTWITCH;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC52
//
//==========================================================================

class misc_MISC52:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 84.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_MEAT2;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC53
//
//==========================================================================

class misc_MISC53:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 84.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_MEAT3;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC54
//
//==========================================================================

class misc_MISC54:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 68.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_MEAT4;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC55
//
//==========================================================================

class misc_MISC55:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 52.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_MEAT5;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC56
//
//==========================================================================

class misc_MISC56:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 84.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_MEAT2;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC57
//
//==========================================================================

class misc_MISC57:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 68.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_MEAT4;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC58
//
//==========================================================================

class misc_MISC58:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 52.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_MEAT3;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC59
//
//==========================================================================

class misc_MISC59:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 52.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_MEAT5;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC60
//
//==========================================================================

class misc_MISC60:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 68.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_BLOODYTWITCH;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC61
//
//==========================================================================

class misc_MISC61:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		spawnstate = S_HEAD_DIE6;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC62
//
//==========================================================================

class misc_MISC62:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		spawnstate = S_PLAY_DIE7;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC63
//
//==========================================================================

class misc_MISC63:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		spawnstate = S_POSS_DIE5;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC64
//
//==========================================================================

class misc_MISC64:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		spawnstate = S_SARG_DIE6;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC65
//
//==========================================================================

class misc_MISC65:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		spawnstate = S_SKULL_DIE6;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC66
//
//==========================================================================

class misc_MISC66:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		spawnstate = S_TROO_DIE5;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC67
//
//==========================================================================

class misc_MISC67:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		spawnstate = S_SPOS_DIE5;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC68
//
//==========================================================================

class misc_MISC68:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		spawnstate = S_PLAY_XDIE9;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC69
//
//==========================================================================

class misc_MISC69:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		spawnstate = S_PLAY_XDIE9;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC70
//
//==========================================================================

class misc_MISC70:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 64.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_HEADSONSTICK;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC71
//
//==========================================================================

class misc_MISC71:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		spawnstate = S_GIBS;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC72
//
//==========================================================================

class misc_MISC72:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 56.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_HEADONASTICK;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC73
//
//==========================================================================

class misc_MISC73:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 48.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_HEADCANDLES;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC74
//
//==========================================================================

class misc_MISC74:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 64.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_DEADSTICK;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC75
//
//==========================================================================

class misc_MISC75:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 64.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_LIVESTICK;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC76
//
//==========================================================================

class misc_MISC76:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 32.0;
		height = 96.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_BIGTREE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC77
//
//==========================================================================

class misc_MISC77:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 32.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_BBAR1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC78
//
//==========================================================================

class misc_MISC78:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 88.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_HANGNOGUTS;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC79
//
//==========================================================================

class misc_MISC79:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 88.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_HANGBNOBRAIN;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC80
//
//==========================================================================

class misc_MISC80:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 64.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_HANGTLOOKDN;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC81
//
//==========================================================================

class misc_MISC81:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 64.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_HANGTSKULL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC82
//
//==========================================================================

class misc_MISC82:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 64.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_HANGTLOOKUP;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC83
//
//==========================================================================

class misc_MISC83:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 64.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_HANGTNOBRAIN;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC84
//
//==========================================================================

class misc_MISC84:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP;
		spawnstate = S_COLONGIBS;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC85
//
//==========================================================================

class misc_MISC85:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP;
		spawnstate = S_SMALLPOOL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC86
//
//==========================================================================

class misc_MISC86:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP;
		spawnstate = S_BRAINSTEM;
		::OnMapSpawn(mthing);
	}
};

__mobjinfo__
{
	MT_PLAYER { -1, misc_PLAYER }
	MT_POSSESSED { 3004, misc_zombieman }
	MT_SHOTGUY { 9, misc_shotgun_guy }
	MT_VILE { 64, misc_arch_vile }
	MT_FIRE { -1, misc_FIRE }
	MT_UNDEAD { 66, misc_REVENANT }
	MT_TRACER { -1, misc_TRACER }
	MT_SMOKE { -1, misc_SMOKE }
	MT_FATSO { 67, misc_MANCUBUS }
	MT_FATSHOT { -1, misc_FATSHOT }
	MT_CHAINGUY { 65, misc_HEAVY_WEAPON_DUDE }
	MT_TROOP { 3001, misc_IMP }
	MT_SERGEANT { 3002, misc_DEMON }
	MT_SHADOWS { 58, misc_SHADOWS }
	MT_HEAD { 3005, misc_CACODEMON }
	MT_BRUISER { 3003, misc_BARON_OF_HELL }
	MT_BRUISERSHOT { -1, misc_BRUISERSHOT }
	MT_KNIGHT { 69, misc_HELL_KNIGHT }
	MT_SKULL { 3006, misc_LOST_SOUL }
	MT_SPIDER { 7, misc_THE_SPIDER_MASTERMIND }
	MT_BABY { 68, misc_ARACHNOTRON }
	MT_CYBORG { 16, misc_THE_CYBERDEMON }
	MT_PAIN { 71, misc_PAIN_ELEMENTAL }
	MT_WOLFSS { 84, misc_WOLFSS }
	MT_KEEN { 72, misc_KEEN }
	MT_BOSSBRAIN { 88, misc_BOSSBRAIN }
	MT_BOSSSPIT { 89, misc_BOSSSPIT }
	MT_BOSSTARGET { 87, misc_BOSSTARGET }
	MT_SPAWNSHOT { -1, misc_SPAWNSHOT }
	MT_SPAWNFIRE { -1, misc_SPAWNFIRE }
	MT_BARREL { 2035, misc_BARREL }
	MT_TROOPSHOT { -1, misc_TROOPSHOT }
	MT_HEADSHOT { -1, misc_HEADSHOT }
	MT_ROCKET { -1, misc_ROCKET }
	MT_PLASMA { -1, misc_PLASMA }
	MT_BFG { -1, misc_BFG }
	MT_ARACHPLAZ { -1, misc_ARACHPLAZ }
	MT_PUFF { -1, misc_PUFF }
	MT_BLOOD { -1, misc_BLOOD }
	MT_TFOG { -1, misc_TFOG }
	MT_IFOG { -1, misc_IFOG }
	MT_TELEPORTMAN { 14, misc_TELEPORTMAN }
	MT_EXTRABFG { -1, misc_EXTRABFG }
	MT_MISC0 { 2018, misc_MISC0 }
	MT_MISC1 { 2019, misc_MISC1 }
	MT_MISC2 { 2014, misc_MISC2 }
	MT_MISC3 { 2015, misc_MISC3 }
	MT_MISC4 { 5, misc_MISC4 }
	MT_MISC5 { 13, misc_MISC5 }
	MT_MISC6 { 6, misc_MISC6 }
	MT_MISC7 { 39, misc_MISC7 }
	MT_MISC8 { 38, misc_MISC8 }
	MT_MISC9 { 40, misc_MISC9 }
	MT_MISC10 { 2011, misc_MISC10 }
	MT_MISC11 { 2012, misc_MISC11 }
	MT_MISC12 { 2013, misc_MISC12 }
	MT_INV { 2022, misc_INV }
	MT_MISC13 { 2023, misc_MISC13 }
	MT_INS { 2024, misc_INS }
	MT_MISC14 { 2025, misc_MISC14 }
	MT_MISC15 { 2026, misc_MISC15 }
	MT_MISC16 { 2045, misc_MISC16 }
	MT_MEGA { 83, misc_MEGA }
	MT_CLIP { 2007, misc_CLIP }
	MT_MISC17 { 2048, misc_MISC17 }
	MT_MISC18 { 2010, misc_MISC18 }
	MT_MISC19 { 2046, misc_MISC19 }
	MT_MISC20 { 2047, misc_MISC20 }
	MT_MISC21 { 17, misc_MISC21 }
	MT_MISC22 { 2008, misc_MISC22 }
	MT_MISC23 { 2049, misc_MISC23 }
	MT_MISC24 { 8, misc_MISC24 }
	MT_MISC25 { 2006, misc_MISC25 }
	MT_CHAINGUN { 2002, misc_CHAINGUN }
	MT_MISC26 { 2005, misc_MISC26 }
	MT_MISC27 { 2003, misc_MISC27 }
	MT_MISC28 { 2004, misc_MISC28 }
	MT_SHOTGUN { 2001, misc_SHOTGUN }
	MT_SUPERSHOTGUN { 82, misc_SUPERSHOTGUN }
	MT_MISC29 { 85, misc_MISC29 }
	MT_MISC30 { 86, misc_MISC30 }
	MT_MISC31 { 2028, misc_MISC31 }
	MT_MISC32 { 30, misc_MISC32 }
	MT_MISC33 { 31, misc_MISC33 }
	MT_MISC34 { 32, misc_MISC34 }
	MT_MISC35 { 33, misc_MISC35 }
	MT_MISC36 { 37, misc_MISC36 }
	MT_MISC37 { 36, misc_MISC37 }
	MT_MISC38 { 41, misc_MISC38 }
	MT_MISC39 { 42, misc_MISC39 }
	MT_MISC40 { 43, misc_MISC40 }
	MT_MISC41 { 44, misc_MISC41 }
	MT_MISC42 { 45, misc_MISC42 }
	MT_MISC43 { 46, misc_MISC43 }
	MT_MISC44 { 55, misc_MISC44 }
	MT_MISC45 { 56, misc_MISC45 }
	MT_MISC46 { 57, misc_MISC46 }
	MT_MISC47 { 47, misc_MISC47 }
	MT_MISC48 { 48, misc_MISC48 }
	MT_MISC49 { 34, misc_MISC49 }
	MT_MISC50 { 35, misc_MISC50 }
	MT_MISC51 { 49, misc_MISC51 }
	MT_MISC52 { 50, misc_MISC52 }
	MT_MISC53 { 51, misc_MISC53 }
	MT_MISC54 { 52, misc_MISC54 }
	MT_MISC55 { 53, misc_MISC55 }
	MT_MISC56 { 59, misc_MISC56 }
	MT_MISC57 { 60, misc_MISC57 }
	MT_MISC58 { 61, misc_MISC58 }
	MT_MISC59 { 62, misc_MISC59 }
	MT_MISC60 { 63, misc_MISC60 }
	MT_MISC61 { 22, misc_MISC61 }
	MT_MISC62 { 15, misc_MISC62 }
	MT_MISC63 { 18, misc_MISC63 }
	MT_MISC64 { 21, misc_MISC64 }
	MT_MISC65 { 23, misc_MISC65 }
	MT_MISC66 { 20, misc_MISC66 }
	MT_MISC67 { 19, misc_MISC67 }
	MT_MISC68 { 10, misc_MISC68 }
	MT_MISC69 { 12, misc_MISC69 }
	MT_MISC70 { 28, misc_MISC70 }
	MT_MISC71 { 24, misc_MISC71 }
	MT_MISC72 { 27, misc_MISC72 }
	MT_MISC73 { 29, misc_MISC73 }
	MT_MISC74 { 25, misc_MISC74 }
	MT_MISC75 { 26, misc_MISC75 }
	MT_MISC76 { 54, misc_MISC76 }
	MT_MISC77 { 70, misc_MISC77 }
	MT_MISC78 { 73, misc_MISC78 }
	MT_MISC79 { 74, misc_MISC79 }
	MT_MISC80 { 75, misc_MISC80 }
	MT_MISC81 { 76, misc_MISC81 }
	MT_MISC82 { 77, misc_MISC82 }
	MT_MISC83 { 78, misc_MISC83 }
	MT_MISC84 { 79, misc_MISC84 }
	MT_MISC85 { 80, misc_MISC85 }
	MT_MISC86 { 81, misc_MISC86 }
}

//**************************************************************************
//
//	$Log$
//	Revision 1.7  2001/10/18 17:39:33  dj_jl
//	A lots of changes for Alpha 2
//
//	Revision 1.6  2001/10/02 17:42:37  dj_jl
//	Possibility to declare function's code inside class declaration
//	
//	Revision 1.5  2001/09/27 17:08:19  dj_jl
//	Removed spawn functions, added mobj classes
//	
//	Revision 1.4  2001/09/20 16:19:59  dj_jl
//	Start using object-oriented stuff, beautification
//	
//	Revision 1.3  2001/08/04 17:21:04  dj_jl
//	Removed translucency from torches
//
//	Revision 1.2  2001/07/27 14:27:51  dj_jl
//	Update with Id-s and Log-s, some fixes
//
//**************************************************************************
