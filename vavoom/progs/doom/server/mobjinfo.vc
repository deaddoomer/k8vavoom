//**************************************************************************
//**
//**	##   ##    ##    ##   ##   ####     ####   ###     ###
//**	##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**	 ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**	 ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**	  ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**	   #    ##    ##    #      ####     ####   ##       ##
//**
//**	$Id$
//**
//**	Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**	Mobj info table
//**
//**	Generated by makeinfo.
//**
//**************************************************************************

//==========================================================================
//
//	PlayerEntity
//
//==========================================================================

class PlayerEntity:Actor
{
	defaultproperties
	{
		Health = 100;
		GibsHealth = -100;
		Radius = 16.0;
		Height = 56.0;
		Mass = 100.0;
		PainChance = 255;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_PICKUP;
		SpawnState = S_PLAY;
		SeeState = S_PLAY_RUN1;
		MissileState = S_PLAY_ATK1;
		PainState = S_PLAY_PAIN;
		DeathState = S_PLAY_DIE1;
		GibsDeathState = S_PLAY_XDIE1;
		PainSound = 'PlayerPain';
		DeathSound = 'PlayerDeath';
	}
};

//==========================================================================
//
//	Zombieman
//
//==========================================================================

class Zombieman:Actor
	__mobjinfo__(3004)
{
	defaultproperties
	{
		Health = 20;
		GibsHealth = -20;
		Radius = 20.0;
		Height = 56.0;
		Mass = 100.0;
		Speed = 280.0;
		ReactionCount = 8;
		PainChance = 200;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_POSS_STND;
		SeeState = S_POSS_RUN1;
		MissileState = S_POSS_ATK1;
		PainState = S_POSS_PAIN;
		DeathState = S_POSS_DIE1;
		GibsDeathState = S_POSS_XDIE1;
		RaiseState = S_POSS_RAISE1;
		SightSound = 'ZombieSight1';
		ActiveSound = 'ZombieActive';
		AttackSound = 'PistolFire';
		PainSound = 'ZombiePain';
		DeathSound = 'ZombieDeath1';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	ShotgunGuy
//
//==========================================================================

class ShotgunGuy:Actor
	__mobjinfo__(9)
{
	defaultproperties
	{
		Health = 30;
		GibsHealth = -30;
		Radius = 20.0;
		Height = 56.0;
		Mass = 100.0;
		Speed = 280.0;
		ReactionCount = 8;
		PainChance = 170;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_SPOS_STND;
		SeeState = S_SPOS_RUN1;
		MissileState = S_SPOS_ATK1;
		PainState = S_SPOS_PAIN;
		DeathState = S_SPOS_DIE1;
		GibsDeathState = S_SPOS_XDIE1;
		RaiseState = S_SPOS_RAISE1;
		SightSound = 'ZombieSight2';
		ActiveSound = 'ZombieActive';
		PainSound = 'ZombiePain';
		DeathSound = 'ZombieDeath2';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	ArchVile
//
//==========================================================================

class ArchVile:Actor
	__mobjinfo__(64)
{
	defaultproperties
	{
		Health = 700;
		Radius = 20.0;
		Height = 56.0;
		Mass = 500.0;
		Speed = 525.0;
		ReactionCount = 8;
		PainChance = 10;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_VILE_STND;
		SeeState = S_VILE_RUN1;
		MissileState = S_VILE_ATK1;
		PainState = S_VILE_PAIN;
		DeathState = S_VILE_DIE1;
		SightSound = 'ArchVileSight';
		ActiveSound = 'ArchVileActive';
		PainSound = 'ArchVilePain';
		DeathSound = 'ArchVileDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	ArchvileFire
//
//==========================================================================

class ArchvileFire:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_FIRE1;
		Effects = EF_DL_MISSILE;
	}
};

//==========================================================================
//
//	Revenant
//
//==========================================================================

class Revenant:Actor
	__mobjinfo__(66)
{
	defaultproperties
	{
		Health = 300;
		Radius = 20.0;
		Height = 56.0;
		Mass = 500.0;
		Speed = 350.0;
		ReactionCount = 8;
		PainChance = 100;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_SKEL_STND;
		SeeState = S_SKEL_RUN1;
		MeleeState = S_SKEL_FIST1;
		MissileState = S_SKEL_MISS1;
		PainState = S_SKEL_PAIN;
		DeathState = S_SKEL_DIE1;
		RaiseState = S_SKEL_RAISE1;
		SightSound = 'RavenantSight';
		ActiveSound = 'RavenantActive';
		PainSound = 'ZombiePain';
		DeathSound = 'RavenantDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	RevenantTracer
//
//==========================================================================

class RevenantTracer:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 11.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 350.0;
		ReactionCount = 8;
		MissileDamage = 10;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		SpawnState = S_TRACER;
		DeathState = S_TRACEEXP1;
		SightSound = 'RavenantAttack';
		DeathSound = 'BarrelExplode';
		Effects = EF_DL_RBALL;
	}
};

//==========================================================================
//
//	RevenantTracerSmoke
//
//==========================================================================

class RevenantTracerSmoke:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_SMOKE1;
	}
};

//==========================================================================
//
//	Mancubus
//
//==========================================================================

class Mancubus:Actor
	__mobjinfo__(67)
{
	defaultproperties
	{
		Health = 600;
		Radius = 48.0;
		Height = 64.0;
		Mass = 1000.0;
		Speed = 280.0;
		ReactionCount = 8;
		PainChance = 80;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_FATT_STND;
		SeeState = S_FATT_RUN1;
		MissileState = S_FATT_ATK1;
		PainState = S_FATT_PAIN;
		DeathState = S_FATT_DIE1;
		RaiseState = S_FATT_RAISE1;
		SightSound = 'MancubusSight';
		ActiveSound = 'ZombieActive';
		PainSound = 'MancubusPain';
		DeathSound = 'MancubusDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MancubusMissile
//
//==========================================================================

class MancubusMissile:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 6.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 700.0;
		ReactionCount = 8;
		MissileDamage = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		SpawnState = S_FATSHOT1;
		DeathState = S_FATSHOTX1;
		SightSound = 'FireballShoot';
		DeathSound = 'FireballExplode';
		Effects = EF_DL_RBALL;
	}
};

//==========================================================================
//
//	ChaingunGuy
//
//==========================================================================

class ChaingunGuy:Actor
	__mobjinfo__(65)
{
	defaultproperties
	{
		Health = 70;
		GibsHealth = -70;
		Radius = 20.0;
		Height = 56.0;
		Mass = 100.0;
		Speed = 280.0;
		ReactionCount = 8;
		PainChance = 170;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_CPOS_STND;
		SeeState = S_CPOS_RUN1;
		MissileState = S_CPOS_ATK1;
		PainState = S_CPOS_PAIN;
		DeathState = S_CPOS_DIE1;
		GibsDeathState = S_CPOS_XDIE1;
		RaiseState = S_CPOS_RAISE1;
		SightSound = 'ZombieSight2';
		ActiveSound = 'ZombieActive';
		PainSound = 'ZombiePain';
		DeathSound = 'ZombieDeath2';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	Imp
//
//==========================================================================

class Imp:Actor
	__mobjinfo__(3001)
{
	defaultproperties
	{
		Health = 60;
		GibsHealth = -60;
		Radius = 20.0;
		Height = 56.0;
		Mass = 100.0;
		Speed = 280.0;
		ReactionCount = 8;
		PainChance = 200;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_TROO_STND;
		SeeState = S_TROO_RUN1;
		MeleeState = S_TROO_ATK1;
		MissileState = S_TROO_ATK1;
		PainState = S_TROO_PAIN;
		DeathState = S_TROO_DIE1;
		GibsDeathState = S_TROO_XDIE1;
		RaiseState = S_TROO_RAISE1;
		SightSound = 'ImpSight1';
		ActiveSound = 'ImpActive';
		PainSound = 'ZombiePain';
		DeathSound = 'ImpDeath1';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	Demon
//
//==========================================================================

class Demon:Actor
	__mobjinfo__(3002)
{
	defaultproperties
	{
		Health = 150;
		Radius = 30.0;
		Height = 56.0;
		Mass = 400.0;
		Speed = 350.0;
		ReactionCount = 8;
		PainChance = 180;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_SARG_STND;
		SeeState = S_SARG_RUN1;
		MeleeState = S_SARG_ATK1;
		PainState = S_SARG_PAIN;
		DeathState = S_SARG_DIE1;
		RaiseState = S_SARG_RAISE1;
		SightSound = 'DemonSight';
		ActiveSound = 'DemonActive';
		AttackSound = 'DemonAttack';
		PainSound = 'DemonPain';
		DeathSound = 'DemonDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	Shadows
//
//==========================================================================

class Shadows:Actor
	__mobjinfo__(58)
{
	defaultproperties
	{
		Health = 150;
		Radius = 30.0;
		Height = 56.0;
		Mass = 400.0;
		Speed = 350.0;
		ReactionCount = 8;
		PainChance = 180;
		Translucency = 90;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_SARG_STND;
		SeeState = S_SARG_RUN1;
		MeleeState = S_SARG_ATK1;
		PainState = S_SARG_PAIN;
		DeathState = S_SARG_DIE1;
		RaiseState = S_SARG_RAISE1;
		SightSound = 'DemonSight';
		ActiveSound = 'DemonActive';
		AttackSound = 'DemonAttack';
		PainSound = 'DemonPain';
		DeathSound = 'DemonDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	Cacodemon
//
//==========================================================================

class Cacodemon:Actor
	__mobjinfo__(3005)
{
	defaultproperties
	{
		Health = 400;
		Radius = 31.0;
		Height = 56.0;
		Mass = 400.0;
		Speed = 280.0;
		ReactionCount = 8;
		PainChance = 128;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_FLOAT|MF_COUNTKILL;
		SpawnState = S_HEAD_STND;
		SeeState = S_HEAD_RUN1;
		MissileState = S_HEAD_ATK1;
		PainState = S_HEAD_PAIN;
		DeathState = S_HEAD_DIE1;
		RaiseState = S_HEAD_RAISE1;
		SightSound = 'CacoSight';
		ActiveSound = 'DemonActive';
		PainSound = 'DemonPain';
		DeathSound = 'CacoDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	BaronOfHell
//
//==========================================================================

class BaronOfHell:Actor
	__mobjinfo__(3003)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 24.0;
		Height = 64.0;
		Mass = 1000.0;
		Speed = 280.0;
		ReactionCount = 8;
		PainChance = 50;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_BOSS_STND;
		SeeState = S_BOSS_RUN1;
		MeleeState = S_BOSS_ATK1;
		MissileState = S_BOSS_ATK1;
		PainState = S_BOSS_PAIN;
		DeathState = S_BOSS_DIE1;
		RaiseState = S_BOSS_RAISE1;
		SightSound = 'BaronSight';
		ActiveSound = 'DemonActive';
		PainSound = 'DemonPain';
		DeathSound = 'BaronDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	BruiserShot
//
//==========================================================================

class BruiserShot:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 6.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 525.0;
		ReactionCount = 8;
		MissileDamage = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		SpawnState = S_BRBALL1;
		DeathState = S_BRBALLX1;
		SightSound = 'FireballShoot';
		DeathSound = 'FireballExplode';
		Effects = EF_DL_GBALL;
	}
};

//==========================================================================
//
//	HellKnight
//
//==========================================================================

class HellKnight:Actor
	__mobjinfo__(69)
{
	defaultproperties
	{
		Health = 500;
		Radius = 24.0;
		Height = 64.0;
		Mass = 1000.0;
		Speed = 280.0;
		ReactionCount = 8;
		PainChance = 50;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_BOS2_STND;
		SeeState = S_BOS2_RUN1;
		MeleeState = S_BOS2_ATK1;
		MissileState = S_BOS2_ATK1;
		PainState = S_BOS2_PAIN;
		DeathState = S_BOS2_DIE1;
		RaiseState = S_BOS2_RAISE1;
		SightSound = 'KnightSight';
		ActiveSound = 'DemonActive';
		PainSound = 'DemonPain';
		DeathSound = 'KnightDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	LostSoul
//
//==========================================================================

class LostSoul:Actor
	__mobjinfo__(3006)
{
	defaultproperties
	{
		Health = 100;
		Radius = 16.0;
		Height = 56.0;
		Mass = 50.0;
		Speed = 280.0;
		ReactionCount = 8;
		PainChance = 256;
		MissileDamage = 3;
		Translucency = 33;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_FLOAT;
		SpawnState = S_SKULL_STND;
		SeeState = S_SKULL_RUN1;
		MissileState = S_SKULL_ATK1;
		PainState = S_SKULL_PAIN;
		DeathState = S_SKULL_DIE1;
		ActiveSound = 'DemonActive';
		AttackSound = 'LostSoulAttack';
		PainSound = 'DemonPain';
		DeathSound = 'FireballExplode';
		Effects = EF_DL_MISSILE;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	SpiderMastermind
//
//==========================================================================

class SpiderMastermind:Actor
	__mobjinfo__(7)
{
	defaultproperties
	{
		Health = 3000;
		Radius = 128.0;
		Height = 100.0;
		Mass = 1000.0;
		Speed = 420.0;
		ReactionCount = 8;
		PainChance = 40;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_SPID_STND;
		SeeState = S_SPID_RUN1;
		MissileState = S_SPID_ATK1;
		PainState = S_SPID_PAIN;
		DeathState = S_SPID_DIE1;
		SightSound = 'SpiderSight';
		ActiveSound = 'DemonActive';
		AttackSound = 'ShotgunFire';
		PainSound = 'DemonPain';
		DeathSound = 'SpiderDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	Arachnotron
//
//==========================================================================

class Arachnotron:Actor
	__mobjinfo__(68)
{
	defaultproperties
	{
		Health = 500;
		Radius = 64.0;
		Height = 64.0;
		Mass = 600.0;
		Speed = 420.0;
		ReactionCount = 8;
		PainChance = 128;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_BSPI_STND;
		SeeState = S_BSPI_SIGHT;
		MissileState = S_BSPI_ATK1;
		PainState = S_BSPI_PAIN;
		DeathState = S_BSPI_DIE1;
		RaiseState = S_BSPI_RAISE1;
		SightSound = 'BabySight';
		ActiveSound = 'BabyActive';
		PainSound = 'DemonPain';
		DeathSound = 'BabyDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	Cyberdemon
//
//==========================================================================

class Cyberdemon:Actor
	__mobjinfo__(16)
{
	defaultproperties
	{
		Health = 4000;
		Radius = 40.0;
		Height = 110.0;
		Mass = 1000.0;
		Speed = 560.0;
		ReactionCount = 8;
		PainChance = 20;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_CYBER_STND;
		SeeState = S_CYBER_RUN1;
		MissileState = S_CYBER_ATK1;
		PainState = S_CYBER_PAIN;
		DeathState = S_CYBER_DIE1;
		SightSound = 'CyberSight';
		ActiveSound = 'DemonActive';
		PainSound = 'DemonPain';
		DeathSound = 'CyberDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	PainElemental
//
//==========================================================================

class PainElemental:Actor
	__mobjinfo__(71)
{
	defaultproperties
	{
		Health = 400;
		Radius = 31.0;
		Height = 56.0;
		Mass = 400.0;
		Speed = 280.0;
		ReactionCount = 8;
		PainChance = 128;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_FLOAT|MF_COUNTKILL;
		SpawnState = S_PAIN_STND;
		SeeState = S_PAIN_RUN1;
		MissileState = S_PAIN_ATK1;
		PainState = S_PAIN_PAIN;
		DeathState = S_PAIN_DIE1;
		RaiseState = S_PAIN_RAISE1;
		SightSound = 'PainElementalSight';
		ActiveSound = 'DemonActive';
		PainSound = 'PainElementalPain';
		DeathSound = 'PainElementalDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	WolfSS
//
//==========================================================================

class WolfSS:Actor
	__mobjinfo__(84)
{
	defaultproperties
	{
		Health = 50;
		GibsHealth = -50;
		Radius = 20.0;
		Height = 56.0;
		Mass = 100.0;
		Speed = 280.0;
		ReactionCount = 8;
		PainChance = 170;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		SpawnState = S_SSWV_STND;
		SeeState = S_SSWV_RUN1;
		MissileState = S_SSWV_ATK1;
		PainState = S_SSWV_PAIN;
		DeathState = S_SSWV_DIE1;
		GibsDeathState = S_SSWV_XDIE1;
		RaiseState = S_SSWV_RAISE1;
		SightSound = 'SSNaziSight';
		ActiveSound = 'ZombieActive';
		PainSound = 'ZombiePain';
		DeathSound = 'SSNaziDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	CommanderKeen
//
//==========================================================================

class CommanderKeen:Actor
	__mobjinfo__(72)
{
	defaultproperties
	{
		Health = 100;
		Radius = 16.0;
		Height = 72.0;
		Mass = 10000000.0;
		ReactionCount = 8;
		PainChance = 256;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_SPAWNCEILING|MF_NOGRAVITY|MF_COUNTKILL;
		SpawnState = S_KEENSTND;
		PainState = S_KEENPAIN;
		DeathState = S_COMMKEEN;
		PainSound = 'KeenPain';
		DeathSound = 'KeenDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(self);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	BossBrain
//
//==========================================================================

class BossBrain:Actor
	__mobjinfo__(88)
{
	defaultproperties
	{
		Health = 250;
		Radius = 16.0;
		Height = 16.0;
		Mass = 10000000.0;
		ReactionCount = 8;
		PainChance = 255;
		Flags = MF_SOLID|MF_SHOOTABLE;
		SpawnState = S_BRAIN;
		PainState = S_BRAIN_PAIN;
		DeathState = S_BRAIN_DIE1;
		PainSound = 'BossPain';
		DeathSound = 'BossDeath';
	}
};

//==========================================================================
//
//	BossEye
//
//==========================================================================

class BossEye:Actor
	__mobjinfo__(89)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 32.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOSECTOR|MF_NOBLOCKMAP;
		SpawnState = S_BRAINEYE;
		SeeState = S_BRAINEYESEE;
	}
};

//==========================================================================
//
//	BossTarget
//
//==========================================================================

class BossTarget:Actor
	__mobjinfo__(87)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 32.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOSECTOR|MF_NOBLOCKMAP;
	}
};

//==========================================================================
//
//	SpawnShot
//
//==========================================================================

class SpawnShot:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 6.0;
		Height = 32.0;
		Mass = 100.0;
		Speed = 350.0;
		ReactionCount = 8;
		MissileDamage = 3;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_NOCLIP|MF_MISSILE;
		SpawnState = S_SPAWN1;
		SightSound = 'BossFire';
		DeathSound = 'FireballExplode';
	}
};

//==========================================================================
//
//	SpawnFire
//
//==========================================================================

class SpawnFire:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_SPAWNFIRE1;
		Effects = EF_DL_MISSILE;
	}
};

//==========================================================================
//
//	Barrel
//
//==========================================================================

class Barrel:Actor
	__mobjinfo__(2035)
{
	defaultproperties
	{
		Health = 20;
		Radius = 10.0;
		Height = 42.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_NOBLOOD;
		SpawnState = S_BAR1;
		DeathState = S_BEXP;
		DeathSound = 'BarrelExplode';
	}
};

//==========================================================================
//
//	ImpMissile
//
//==========================================================================

class ImpMissile:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 6.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 350.0;
		ReactionCount = 8;
		MissileDamage = 3;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		SpawnState = S_TBALL1;
		DeathState = S_TBALLX1;
		SightSound = 'FireballShoot';
		DeathSound = 'FireballExplode';
		Effects = EF_DL_RBALL;
	}
};

//==========================================================================
//
//	CacodemonMissile
//
//==========================================================================

class CacodemonMissile:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 6.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 350.0;
		ReactionCount = 8;
		MissileDamage = 5;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		SpawnState = S_RBALL1;
		DeathState = S_RBALLX1;
		SightSound = 'FireballShoot';
		DeathSound = 'FireballExplode';
		Effects = EF_DL_RBALL;
	}
};

//==========================================================================
//
//	Rocket
//
//==========================================================================

class Rocket:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 11.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 700.0;
		ReactionCount = 8;
		MissileDamage = 20;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		SpawnState = S_ROCKET;
		DeathState = S_EXPLODE1;
		SightSound = 'LauncherFire';
		DeathSound = 'BarrelExplode';
		Effects = EF_DL_MISSILE | EF_ROCKET;
	}
};

//==========================================================================
//
//	PlasmaShot
//
//==========================================================================

class PlasmaShot:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 13.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 875.0;
		ReactionCount = 8;
		MissileDamage = 5;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		SpawnState = S_PLASBALL;
		DeathState = S_PLASEXP;
		SightSound = 'PlasmaFire';
		DeathSound = 'FireballExplode';
		Effects = EF_DL_PLASMA;
	}
};

//==========================================================================
//
//	BFGShot
//
//==========================================================================

class BFGShot:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 13.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 875.0;
		ReactionCount = 8;
		MissileDamage = 100;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		SpawnState = S_BFGSHOT;
		DeathState = S_BFGLAND;
		DeathSound = 'RocketExplode';
		Effects = EF_DL_GBALL;
	}
};

//==========================================================================
//
//	ArachnotronPlasma
//
//==========================================================================

class ArachnotronPlasma:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 13.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 875.0;
		ReactionCount = 8;
		MissileDamage = 5;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		SpawnState = S_ARACH_PLAZ;
		DeathState = S_ARACH_PLEX;
		SightSound = 'PlasmaFire';
		DeathSound = 'FireballExplode';
		Effects = EF_DL_MISSILE;
	}
};

//==========================================================================
//
//	Puff
//
//==========================================================================

class Puff:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_PUFF1;
	}
};

//==========================================================================
//
//	Blood
//
//==========================================================================

class Blood:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP;
		SpawnState = S_BLOOD1;
	}
};

//==========================================================================
//
//	TeleportFog
//
//==========================================================================

class TeleportFog:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_TFOG;
	}
};

//==========================================================================
//
//	ItemRespawnFog
//
//==========================================================================

class ItemRespawnFog:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_IFOG;
	}
};

//==========================================================================
//
//	TeleportSpot
//
//==========================================================================

class TeleportSpot:Actor
	__mobjinfo__(14)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOSECTOR|MF_NOBLOCKMAP;
	}
};

//==========================================================================
//
//	ExtraBFG
//
//==========================================================================

class ExtraBFG:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_BFGEXP;
	}
};

//==========================================================================
//
//	ItemArmor1
//
//==========================================================================

class ItemArmor1:Actor
	__mobjinfo__(2018)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_ARM1;
	}
};

//==========================================================================
//
//	ItemArmor2
//
//==========================================================================

class ItemArmor2:Actor
	__mobjinfo__(2019)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_ARM2;
	}
};

//==========================================================================
//
//	ItemHealthBonus
//
//==========================================================================

class ItemHealthBonus:Actor
	__mobjinfo__(2014)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		SpawnState = S_BON1;
	}
};

//==========================================================================
//
//	ItemArmorBonus
//
//==========================================================================

class ItemArmorBonus:Actor
	__mobjinfo__(2015)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		SpawnState = S_BON2;
	}
};

//==========================================================================
//
//	ItemKeyBlueCard
//
//==========================================================================

class ItemKeyBlueCard:Actor
	__mobjinfo__(5)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_BKEY;
	}
};

//==========================================================================
//
//	ItemKeyRedCard
//
//==========================================================================

class ItemKeyRedCard:Actor
	__mobjinfo__(13)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_RKEY;
	}
};

//==========================================================================
//
//	ItemKeyYellowCard
//
//==========================================================================

class ItemKeyYellowCard:Actor
	__mobjinfo__(6)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_YKEY;
	}
};

//==========================================================================
//
//	ItemKeyYellowSkull
//
//==========================================================================

class ItemKeyYellowSkull:Actor
	__mobjinfo__(39)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_YSKULL;
	}
};

//==========================================================================
//
//	ItemKeyRedSkull
//
//==========================================================================

class ItemKeyRedSkull:Actor
	__mobjinfo__(38)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_RSKULL;
	}
};

//==========================================================================
//
//	ItemKeyBlueSkull
//
//==========================================================================

class ItemKeyBlueSkull:Actor
	__mobjinfo__(40)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_BSKULL;
	}
};

//==========================================================================
//
//	ItemStimPack
//
//==========================================================================

class ItemStimPack:Actor
	__mobjinfo__(2011)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_STIM;
	}
};

//==========================================================================
//
//	ItemMedikit
//
//==========================================================================

class ItemMedikit:Actor
	__mobjinfo__(2012)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_MEDI;
	}
};

//==========================================================================
//
//	ItemSoulSphere
//
//==========================================================================

class ItemSoulSphere:Actor
	__mobjinfo__(2013)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		SpawnState = S_SOUL;
	}
};

//==========================================================================
//
//	ItemInvulnerability
//
//==========================================================================

class ItemInvulnerability:Actor
	__mobjinfo__(2022)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		SpawnState = S_PINV;
	}
};

//==========================================================================
//
//	ItemBerserk
//
//==========================================================================

class ItemBerserk:Actor
	__mobjinfo__(2023)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		SpawnState = S_PSTR;
	}
};

//==========================================================================
//
//	ItemInvisibility
//
//==========================================================================

class ItemInvisibility:Actor
	__mobjinfo__(2024)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		SpawnState = S_PINS;
	}
};

//==========================================================================
//
//	ItemRadiationSuit
//
//==========================================================================

class ItemRadiationSuit:Actor
	__mobjinfo__(2025)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_SUIT;
	}
};

//==========================================================================
//
//	ItemComputerMap
//
//==========================================================================

class ItemComputerMap:Actor
	__mobjinfo__(2026)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		SpawnState = S_PMAP;
	}
};

//==========================================================================
//
//	ItemInfrared
//
//==========================================================================

class ItemInfrared:Actor
	__mobjinfo__(2045)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		SpawnState = S_PVIS;
	}
};

//==========================================================================
//
//	ItemMegaSphere
//
//==========================================================================

class ItemMegaSphere:Actor
	__mobjinfo__(83)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		SpawnState = S_MEGA;
	}
};

//==========================================================================
//
//	ItemAmmoBulletClip
//
//==========================================================================

class ItemAmmoBulletClip:Actor
	__mobjinfo__(2007)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_CLIP;
	}
};

//==========================================================================
//
//	ItemAmmoBulletBox
//
//==========================================================================

class ItemAmmoBulletBox:Actor
	__mobjinfo__(2048)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AMMO;
	}
};

//==========================================================================
//
//	ItemAmmoRocket
//
//==========================================================================

class ItemAmmoRocket:Actor
	__mobjinfo__(2010)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_ROCK;
	}
};

//==========================================================================
//
//	ItemAmmoRocketBox
//
//==========================================================================

class ItemAmmoRocketBox:Actor
	__mobjinfo__(2046)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_BROK;
	}
};

//==========================================================================
//
//	ItemAmmoCells
//
//==========================================================================

class ItemAmmoCells:Actor
	__mobjinfo__(2047)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_CELL;
	}
};

//==========================================================================
//
//	ItemAmmoCellsPack
//
//==========================================================================

class ItemAmmoCellsPack:Actor
	__mobjinfo__(17)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_CELP;
	}
};

//==========================================================================
//
//	ItemAmmoShells
//
//==========================================================================

class ItemAmmoShells:Actor
	__mobjinfo__(2008)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_SHEL;
	}
};

//==========================================================================
//
//	ItemAmmoShellsBox
//
//==========================================================================

class ItemAmmoShellsBox:Actor
	__mobjinfo__(2049)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_SBOX;
	}
};

//==========================================================================
//
//	ItemBackpack
//
//==========================================================================

class ItemBackpack:Actor
	__mobjinfo__(8)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_BPAK;
	}
};

//==========================================================================
//
//	ItemWeaponBFG
//
//==========================================================================

class ItemWeaponBFG:Actor
	__mobjinfo__(2006)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_BFUG;
	}
};

//==========================================================================
//
//	ItemWeaponChaingun
//
//==========================================================================

class ItemWeaponChaingun:Actor
	__mobjinfo__(2002)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_MGUN;
	}
};

//==========================================================================
//
//	ItemWeaponChainsaw
//
//==========================================================================

class ItemWeaponChainsaw:Actor
	__mobjinfo__(2005)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_CSAW;
	}
};

//==========================================================================
//
//	ItemWeaponRocketLauncher
//
//==========================================================================

class ItemWeaponRocketLauncher:Actor
	__mobjinfo__(2003)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_LAUN;
	}
};

//==========================================================================
//
//	ItemWeaponPlasmaGun
//
//==========================================================================

class ItemWeaponPlasmaGun:Actor
	__mobjinfo__(2004)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_PLAS;
	}
};

//==========================================================================
//
//	ItemWeaponShotgun
//
//==========================================================================

class ItemWeaponShotgun:Actor
	__mobjinfo__(2001)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_SHOT;
	}
};

//==========================================================================
//
//	ItemWeaponSuperShotgun
//
//==========================================================================

class ItemWeaponSuperShotgun:Actor
	__mobjinfo__(82)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 8.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_SHOT2;
	}
};

//==========================================================================
//
//	TechLamp
//
//==========================================================================

class TechLamp:Actor
	__mobjinfo__(85)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 72.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_TECHLAMP;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 64.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
	}
};

//==========================================================================
//
//	TechLamp2
//
//==========================================================================

class TechLamp2:Actor
	__mobjinfo__(86)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 56.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_TECH2LAMP;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 48.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
	}
};

//==========================================================================
//
//	ColumnLamp
//
//==========================================================================

class ColumnLamp:Actor
	__mobjinfo__(2028)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 48.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_COLU;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
	}
};

//==========================================================================
//
//	ColumnGreenTall
//
//==========================================================================

class ColumnGreenTall:Actor
	__mobjinfo__(30)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 52.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_TALLGRNCOL;
	}
};

//==========================================================================
//
//	ColumnGreenShort
//
//==========================================================================

class ColumnGreenShort:Actor
	__mobjinfo__(31)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 40.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_SHRTGRNCOL;
	}
};

//==========================================================================
//
//	ColumnRedTall
//
//==========================================================================

class ColumnRedTall:Actor
	__mobjinfo__(32)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 52.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_TALLREDCOL;
	}
};

//==========================================================================
//
//	ColumnRedShort
//
//==========================================================================

class ColumnRedShort:Actor
	__mobjinfo__(33)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 40.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_SHRTREDCOL;
	}
};

//==========================================================================
//
//	ColumnWithSkull
//
//==========================================================================

class ColumnWithSkull:Actor
	__mobjinfo__(37)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 40.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_SKULLCOL;
	}
};

//==========================================================================
//
//	ColumnWithHearth
//
//==========================================================================

class ColumnWithHearth:Actor
	__mobjinfo__(36)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 40.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_HEARTCOL;
	}
};

//==========================================================================
//
//	EvilEye
//
//==========================================================================

class EvilEye:Actor
	__mobjinfo__(41)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_EVILEYE;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 128.0);
	}
};

//==========================================================================
//
//	FloatingSkull
//
//==========================================================================

class FloatingSkull:Actor
	__mobjinfo__(42)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 48.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_FLOATSKULL;
	}
};

//==========================================================================
//
//	TorchTree
//
//==========================================================================

class TorchTree:Actor
	__mobjinfo__(43)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 64.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_TORCHTREE;
	}
};

//==========================================================================
//
//	TorchBlue
//
//==========================================================================

class TorchBlue:Actor
	__mobjinfo__(44)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 64.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_BLUETORCH;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLightRGB(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0, RGB(0, 0, 255));
	}
};

//==========================================================================
//
//	TorchGreen
//
//==========================================================================

class TorchGreen:Actor
	__mobjinfo__(45)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 64.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_GREENTORCH;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLightRGB(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0, RGB(0, 255, 0));
	}
};

//==========================================================================
//
//	TorchRed
//
//==========================================================================

class TorchRed:Actor
	__mobjinfo__(46)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 64.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_REDTORCH;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLightRGB(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0, RGB(255, 0, 0));
	}
};

//==========================================================================
//
//	TorchBlueShort
//
//==========================================================================

class TorchBlueShort:Actor
	__mobjinfo__(55)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 40.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_BTORCHSHRT;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLightRGB(origin + vector(0.0, 0.0, 16.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0, RGB(0, 0, 255));
	}
};

//==========================================================================
//
//	TorchGreenShort
//
//==========================================================================

class TorchGreenShort:Actor
	__mobjinfo__(56)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 40.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_GTORCHSHRT;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLightRGB(origin + vector(0.0, 0.0, 16.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0, RGB(0, 255, 0));
	}
};

//==========================================================================
//
//	TorchRedShort
//
//==========================================================================

class TorchRedShort:Actor
	__mobjinfo__(57)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 40.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_RTORCHSHRT;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLightRGB(origin + vector(0.0, 0.0, 16.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0, RGB(255, 0, 0));
	}
};

//==========================================================================
//
//	Stalagtite
//
//==========================================================================

class Stalagtite:Actor
	__mobjinfo__(47)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 40.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_STALAGTITE;
	}
};

//==========================================================================
//
//	TechPillar
//
//==========================================================================

class TechPillar:Actor
	__mobjinfo__(48)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 120.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_TECHPILLAR;
	}
};

//==========================================================================
//
//	CandleStick
//
//==========================================================================

class CandleStick:Actor
	__mobjinfo__(34)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		SpawnState = S_CANDLESTIK;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLight(origin, mthing->arg1 ? itof(mthing->arg1) * 8.0 : 64.0);
	}
};

//==========================================================================
//
//	Candelabra
//
//==========================================================================

class Candelabra:Actor
	__mobjinfo__(35)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 56.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_CANDELABRA;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 128.0);
	}
};

//==========================================================================
//
//	BloodyTwitch
//
//==========================================================================

class BloodyTwitch:Actor
	__mobjinfo__(49)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 68.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_BLOODYTWITCH;
	}
};

//==========================================================================
//
//	Meat2
//
//==========================================================================

class Meat2:Actor
	__mobjinfo__(50)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 84.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_MEAT2;
	}
};

//==========================================================================
//
//	Meat3
//
//==========================================================================

class Meat3:Actor
	__mobjinfo__(51)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 84.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_MEAT3;
	}
};

//==========================================================================
//
//	Meat4
//
//==========================================================================

class Meat4:Actor
	__mobjinfo__(52)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 68.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_MEAT4;
	}
};

//==========================================================================
//
//	Meat5
//
//==========================================================================

class Meat5:Actor
	__mobjinfo__(53)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 52.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_MEAT5;
	}
};

//==========================================================================
//
//	Meat2NoBlock
//
//==========================================================================

class Meat2NoBlock:Actor
	__mobjinfo__(59)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 84.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_MEAT2;
	}
};

//==========================================================================
//
//	Meat4NoBlock
//
//==========================================================================

class Meat4NoBlock:Actor
	__mobjinfo__(60)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 68.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_MEAT4;
	}
};

//==========================================================================
//
//	Meat3NoBlock
//
//==========================================================================

class Meat3NoBlock:Actor
	__mobjinfo__(61)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 52.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_MEAT3;
	}
};

//==========================================================================
//
//	Meat5NoBlock
//
//==========================================================================

class Meat5NoBlock:Actor
	__mobjinfo__(62)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 52.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_MEAT5;
	}
};

//==========================================================================
//
//	BloodyTwitchNoBlock
//
//==========================================================================

class BloodyTwitchNoBlock:Actor
	__mobjinfo__(63)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 68.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_BLOODYTWITCH;
	}
};

//==========================================================================
//
//	DeadCacodemon
//
//==========================================================================

class DeadCacodemon:Actor
	__mobjinfo__(22)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		SpawnState = S_HEAD_DIE6;
	}
};

//==========================================================================
//
//	DeadPlayer
//
//==========================================================================

class DeadPlayer:Actor
	__mobjinfo__(15)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		SpawnState = S_PLAY_DIE7;
	}
};

//==========================================================================
//
//	DeadZombieman
//
//==========================================================================

class DeadZombieman:Actor
	__mobjinfo__(18)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		SpawnState = S_POSS_DIE5;
	}
};

//==========================================================================
//
//	DeadDemon
//
//==========================================================================

class DeadDemon:Actor
	__mobjinfo__(21)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		SpawnState = S_SARG_DIE6;
	}
};

//==========================================================================
//
//	DeadLostSoul
//
//==========================================================================

class DeadLostSoul:Actor
	__mobjinfo__(23)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		SpawnState = S_SKULL_DIE6;
	}
};

//==========================================================================
//
//	DeadImp
//
//==========================================================================

class DeadImp:Actor
	__mobjinfo__(20)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		SpawnState = S_TROO_DIE5;
	}
};

//==========================================================================
//
//	DeadShotgunGuy
//
//==========================================================================

class DeadShotgunGuy:Actor
	__mobjinfo__(19)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		SpawnState = S_SPOS_DIE5;
	}
};

//==========================================================================
//
//	DeadPlayerGibs
//
//==========================================================================

class DeadPlayerGibs:Actor
	__mobjinfo__(10)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		SpawnState = S_PLAY_XDIE9;
	}
};

//==========================================================================
//
//	DeadPlayerGibs2
//
//==========================================================================

class DeadPlayerGibs2:Actor
	__mobjinfo__(12)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		SpawnState = S_PLAY_XDIE9;
	}
};

//==========================================================================
//
//	HeadsOnStick
//
//==========================================================================

class HeadsOnStick:Actor
	__mobjinfo__(28)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 64.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_HEADSONSTICK;
	}
};

//==========================================================================
//
//	Gibs
//
//==========================================================================

class Gibs:Actor
	__mobjinfo__(24)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		SpawnState = S_GIBS;
	}
};

//==========================================================================
//
//	HeadOnAStick
//
//==========================================================================

class HeadOnAStick:Actor
	__mobjinfo__(27)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 56.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_HEADONASTICK;
	}
};

//==========================================================================
//
//	HeadCandles
//
//==========================================================================

class HeadCandles:Actor
	__mobjinfo__(29)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 48.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_HEADCANDLES;
	}
};

//==========================================================================
//
//	DeadStick
//
//==========================================================================

class DeadStick:Actor
	__mobjinfo__(25)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 64.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_DEADSTICK;
	}
};

//==========================================================================
//
//	LiveStick
//
//==========================================================================

class LiveStick:Actor
	__mobjinfo__(26)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 64.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_LIVESTICK;
	}
};

//==========================================================================
//
//	BigTree
//
//==========================================================================

class BigTree:Actor
	__mobjinfo__(54)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 32.0;
		Height = 96.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_BIGTREE;
	}
};

//==========================================================================
//
//	BurningBarrel
//
//==========================================================================

class BurningBarrel:Actor
	__mobjinfo__(70)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 32.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_BBAR1;
	}
};

//==========================================================================
//
//	HangingNoGuts
//
//==========================================================================

class HangingNoGuts:Actor
	__mobjinfo__(73)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 88.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_HANGNOGUTS;
	}
};

//==========================================================================
//
//	HangingNoBrain
//
//==========================================================================

class HangingNoBrain:Actor
	__mobjinfo__(74)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 88.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_HANGBNOBRAIN;
	}
};

//==========================================================================
//
//	HangingTorsoLookDown
//
//==========================================================================

class HangingTorsoLookDown:Actor
	__mobjinfo__(75)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 64.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_HANGTLOOKDN;
	}
};

//==========================================================================
//
//	HangingTorsoSkull
//
//==========================================================================

class HangingTorsoSkull:Actor
	__mobjinfo__(76)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 64.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_HANGTSKULL;
	}
};

//==========================================================================
//
//	HangingTorsoLookUp
//
//==========================================================================

class HangingTorsoLookUp:Actor
	__mobjinfo__(77)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 64.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_HANGTLOOKUP;
	}
};

//==========================================================================
//
//	HangingTorsoNoBrain
//
//==========================================================================

class HangingTorsoNoBrain:Actor
	__mobjinfo__(78)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 64.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_HANGTNOBRAIN;
	}
};

//==========================================================================
//
//	ColonGibs
//
//==========================================================================

class ColonGibs:Actor
	__mobjinfo__(79)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP;
		SpawnState = S_COLONGIBS;
	}
};

//==========================================================================
//
//	SmallPool
//
//==========================================================================

class SmallPool:Actor
	__mobjinfo__(80)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP;
		SpawnState = S_SMALLPOOL;
	}
};

//==========================================================================
//
//	BrainStem
//
//==========================================================================

class BrainStem:Actor
	__mobjinfo__(81)
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP;
		SpawnState = S_BRAINSTEM;
	}
};

//**************************************************************************
//
//	$Log$
//	Revision 1.18  2002/01/28 18:50:18  dj_jl
//	Made some functions Actor members.
//	Replaced some pointers with references.
//
//	Revision 1.17  2002/01/17 18:15:53  dj_jl
//	Renamed all map object classes
//	
//	Revision 1.16  2002/01/15 18:26:59  dj_jl
//	Some property names with logical words starting with capital letter.
//	Moved everything from Entity class into Actor class.
//	
//	Revision 1.15  2002/01/12 18:00:47  dj_jl
//	Sound names initialized as names
//	
//	Revision 1.14  2002/01/11 18:19:40  dj_jl
//	Started to use names in progs
//	
//	Revision 1.13  2002/01/07 12:21:10  dj_jl
//	Changed copyright year
//	
//	Revision 1.12  2001/12/27 17:48:11  dj_jl
//	Removed spawnhealth
//	
//	Revision 1.11  2001/12/12 18:57:40  dj_jl
//	State functions now are methods of Actor and Weapon classes
//	
//	Revision 1.10  2001/12/04 18:25:36  dj_jl
//	Replaced constructors with defaultproperties
//	
//	Revision 1.9  2001/11/09 14:37:52  dj_jl
//	Using constructors
//	
//	Revision 1.8  2001/10/22 17:23:11  dj_jl
//	Floatification of angles
//	
//	Revision 1.7  2001/10/18 17:39:33  dj_jl
//	A lots of changes for Alpha 2
//	
//	Revision 1.6  2001/10/02 17:42:37  dj_jl
//	Possibility to declare function's code inside class declaration
//	
//	Revision 1.5  2001/09/27 17:08:19  dj_jl
//	Removed spawn functions, added mobj classes
//	
//	Revision 1.4  2001/09/20 16:19:59  dj_jl
//	Start using object-oriented stuff, beautification
//	
//	Revision 1.3  2001/08/04 17:21:04  dj_jl
//	Removed translucency from torches
//
//	Revision 1.2  2001/07/27 14:27:51  dj_jl
//	Update with Id-s and Log-s, some fixes
//
//**************************************************************************
