//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//**************************************************************************
//
//	Demon
//
//**************************************************************************

class Demon:Pawn
	__mobjinfo__(3002)
{

//==========================================================================
//
//  A_SargAttack
//
//  Demon, Spectre attack.
//
//==========================================================================

void A_SargAttack(void)
{
	int damage;

	if (!Enemy)
		return;

	A_FaceTarget();
	if (CheckMeleeRange())
	{
		damage = ((P_Random() % 10) + 1) * 4;
		Enemy.Damage(self, self, damage);
	}
}

__states__
{
	S_SARG_STND('SARG', 0, 'monsters/demon.md2', 0, 10.0 / 35.0, S_SARG_STND2) { A_Look(); }
	S_SARG_STND2('SARG', 1, 'monsters/demon.md2', 1, 10.0 / 35.0, S_SARG_STND) { A_Look(); }
	S_SARG_RUN1('SARG', 0, 'monsters/demon.md2', 2, 2.0 / 35.0, S_SARG_RUN2) { A_Chase(); }
	S_SARG_RUN2('SARG', 0, 'monsters/demon.md2', 3, 2.0 / 35.0, S_SARG_RUN3) { A_Chase(); }
	S_SARG_RUN3('SARG', 1, 'monsters/demon.md2', 4, 2.0 / 35.0, S_SARG_RUN4) { A_Chase(); }
	S_SARG_RUN4('SARG', 1, 'monsters/demon.md2', 5, 2.0 / 35.0, S_SARG_RUN5) { A_Chase(); }
	S_SARG_RUN5('SARG', 2, 'monsters/demon.md2', 6, 2.0 / 35.0, S_SARG_RUN6) { A_Chase(); }
	S_SARG_RUN6('SARG', 2, 'monsters/demon.md2', 7, 2.0 / 35.0, S_SARG_RUN7) { A_Chase(); }
	S_SARG_RUN7('SARG', 3, 'monsters/demon.md2', 8, 2.0 / 35.0, S_SARG_RUN8) { A_Chase(); }
	S_SARG_RUN8('SARG', 3, 'monsters/demon.md2', 9, 2.0 / 35.0, S_SARG_RUN1) { A_Chase(); }
	S_SARG_ATK1('SARG', 4, 'monsters/demon.md2', 10, 8.0 / 35.0, S_SARG_ATK2) { A_FaceTarget(); }
	S_SARG_ATK2('SARG', 5, 'monsters/demon.md2', 11, 8.0 / 35.0, S_SARG_ATK3) { A_FaceTarget(); }
	S_SARG_ATK3('SARG', 6, 'monsters/demon.md2', 12, 8.0 / 35.0, S_SARG_RUN1) { A_SargAttack(); }
	S_SARG_PAIN('SARG', 7, 'monsters/demon.md2', 13, 2.0 / 35.0, S_SARG_PAIN2) { }
	S_SARG_PAIN2('SARG', 7, 'monsters/demon.md2', 14, 2.0 / 35.0, S_SARG_RUN1) { A_Pain(); }
	S_SARG_DIE1('SARG', 8, 'monsters/demondie.md2', 0, 8.0 / 35.0, S_SARG_DIE2) { }
	S_SARG_DIE2('SARG', 9, 'monsters/demondie.md2', 1, 8.0 / 35.0, S_SARG_DIE3) { A_Scream(); }
	S_SARG_DIE3('SARG', 10, 'monsters/demondie.md2', 2, 4.0 / 35.0, S_SARG_DIE4) { }
	S_SARG_DIE4('SARG', 11, 'monsters/demondie.md2', 3, 4.0 / 35.0, S_SARG_DIE5) { A_Fall(); }
	S_SARG_DIE5('SARG', 12, 'monsters/demondie.md2', 4, 4.0 / 35.0, S_SARG_DIE6) { }
	S_SARG_DIE6('SARG', 13, 'monsters/demondie.md2', 5, -1.0, S_NULL) { }
	S_SARG_RAISE1('SARG', 13, 'monsters/demondie.md2', 6, 5.0 / 35.0, S_SARG_RAISE2) { }
	S_SARG_RAISE2('SARG', 12, 'monsters/demondie.md2', 7, 5.0 / 35.0, S_SARG_RAISE3) { }
	S_SARG_RAISE3('SARG', 11, 'monsters/demondie.md2', 8, 5.0 / 35.0, S_SARG_RAISE4) { }
	S_SARG_RAISE4('SARG', 10, 'monsters/demondie.md2', 9, 5.0 / 35.0, S_SARG_RAISE5) { }
	S_SARG_RAISE5('SARG', 9, 'monsters/demondie.md2', 10, 5.0 / 35.0, S_SARG_RAISE6) { }
	S_SARG_RAISE6('SARG', 8, 'monsters/demondie.md2', 11, 5.0 / 35.0, S_SARG_RUN1) { }
}

defaultproperties
{
	Health = 150;
	Radius = 30.0;
	Height = 56.0;
	Mass = 400.0;
	StepSpeed = 10.0;
	PainChance = 0.703125;
	IdleState = S_SARG_STND;
	SeeState = S_SARG_RUN1;
	MeleeState = S_SARG_ATK1;
	PainState = S_SARG_PAIN;
	DeathState = S_SARG_DIE1;
	RaiseState = S_SARG_RAISE1;
	SightSound = 'DemonSight';
	ActiveSound = 'DemonActive';
	AttackSound = 'DemonAttack';
	PainSound = 'DemonPain';
	DeathSound = 'DemonDeath';
}

}

//**************************************************************************
//
//	Shadows
//
//**************************************************************************

class Shadows:Demon
	__mobjinfo__(58)
{

defaultproperties
{
	Translucency = 90;
}

}

//**************************************************************************
//
//  $Log$
//  Revision 1.14  2002/06/29 15:54:34  dj_jl
//  Floatized PainChance.
//
//  Revision 1.13  2002/05/18 16:59:58  dj_jl
//  Renamed SpawnState to IdleState, other changes.
//
//  Revision 1.12  2002/05/03 17:11:53  dj_jl
//  Object classes split up into their files.
//
//  Revision 1.11  2002/03/20 19:07:43  dj_jl
//  Got rid of a lots of legacy, beautification.
//
//  Revision 1.10  2002/03/02 17:41:12  dj_jl
//  Renamed Enemy to Target. Beautification.
//
//  Revision 1.9  2002/02/26 17:49:47  dj_jl
//  no message
//
//  Revision 1.8  2002/01/25 18:04:33  dj_jl
//  Many global functions made Actor functions
//
//  Revision 1.7  2002/01/24 18:19:25  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//  Revision 1.6  2002/01/07 12:21:10  dj_jl
//  Changed copyright year
//
//  Revision 1.5  2001/12/12 18:57:40  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.4  2001/11/02 18:42:08  dj_jl
//  Damage method
//
//  Revision 1.3  2001/09/24 17:24:09  dj_jl
//  Beautification
//
//  Revision 1.2  2001/07/27 14:27:51  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
