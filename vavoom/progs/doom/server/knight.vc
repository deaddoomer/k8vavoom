//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//**************************************************************************
//
//	HellKnight
//
//**************************************************************************

class HellKnight:BaronOfHell
	__mobjinfo__(69)
{

__states__
{
	S_BOS2_STND('BOS2', 0, 'monsters/knight/base.md2', 0, 10.0 / 35.0, S_BOS2_STND2) { A_Look(); }
	S_BOS2_STND2('BOS2', 1, 'monsters/knight/base.md2', 1, 10.0 / 35.0, S_BOS2_STND) { A_Look(); }
	S_BOS2_RUN1('BOS2', 0, 'monsters/knight/base.md2', 2, 3.0 / 35.0, S_BOS2_RUN2) { A_Chase(); }
	S_BOS2_RUN2('BOS2', 0, 'monsters/knight/base.md2', 3, 3.0 / 35.0, S_BOS2_RUN3) { A_Chase(); }
	S_BOS2_RUN3('BOS2', 1, 'monsters/knight/base.md2', 4, 3.0 / 35.0, S_BOS2_RUN4) { A_Chase(); }
	S_BOS2_RUN4('BOS2', 1, 'monsters/knight/base.md2', 5, 3.0 / 35.0, S_BOS2_RUN5) { A_Chase(); }
	S_BOS2_RUN5('BOS2', 2, 'monsters/knight/base.md2', 6, 3.0 / 35.0, S_BOS2_RUN6) { A_Chase(); }
	S_BOS2_RUN6('BOS2', 2, 'monsters/knight/base.md2', 7, 3.0 / 35.0, S_BOS2_RUN7) { A_Chase(); }
	S_BOS2_RUN7('BOS2', 3, 'monsters/knight/base.md2', 8, 3.0 / 35.0, S_BOS2_RUN8) { A_Chase(); }
	S_BOS2_RUN8('BOS2', 3, 'monsters/knight/base.md2', 9, 3.0 / 35.0, S_BOS2_RUN1) { A_Chase(); }
	S_BOS2_ATK1('BOS2', 4, 'monsters/knight/base.md2', 10, 8.0 / 35.0, S_BOS2_ATK2) { A_FaceTarget(); }
	S_BOS2_ATK2('BOS2', 5, 'monsters/knight/base.md2', 11, 8.0 / 35.0, S_BOS2_ATK3) { A_FaceTarget(); }
	S_BOS2_ATK3('BOS2', 6, 'monsters/knight/base.md2', 12, 8.0 / 35.0, S_BOS2_RUN1) { A_BruisAttack(); }
	S_BOS2_PAIN('BOS2', 7, 'monsters/knight/base.md2', 13, 2.0 / 35.0, S_BOS2_PAIN2) { }
	S_BOS2_PAIN2('BOS2', 7, 'monsters/knight/base.md2', 14, 2.0 / 35.0, S_BOS2_RUN1) { A_Pain(); }
	S_BOS2_DIE1('BOS2', 8, 'monsters/knight/death.md2', 0, 8.0 / 35.0, S_BOS2_DIE2) { }
	S_BOS2_DIE2('BOS2', 9, 'monsters/knight/death.md2', 1, 8.0 / 35.0, S_BOS2_DIE3) { A_Scream(); }
	S_BOS2_DIE3('BOS2', 10, 'monsters/knight/death.md2', 2, 8.0 / 35.0, S_BOS2_DIE4) { }
	S_BOS2_DIE4('BOS2', 11, 'monsters/knight/death.md2', 3, 8.0 / 35.0, S_BOS2_DIE5) { A_Fall(); }
	S_BOS2_DIE5('BOS2', 12, 'monsters/knight/death.md2', 4, 8.0 / 35.0, S_BOS2_DIE6) { }
	S_BOS2_DIE6('BOS2', 13, 'monsters/knight/death.md2', 5, 8.0 / 35.0, S_BOS2_DIE7) { }
	S_BOS2_DIE7('BOS2', 14, 'monsters/knight/death.md2', 6, -1.0, S_NULL) { }
	S_BOS2_RAISE1('BOS2', 14, 'monsters/knight/death.md2', 7, 8.0 / 35.0, S_BOS2_RAISE2) { }
	S_BOS2_RAISE2('BOS2', 13, 'monsters/knight/death.md2', 8, 8.0 / 35.0, S_BOS2_RAISE3) { }
	S_BOS2_RAISE3('BOS2', 12, 'monsters/knight/death.md2', 9, 8.0 / 35.0, S_BOS2_RAISE4) { }
	S_BOS2_RAISE4('BOS2', 11, 'monsters/knight/death.md2', 10, 8.0 / 35.0, S_BOS2_RAISE5) { }
	S_BOS2_RAISE5('BOS2', 10, 'monsters/knight/death.md2', 11, 8.0 / 35.0, S_BOS2_RAISE6) { }
	S_BOS2_RAISE6('BOS2', 9, 'monsters/knight/death.md2', 12, 8.0 / 35.0, S_BOS2_RAISE7) { }
	S_BOS2_RAISE7('BOS2', 8, 'monsters/knight/death.md2', 13, 8.0 / 35.0, S_BOS2_RUN1) { }
}

defaultproperties
{
	Health = 500;
	IdleState = S_BOS2_STND;
	SeeState = S_BOS2_RUN1;
	MeleeState = S_BOS2_ATK1;
	MissileState = S_BOS2_ATK1;
	PainState = S_BOS2_PAIN;
	DeathState = S_BOS2_DIE1;
	RaiseState = S_BOS2_RAISE1;
	SightSound = 'KnightSight';
	DeathSound = 'KnightDeath';
}

}

//**************************************************************************
//
//  $Log$
//  Revision 1.19  2002/08/05 17:17:20  dj_jl
//  Working on models.
//
//  Revision 1.18  2002/05/18 16:59:58  dj_jl
//  Renamed SpawnState to IdleState, other changes.
//
//  Revision 1.17  2002/05/03 17:11:53  dj_jl
//  Object classes split up into their files.
//
//  Revision 1.16  2002/03/20 19:07:43  dj_jl
//  Got rid of a lots of legacy, beautification.
//
//  Revision 1.15  2002/03/02 17:41:12  dj_jl
//  Renamed Enemy to Target. Beautification.
//
//  Revision 1.14  2002/02/26 17:49:47  dj_jl
//  no message
//
//  Revision 1.13  2002/02/22 18:00:08  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.12  2002/01/28 18:50:18  dj_jl
//  Made some functions Actor members.
//  Replaced some pointers with references.
//
//  Revision 1.11  2002/01/25 18:04:33  dj_jl
//  Many global functions made Actor functions
//
//  Revision 1.10  2002/01/24 18:19:25  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//  Revision 1.9  2002/01/17 18:15:52  dj_jl
//  Renamed all map object classes
//
//  Revision 1.8  2002/01/11 18:19:40  dj_jl
//  Started to use names in progs
//
//  Revision 1.7  2002/01/07 12:21:10  dj_jl
//  Changed copyright year
//
//  Revision 1.6  2001/12/12 18:57:40  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.5  2001/11/02 18:42:08  dj_jl
//  Damage method
//
//  Revision 1.4  2001/09/24 17:24:09  dj_jl
//  Beautification
//
//  Revision 1.3  2001/08/29 17:42:13  dj_jl
//  Added sound channel
//  
//  Revision 1.2  2001/07/27 14:27:51  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
