//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//**************************************************************************
//
//	CommanderKeen
//
//**************************************************************************

class CommanderKeen:Pawn
	__mobjinfo__(72)
{

//==========================================================================
//
//  A_KeenDie
//
//  DOOM II special, map 32. Uses special tag 666.
//
//==========================================================================

void A_KeenDie(void)
{
	int args[5];

	A_Fall();

	// scan the remaining thinkers to see if all Keens are dead
	if (FindOther())
	{
		return;
	}
	args[0] = 666;
	args[1] = 16;
	args[2] = 150;
	args[3] = 0;
	EV_DoDoor(NULL, &args[0], doorOpen);
}

__states__
{
	S_KEENSTND('KEEN', 0, -1.0, S_KEENSTND) { }
	S_COMMKEEN('KEEN', 0, 6.0 / 35.0, S_COMMKEEN2) { }
	S_COMMKEEN2('KEEN', 1, 6.0 / 35.0, S_COMMKEEN3) { }
	S_COMMKEEN3('KEEN', 2, 6.0 / 35.0, S_COMMKEEN4) { A_Scream(); }
	S_COMMKEEN4('KEEN', 3, 6.0 / 35.0, S_COMMKEEN5) { }
	S_COMMKEEN5('KEEN', 4, 6.0 / 35.0, S_COMMKEEN6) { }
	S_COMMKEEN6('KEEN', 5, 6.0 / 35.0, S_COMMKEEN7) { }
	S_COMMKEEN7('KEEN', 6, 6.0 / 35.0, S_COMMKEEN8) { }
	S_COMMKEEN8('KEEN', 7, 6.0 / 35.0, S_COMMKEEN9) { }
	S_COMMKEEN9('KEEN', 8, 6.0 / 35.0, S_COMMKEEN10) { }
	S_COMMKEEN10('KEEN', 9, 6.0 / 35.0, S_COMMKEEN11) { }
	S_COMMKEEN11('KEEN', 10, 6.0 / 35.0, S_COMMKEEN12) { A_KeenDie(); }
	S_COMMKEEN12('KEEN', 11, -1.0, S_NULL) { }
	S_KEENPAIN('KEEN', 12, 4.0 / 35.0, S_KEENPAIN2) { }
	S_KEENPAIN2('KEEN', 12, 8.0 / 35.0, S_KEENSTND) { A_Pain(); }
}

defaultproperties
{
	Health = 100;
	Radius = 16.0;
	Height = 72.0;
	Mass = 10000000.0;
	PainChance = 256;
	bSpawnCeiling = true;
	bNoGravity = true;
	SpawnState = S_KEENSTND;
	PainState = S_KEENPAIN;
	DeathState = S_COMMKEEN;
	PainSound = 'KeenPain';
	DeathSound = 'KeenDeath';
}

}

//**************************************************************************
//
//  $Log$
//  Revision 1.7  2002/05/03 17:11:53  dj_jl
//  Object classes split up into their files.
//
//  Revision 1.6  2002/01/25 18:04:33  dj_jl
//  Many global functions made Actor functions
//
//  Revision 1.5  2002/01/07 12:21:10  dj_jl
//  Changed copyright year
//
//  Revision 1.4  2001/12/12 18:57:40  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.3  2001/09/24 17:24:09  dj_jl
//  Beautification
//
//  Revision 1.2  2001/07/27 14:27:51  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
