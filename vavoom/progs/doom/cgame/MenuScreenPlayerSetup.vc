//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MenuScreenPlayerSetup : MenuScreen;

array<name>			SkinNames;

MenuInputLine		PlayerName;
MenuChoiceEnum		Colour;
MenuSpriteAnim		Anim;
MenuChoiceEnum		Skin;
MenuModel			Mdl;

//==========================================================================
//
//	CreateChoices
//
//==========================================================================

void CreateChoices()
{
	void*		model;
	name		SkinName;
	string		SkinDesc;
	int			i;

	PlayerName = MenuInputLine(NewChild(MenuInputLine));
	PlayerName.SetPos(ChoicesStartX, ChoicesStartY);
	PlayerName.Text = "Name";
	PlayerName.Value = GetCvarS('Name');
	PlayerName.ValueChanged = ChangeName;
	ChoicesStartY += PlayerName.Height;

	Colour = MenuChoiceEnum(NewChild(MenuChoiceEnum));
	Colour.SetPos(ChoicesStartX, ChoicesStartY);
	Colour.Text = "Colour";
	Colour.bLeftAlign = true;
	Colour.AddItem("green");
	Colour.AddItem("gray");
	Colour.AddItem("brown");
	Colour.AddItem("red");
	Colour.AddItem("light red");
	Colour.AddItem("blue");
	Colour.AddItem("rose");
	Colour.AddItem("light brown");
	Colour.SetInitialValue(GetCvar('colour'));
	Colour.ValueChanging = ChangeColour;
	ChoicesStartY += Colour.Height;

	R_InstallSprite("PLAY", 500);

	Anim = MenuSpriteAnim(NewChild(MenuSpriteAnim));
	Anim.SetPos(100, 160);
	Anim.SprDef = 500;
	Anim.Speed = 8;
	Anim.NumFrames = 4;
	Anim.Translation = Colour.Value;

	model = InstallModel("models/players/doomguy/player.xml");
	if (model)
	{
		SetCvarS('model', "doomguy");

		Skin = MenuChoiceEnum(NewChild(MenuChoiceEnum));
		Skin.SetPos(ChoicesStartX, ChoicesStartY);
		Skin.Text = "Skin";
		Skin.bLeftAlign = true;
		for (i = 0; i < 32; i++)
		{
			if (!GetModelSkinInfo(model, i, SkinName, SkinDesc))
			{
				break;
			}
			SkinNames.Num = i + 1;
			SkinNames[i] = SkinName;
			Skin.AddItem(SkinDesc);
		}
		Skin.SetInitialValue(GetSkinValue());
		Skin.ValueChanging = ChangeSkin;
		ChoicesStartY += Skin.Height;

		Mdl = MenuModel(NewChild(MenuModel));
		Mdl.Origin = vector(-64.0, 32.0, -32.0);
		Mdl.Angle = 345.0;
		Mdl.Model = model;
		Mdl.Skin = va("%n", SkinNames[Skin.Value]);
	}
}

//==========================================================================
//
//	ChangeName
//
//==========================================================================

void ChangeName(Object Sender)
{
	SetCvarS('Name', PlayerName.Value);
}

//==========================================================================
//
//	ChangeColour
//
//==========================================================================

bool ChangeColour(Object Sender, int newValue)
{
	SetCvar('colour', newValue);
	Anim.Translation = newValue;
	return true;
}

//==========================================================================
//
//	GetSkinValue
//
//==========================================================================

int GetSkinValue()
{
	int i;
	string curskin;

	curskin = GetCvarS('skin');
	for (i = 0; i < Skin.MaxValue; i++)
	{
		if (!stricmp(curskin, va("%n", SkinNames[i])))
		{
			break;
		}
	}
	if (i == Skin.MaxValue)
	{
		i = 0;
		SetCvarS('skin', va("%n", SkinNames[0]));
	}
	return i;
}

//==========================================================================
//
//	ChangeSkin
//
//==========================================================================

bool ChangeSkin(Object Sender, int newValue)
{
	SetCvarS('skin', va("%n", SkinNames[newValue]));
	Mdl.Skin = va("%n", SkinNames[newValue]);
	return true;
}

defaultproperties
{
	ChoicesStartX = 16;
	ChoicesStartY = 40;
	SelectorType = MenuSelector_SmallLeft;
	Title = "PLAYER SETUP";
}
