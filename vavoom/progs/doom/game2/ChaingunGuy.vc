//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class ChaingunGuy : Actor
	__mobjinfo__(65)
	__scriptid__(2);

//==========================================================================
//
//  A_CPosAttack
//
//  Heavy weapon dude attack.
//
//==========================================================================

final void A_CPosAttack()
{
	int damage;
	TVec dir;

	if (!Target)
		return;

	//	Andy Baker's stealth monsters
	if (bStealth)
	{
		VisDir = 1;
	}

	//FIXME
	PlaySound('chainguy/attack', CHAN_WEAPON);
	A_FaceTarget();
	AimLineAttack(dir, Angles, MISSILERANGE);
	VectorRotateAroundZ(&dir, (Random() - Random()) * 45.0 / 2.0);
	damage = ((P_Random() % 5) + 1) * 3;
	LineAttack(dir, MISSILERANGE, damage, BulletPuff);

	bMuzzleFlash = true;
}

//==========================================================================
//
//  A_CPosRefire
//
//  Heavy weapon dude refire.
//
//==========================================================================

final void A_CPosRefire()
{
	// keep firing unless target got out of sight
	A_FaceTarget();

	if (P_Random() < 40)
		return;

	if (!Target || Target.Health <= 0 || !CanSee(Target))
	{
		SetState(SeeState);
	}
}

//==========================================================================
//
//	NoBlockingSet
//
//==========================================================================

void NoBlockingSet()
{
	DropItem(Chaingun, 0, 1.0);
}

states
{
Spawn:
	CPOS AB 10 A_Look
	Loop
See:
	CPOS AABBCCDD 3 A_Chase
	Loop
Missile:
	CPOS E 10 A_FaceTarget
	CPOS FE 4 Bright A_CPosAttack
	CPOS F 1 A_CPosRefire
	Goto Missile+1
Pain:
	CPOS G 3
	CPOS G 3 A_Pain
	Goto See
Death:
	CPOS H 5
	CPOS I 5 A_Scream
	CPOS J 5 A_Fall
	CPOS KLM 5
	CPOS N -1
	Stop
XDeath:
	CPOS O 5
	CPOS P 5 A_XScream
	CPOS Q 5 A_Fall
	CPOS RS 5
	CPOS T -1
	Stop
Raise:
	CPOS NMLKJIH 5
	Goto See
}

defaultproperties
{
	Health = 70;
	GibsHealth = -70;
	Radius = 20.0;
	Height = 56.0;
	Mass = 100.0;
	StepSpeed = 8.0;
	PainChance = 0.6640625;
	bSolid = true;
	bShootable = true;
	bCountKill = true;
	bMonster = true;
	bActivateMCross = true;
	bActivatePushWall = true;
	bFloorClip = true;
	bPassMobj = true;
	DLightColour = RGB(195, 79, 0);
	DLightRadius = 118.0;
	SightSound = 'chainguy/sight';
	ActiveSound = 'chainguy/active';
	PainSound = 'chainguy/pain';
	DeathSound = 'chainguy/death';
}
