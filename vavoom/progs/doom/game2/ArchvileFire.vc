//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class ArchvileFire : Actor
	__scriptid__(98);

//==========================================================================
//
//  A_Fire
//
//  Keep fire in front of player unless out of sight.
//
//==========================================================================

final void A_Fire()
{
	if (!Target || !Tracer)
		return;

	// don't move it if the vile lost sight
	if (!Target.CanSee(Tracer))
		return;

	UnlinkFromWorld();
	Origin.x = Tracer.Origin.x + 24.0 * cos(Tracer.Angles.yaw);
	Origin.y = Tracer.Origin.y + 24.0 * sin(Tracer.Angles.yaw);
	Origin.z = Tracer.Origin.z;
	LinkToWorld();
}

//==========================================================================
//
//  A_StartFire
//
//  Make fire start sound.
//
//==========================================================================

final void A_StartFire()
{
	PlaySound('vile/firestrt', CHAN_VOICE);
	A_Fire();
}

//==========================================================================
//
//  A_FireCrackle
//
//  Fire sound.
//
//==========================================================================

final void A_FireCrackle()
{
	PlaySound('vile/firecrkl', CHAN_VOICE);
	A_Fire();
}

states
{
Spawn:
	FIRE A 2 Bright A_StartFire
	FIRE BAB 2 Bright A_Fire
	FIRE C 2 Bright A_FireCrackle
	FIRE BCBCDCDCDEDED 2 Bright A_Fire
	FIRE E 2 Bright A_FireCrackle
	FIRE FEFEFGHGHGH 2 Bright A_Fire
	Stop
}

defaultproperties
{
	RenderStyle = STYLE_Add;
	Alpha = 0.666;
	bNoBlockmap = true;
	bNoGravity = true;
	bDynamicLight = true;
	DLightColour = RGB(195, 155, 47);
	DLightRadius = 134.0;
}