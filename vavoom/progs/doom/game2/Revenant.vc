//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Revenant : Actor
	__mobjinfo__(66)
	__scriptid__(20);

//==========================================================================
//
//  A_SkelWhosh
//
//  Ravenant attack sound.
//
//==========================================================================

final void A_SkelWhoosh()
{
	if (!Target)
		return;
	A_FaceTarget();
	PlaySound('skeleton/swing', CHAN_WEAPON);
}

//==========================================================================
//
//  A_SkelFist
//
//  Ravenant close attack.
//
//==========================================================================

final void A_SkelFist()
{
	int damage;

	if (!Target)
		return;

	A_FaceTarget();

	if (CheckMeleeRange())
	{
		damage = ((P_Random() % 10) + 1) * 6;
		PlaySound('skeleton/melee', CHAN_WEAPON);
		Target.Damage(self, self, damage);
	}
}

//==========================================================================
//
//  A_SkelMissile
//
//  Ravenant far attack.
//
//==========================================================================

final void A_SkelMissile()
{
	EntityEx A;

	if (!Target)
		return;

	A_FaceTarget();
	Origin.z += 16.0;	// so missile spawns higher
	A = SpawnMissile(Target, RevenantTracer);
	Origin.z -= 16.0;	// back to normal

	if (A)
	{
		A.Origin = A.Origin + A.Velocity * 0.03;
		A.Tracer = Target;
		A.bSeekerMissile = true;
	}
}

states
{
Spawn:
	SKEL AB 10 A_Look
	Loop
See:
	SKEL AABBCCDDEEFF 2 A_Chase
	Loop
Melee:
	SKEL G 0 A_FaceTarget
	SKEL G 6 A_SkelWhoosh
	SKEL H 6 A_FaceTarget
	SKEL I 6 A_SkelFist
	Goto See
Missile:
	SKEL J 0 Bright A_FaceTarget
	SKEL J 10 Bright A_FaceTarget
	SKEL K 10 A_SkelMissile
	SKEL K 10 A_FaceTarget
	Goto See
Pain:
	SKEL L 5
	SKEL L 5 A_Pain
	Goto See
Death:
	SKEL LM 7
	SKEL N 7 A_Scream
	SKEL O 7 A_Fall
	SKEL P 7
	SKEL Q -1
	Stop
Raise:
	SKEL QPONML 5
	Goto See
}

defaultproperties
{
	Health = 300;
	Radius = 20.0;
	Height = 56.0;
	Mass = 500.0;
	StepSpeed = 10.0;
	PainChance = 0.390625;
	MissileMinRange = 196.0;
	bSolid = true;
	bShootable = true;
	bCountKill = true;
	bMonster = true;
	bActivateMCross = true;
	bActivatePushWall = true;
	bTriggerHappy = true;
	bFloorClip = true;
	SightSound = 'skeleton/sight';
	ActiveSound = 'skeleton/active';
	PainSound = 'skeleton/pain';
	DeathSound = 'skeleton/death';
}
