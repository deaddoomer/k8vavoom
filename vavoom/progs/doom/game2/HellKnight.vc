//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class HellKnight : BaronOfHell
	__mobjinfo__(69)
	__scriptid__(113);

__states__
{
	S_BOS2_STND('BOS2', 0, 'monsters/knight/model.xml', 0, 10.0 / 35.0, S_BOS2_STND2) { A_Look(); }
	S_BOS2_STND2('BOS2', 1, 'monsters/knight/model.xml', 1, 10.0 / 35.0, S_BOS2_STND) { A_Look(); }
	S_BOS2_RUN1('BOS2', 0, 'monsters/knight/model.xml', 2, 3.0 / 35.0, S_BOS2_RUN2) { A_Chase(); }
	S_BOS2_RUN2('BOS2', 0, 'monsters/knight/model.xml', 3, 3.0 / 35.0, S_BOS2_RUN3) { A_Chase(); }
	S_BOS2_RUN3('BOS2', 1, 'monsters/knight/model.xml', 4, 3.0 / 35.0, S_BOS2_RUN4) { A_Chase(); }
	S_BOS2_RUN4('BOS2', 1, 'monsters/knight/model.xml', 5, 3.0 / 35.0, S_BOS2_RUN5) { A_Chase(); }
	S_BOS2_RUN5('BOS2', 2, 'monsters/knight/model.xml', 6, 3.0 / 35.0, S_BOS2_RUN6) { A_Chase(); }
	S_BOS2_RUN6('BOS2', 2, 'monsters/knight/model.xml', 7, 3.0 / 35.0, S_BOS2_RUN7) { A_Chase(); }
	S_BOS2_RUN7('BOS2', 3, 'monsters/knight/model.xml', 8, 3.0 / 35.0, S_BOS2_RUN8) { A_Chase(); }
	S_BOS2_RUN8('BOS2', 3, 'monsters/knight/model.xml', 9, 3.0 / 35.0, S_BOS2_RUN1) { A_Chase(); }
	S_BOS2_ATK1('BOS2', 4, 'monsters/knight/model.xml', 10, 8.0 / 35.0, S_BOS2_ATK2) { A_FaceTarget(); }
	S_BOS2_ATK2('BOS2', 5, 'monsters/knight/model.xml', 11, 8.0 / 35.0, S_BOS2_ATK3) { A_FaceTarget(); }
	S_BOS2_ATK3('BOS2', 6, 'monsters/knight/model.xml', 12, 8.0 / 35.0, S_BOS2_RUN1) { A_BruisAttack(); }
	S_BOS2_PAIN('BOS2', 7, 'monsters/knight/model.xml', 13, 2.0 / 35.0, S_BOS2_PAIN2) { }
	S_BOS2_PAIN2('BOS2', 7, 'monsters/knight/model.xml', 14, 2.0 / 35.0, S_BOS2_RUN1) { A_Pain(); }
	S_BOS2_DIE1('BOS2', 8, 'monsters/knight/model.xml', 15, 8.0 / 35.0, S_BOS2_DIE2) { }
	S_BOS2_DIE2('BOS2', 9, 'monsters/knight/model.xml', 16, 8.0 / 35.0, S_BOS2_DIE3) { A_Scream(); }
	S_BOS2_DIE3('BOS2', 10, 'monsters/knight/model.xml', 17, 8.0 / 35.0, S_BOS2_DIE4) { }
	S_BOS2_DIE4('BOS2', 11, 'monsters/knight/model.xml', 18, 8.0 / 35.0, S_BOS2_DIE5) { A_Fall(); }
	S_BOS2_DIE5('BOS2', 12, 'monsters/knight/model.xml', 19, 8.0 / 35.0, S_BOS2_DIE6) { }
	S_BOS2_DIE6('BOS2', 13, 'monsters/knight/model.xml', 20, 8.0 / 35.0, S_BOS2_DIE7) { }
	S_BOS2_DIE7('BOS2', 14, 'monsters/knight/model.xml', 21, -1.0, none) { }
	S_BOS2_RAISE1('BOS2', 14, 'monsters/knight/model.xml', 22, 8.0 / 35.0, S_BOS2_RAISE2) { }
	S_BOS2_RAISE2('BOS2', 13, 'monsters/knight/model.xml', 23, 8.0 / 35.0, S_BOS2_RAISE3) { }
	S_BOS2_RAISE3('BOS2', 12, 'monsters/knight/model.xml', 24, 8.0 / 35.0, S_BOS2_RAISE4) { }
	S_BOS2_RAISE4('BOS2', 11, 'monsters/knight/model.xml', 25, 8.0 / 35.0, S_BOS2_RAISE5) { }
	S_BOS2_RAISE5('BOS2', 10, 'monsters/knight/model.xml', 26, 8.0 / 35.0, S_BOS2_RAISE6) { }
	S_BOS2_RAISE6('BOS2', 9, 'monsters/knight/model.xml', 27, 8.0 / 35.0, S_BOS2_RAISE7) { }
	S_BOS2_RAISE7('BOS2', 8, 'monsters/knight/model.xml', 28, 8.0 / 35.0, S_BOS2_RUN1) { }
}

defaultproperties
{
	Health = 500;
	IdleState = S_BOS2_STND;
	SeeState = S_BOS2_RUN1;
	MeleeState = S_BOS2_ATK1;
	MissileState = S_BOS2_ATK1;
	PainState = S_BOS2_PAIN;
	DeathState = S_BOS2_DIE1;
	RaiseState = S_BOS2_RAISE1;
	SightSound = 'knight/sight';
	ActiveSound = 'knight/active';
	PainSound = 'knight/pain';
	DeathSound = 'knight/death';
}
