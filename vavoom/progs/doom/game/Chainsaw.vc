//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Chainsaw : DoomWeapon
	game(GAME_Doom)
	__mobjinfo__(2005)
	__scriptid__(32);

//===========================================================================
//
//  A_Saw
//
//===========================================================================

final void A_Saw()
{
	float		angle;
	int			damage;
	TAVec		aimAng;
	TVec		dir;
	EntityEx	AimTarget;

	if (!bIsPlayer)
	{
		return;
	}

	Weapon Wpn = PlayerEx(Player).ReadyWeapon;
	if (Wpn)
	{
		if (!Wpn.DepleteAmmo())
		{
			return;
		}
	}

	damage = 2 * (P_Random() % 10 + 1);
	aimAng = Angles;
	aimAng.yaw = AngleMod360(aimAng.yaw + (Random() -
		Random()) * 45.0 / 8.0);

	// use meleerange + 1 se the puff doesn't skip the flash
	AimTarget = AimLineAttack(dir, aimAng, MELEERANGE + 0.00001);
	LineAttack(dir, MELEERANGE + 0.00001, damage, BulletPuff);

	if (!AimTarget)
	{
		PlaySound('weapons/sawfull', CHAN_WEAPON);
		return;
	}
	PlaySound('weapons/sawhit', CHAN_WEAPON);

	// turn to face target
	angle = atan2(AimTarget.Origin.y - Origin.y,
		AimTarget.Origin.x - Origin.x);
	if (AngleMod360(angle - Angles.yaw) > 180.0)
	{
		if (AngleMod360(angle - Angles.yaw) < -90.0 / 20.0)
			Angles.yaw = angle + 90.0 / 21.0;
		else
			Angles.yaw = Angles.yaw - 90.0 / 20.0;
	}
	else
	{
		if (AngleMod360(angle - Angles.yaw) > 90.0 / 20.0)
			Angles.yaw = angle - 90.0 / 21.0;
		else
			Angles.yaw += 90.0 / 20.0;
	}
	Angles.yaw = AngleMod360(Angles.yaw);
	bJustAttacked = true;
	if (bIsPlayer)
	{
		Player.bFixAngle = true;
	}
}

states
{
Ready:
	SAWG CD 4 A_WeaponReady
	Loop
Deselect:
	SAWG C 1 A_Lower
	Loop
Select:
	SAWG C 1 A_Raise
	Loop
Fire:
	SAWG AB 4 A_Saw
	SAWG B 0 A_ReFire
	Goto Ready
Spawn:
	CSAW A -1
	Stop
}

defaultproperties
{
	SelectionOrder = 2200;
	PlayerModelVersion = 8;
	PickupMessage = "$gotchainsaw";
	BotCombatDist = 1.0;
	Kickback = 0.0;
	bBotMelee = true;
	UpSound = 'weapons/sawup';
	ReadySound = 'weapons/sawidle';
	Obituary = "$ob_mpchainsaw";
}
