//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MinotaurFloorFire : MinotaurFloorFire2;

//==========================================================================
//
//  OnMapSpawn
//
//==========================================================================

void OnMapSpawn(mthing_t* mthing)
{
	::OnMapSpawn(mthing);
	if (Level.Game.fastparm)
		Speed = 700.0;
}

//==========================================================================
//
//  A_MntrFloorFire
//
//==========================================================================

final void A_MntrFloorFire()
{
	Actor mo;
	float i1;
	float i2;

	Origin.z = FloorZ;
	i1 = Origin.x + (Random() - Random()) * 4.0;
	i2 = Origin.y + (Random() - Random()) * 4.0;
	mo = Spawn(MinotaurFloorFire2, vector(i1, i2, ONFLOORZ));
	mo.Target = Target;
	mo.Velocity.x = 0.00001;	// Force block checking
	mo.CheckMissileSpawn();
}

__states__
{
	S_MNTRFX2_1('FX13', 0, 2.0 / 35.0, S_MNTRFX2_1) = A_MntrFloorFire
}

defaultproperties
{
	Radius = 5.0;
	Height = 12.0;
	Speed = 490.0;
	MissileDamage = 4;
	bFireDamage = true;
	IdleState = S_MNTRFX2_1;
	DeathState = S_MNTRFXI2_1;
	DeathSound = 'minotaur/fx2hit';
	Effects = HereticDefs::EF_DL_WHITE;
	// The Minotaur floor fire can step up any amount
	MaxStepHeight = 99999.0;
}
