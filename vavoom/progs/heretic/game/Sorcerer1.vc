//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Sorcerer1 : Actor
	__mobjinfo__(7)
	__scriptid__(142);

//==========================================================================
//
//  A_Sor1Chase
//
//==========================================================================

final void A_Sor1Chase()
{
	if (Special1)
	{
		Special1--;
		StateTime -= 0.1;
	}
	A_Chase();
}

//==========================================================================
//
//  A_Srcr1Attack
//
//  Sorcerer demon attack.
//
//==========================================================================

final void A_Srcr1Attack()
{
	EntityEx A;
	TAVec ang;
	float angle;

	if (!Target)
	{
		return;
	}
	PlaySound(AttackSound, CHAN_WEAPON);
	if (CheckMeleeRange())
	{
		Target.Damage(self, self, HITDICE(8));
		return;
	}
	if (Health > (default.Health / 3) * 2)
	{
		// Spit one fireball
		SpawnMissile(Target, SorcererFX1, 48.0);
	}
	else
	{
		// Spit three fireballs
		A = SpawnMissile(Target, SorcererFX1, 48.0);
		if (A)
		{
			VectorAngles(&A.Velocity, &ang);
			angle = A.Angles.yaw;
			SpawnMissileAngles(SorcererFX1,
				AngleMod360(angle - 3.0), ang.pitch, 48.0);
			SpawnMissileAngles(SorcererFX1,
				AngleMod360(angle + 3.0), ang.pitch, 48.0);
		}
		if (Health < default.Health / 3)
		{
			// Maybe attack again
			if (Special1)
			{
				// Just attacked, so don't attack again
				Special1 = 0;
			}
			else
			{
				// Set state to attack again
				Special1 = 1;
				SetState(FindState('ReAttack'));
			}
		}
	}
}

//==========================================================================
//
//  A_Sor1Pain
//
//==========================================================================

final void A_Sor1Pain()
{
	Special1 = 20;	// Number of steps to walk fast
	A_Pain();
}

//==========================================================================
//
//  A_SorZap
//
//==========================================================================

final void A_SorZap()
{
	PlaySound('dsparil/zap', CHAN_BODY, 1.0, ATTN_NONE);
}

//==========================================================================
//
//  A_SorcererRise
//
//==========================================================================

final void A_SorcererRise()
{
	Sorcerer2 S2;

	bSolid = false;
	S2 = Sorcerer2(Spawn(Sorcerer2, Origin));
	S2.SetState(S2.FindState('Rise'));
	S2.Angles.yaw = Angles.yaw;
	S2.Target = Target;
}

states
{
Spawn:
	SRCR AB 10 A_Look
	Loop
See:
	SRCR ABCD 5 A_Sor1Chase
	Loop
Missile:
	SRCR Q 7 A_FaceTarget
	SRCR R 6 A_FaceTarget
	SRCR S 10 A_Srcr1Attack
	Goto See
ReAttack:
	SRCR S 10 A_FaceTarget
	SRCR Q 7 A_FaceTarget
	SRCR R 6 A_FaceTarget
	SRCR S 10 A_Srcr1Attack
	Goto See
Pain:
	SRCR Q 6 A_Sor1Pain
	Goto See
Death:
	SRCR E 7
	SRCR F 7 A_Scream
	SRCR G 7
	SRCR HIJK 6
	SRCR L 25 A_SorZap
	SRCR MN 5
	SRCR O 4
	SRCR L 20 A_SorZap
	SRCR MN 5
	SRCR O 4
	SRCR L 12
	SRCR P -1 A_SorcererRise
	Stop
}

defaultproperties
{
	Health = 2000;
	Radius = 28.0;
	Height = 100.0;
	Mass = 800.0;
	Speed = 16.0 * 35.0;
	PainChance = 0.21875;
	bSolid = true;
	bShootable = true;
	bCountKill = true;
	bMonster = true;
	bFloorClip = true;
	bActivateMCross = true;
	bActivatePushWall = true;
	bPassMobj = true;
	bCanUseWalls = true;
	bBoss = true;
	bNoMorph = true;
	bNoRadiusDamage = true;
	bNeverTarget = true;
	bNoIceDeath = true;
	SightSound = 'dsparilserpent/sight';
	ActiveSound = 'dsparilserpent/active';
	AttackSound = 'dsparilserpent/attack';
	PainSound = 'dsparilserpent/pain';
	DeathSound = 'dsparilserpent/death';
	Obituary = "$ob_dsparil1";
	HitObituary = "$ob_dsparil1hit";
}
