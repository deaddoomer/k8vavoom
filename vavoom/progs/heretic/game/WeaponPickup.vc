//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponPickup : Pickup
	abstract;

int WeaponType;

//==========================================================================
//
//  TryPickup
//
//  Returns true if the weapon or its ammo was accepted.
//
//==========================================================================

bool TryPickup(EntityEx Toucher)
{
	bool gaveAmmo;
	bool gaveWeapon;

	// Cooperative net-game
	if (ShouldStay() && !bDropped && Player(Toucher.Player).WeaponOwned[WeaponType])
	{
		return false;
	}

	gaveAmmo = Player(Toucher.Player).GiveAmmo(MainGameInfo(Level.Game).WeaponClasses[WeaponType].default.Ammo,
		MainGameInfo(Level.Game).WeaponClasses[WeaponType].default.GetAmmoCount);
	if (Player(Toucher.Player).WeaponOwned[WeaponType])
	{
		gaveWeapon = false;
	}
	else
	{
		gaveWeapon = true;
		Player(Toucher.Player).WeaponOwned[WeaponType] = true;
		if (MainGameInfo(Level.Game).WeaponValue[WeaponType] >
			MainGameInfo(Level.Game).WeaponValue[Player(Toucher.Player).ReadyWeapon])
		{
			// Only switch to more powerful weapons
			Player(Toucher.Player).PendingWeapon = WeaponType;
		}
	}
	return (gaveWeapon || gaveAmmo);
}

//==========================================================================
//
//	HidePickup
//
//==========================================================================

void HidePickup()
{
	if (Level.Game.deathmatch && !bDropped)
	{
		HideSpecialThing();
	}
	else
	{
		Destroy();
	}
}

//==========================================================================
//
//	ShouldStay
//
//==========================================================================

bool ShouldStay()
{
	return Level.Game.netgame && !Level.Game.deathmatch;
}

defaultproperties
{
	PickupSound = 'misc/w_pkup';
}
