//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Player : BasePlayer;

//
//  FIRST FIELDS ARE STATS THAT ARE SENT TO CLIENT FOR STATUS BAR
//

sb_stats_t Stats;

int ArtifactFlash;
int InvPtr;
int InvCurPos;

int ArmorPoints;

int ReadyArtifact;
inventory_t Inventory[NUMARTIFACTS];
int InventorySlotNum;

int ReadyWeapon;

//
//  ----------
//

int Ammo[NUMAMMO];

float ChickenTime;	// player is a chicken if > 0

// Power ups. invinc and invis are timers.
float Powers[NUMPOWERS];

int Keys;

int Arti;	// artitype_t to use

// Base height above floor for viewz.
float ViewHeight;
// Bob/squat speed.
float DeltaViewHeight;
// bounded/scaled total momentum.
float Bob;

float FlyHeight;

float InventoryTime;
int ArtifactCount;

// Refired shots are less accurate.
int Refire;

bool Backpack;

// Bit flags, for cheats and debug.
// See cheat_t, above.
int Cheats;

// Is wp_nochange if not changing.
int PendingWeapon;

bool WeaponOwned[NUMWEAPONS];

// Who did damage (NULL for floors/ceilings).
Actor Attacker;

// For screen flashing (red or bright).
float DamageFlash;
float BonusFlash;

float JumpTime;

// Armor type is 0-2.
int ArmorType;

int ChickenPeck;	// chicken peck countdown
Actor Rain1;	// active rain maker 1
Actor Rain2;	// active rain maker 2

int NewTorch;	// used in the torch flicker effect.
int NewTorchDelta;

TVec MoveDir;

BotPlayer Bot;

defaultproperties
{
}

//**************************************************************************
//
//  $Log$
//  Revision 1.1  2003/11/12 16:49:44  dj_jl
//  Changed player structure into a class
//
//**************************************************************************
