//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Pod : Actor
	__mobjinfo__(2035)
	__scriptid__(125);

Actor Generator;

//==========================================================================
//
//  Died
//
//==========================================================================

void Died(EntityEx source, EntityEx inflictor)
{
	if (source && source.Class != Pod)
	{
		// Make sure players get frags for chain-reaction kills
		Target = source;
	}
	::Died(source, inflictor);
}

//==========================================================================
//
//  A_PodPain
//
//==========================================================================

final void A_PodPain()
{
	int i;
	int count;
	int chance;
	Actor goo;

	chance = P_Random();
	if (chance < 128)
	{
		return;
	}
	count = chance > 240 ? 2 : 1;
	for (i = 0; i < count; i++)
	{
		goo = Spawn(PodGoo, Origin + vector(0.0, 0.0, 48.0));
		goo.Target = self;
		goo.Velocity.x = (Random() - Random()) * 2.0 * 35.0;
		goo.Velocity.y = (Random() - Random()) * 2.0 * 35.0;
		goo.Velocity.z = (0.5 + Random() * 2.0) * 35.0;
	}
}

//==========================================================================
//
//  A_RemovePod
//
//==========================================================================

final void A_RemovePod()
{
	if (Generator && Generator.Special1 > 0)
	{
		Generator.Special1--;
	}
}

states
{
Spawn:
	PPOD A 10
	Loop
Pain:
	PPOD B 14 A_PodPain
	Goto Spawn
Death:
	PPOD C 5 Bright A_RemovePod
	PPOD D 5 Bright A_Scream
	PPOD E 5 Bright A_Explode
	PPOD F 10 Bright
	Goto ScriptedEntity::FreeTargMobj
Grow:
	PPOD IJKLMNOP 3
	Goto Spawn
}

defaultproperties
{
	Health = 45;
	Radius = 16.0;
	Height = 54.0;
	PainChance = 1.0;
	bSolid = true;
	bShootable = true;
	bDropOff = true;
	bNoBlood = true;
	bWindThrust = true;
	bPushable = true;
	bSlide = true;
	bTelestomp = true;
	bNoMorph = true;
	bOnmobjCopyVel = true;
	bCantAutoAim = true;
	bNoBlockMonst = true;
	DeathSound = 'world/podexplode';
	ExplodeEffect = RGB(103, 223, 95);
}
