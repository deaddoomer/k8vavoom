//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Blaster : HereticWeapon
	__mobjinfo__(53)
	__scriptid__(28);

//===========================================================================
//
//  A_FireBlasterPL1
//
//===========================================================================

final void A_FireBlasterPL1() self(Actor)
{
	int damage;
	float bulletslope;
	TVec dir;

	if (!bIsPlayer)
	{
		return;
	}
	Weapon Wpn = PlayerEx(Player).ReadyWeapon;

	Wpn.DepleteAmmo();
	Aim(dir, 16.0 * 64.0);
	damage = HITDICE(4);
	if (Player(Player).Refire)
	{
		VectorRotateAroundZ(&dir, (Random() - Random()) * 45.0 / 8.0);
	}
	LineAttack(dir, MISSILERANGE, damage, BlasterPuff);
	PlaySound('weapons/blastershoot', CHAN_WEAPON);
}

//===========================================================================
//
//  A_FireBlasterPL2
//
//===========================================================================

final void A_FireBlasterPL2() self(Actor)
{
	EntityEx	A;

	if (!bIsPlayer)
	{
		return;
	}
	Weapon Wpn = PlayerEx(Player).ReadyWeapon;

	Wpn.DepleteAmmo();
	A = SpawnPlayerMissile(BlasterFX1);
	if (A)
	{
		A.bBlaster = true;
	}
	PlaySound('weapons/blastershoot', CHAN_WEAPON);
}

states
{
Ready:
	BLSR A 1 A_WeaponReady
	Loop
Deselect:
	BLSR A 1 A_Lower
	Loop
Select:
	BLSR A 1 A_Raise
	Loop
Fire:
	BLSR BC 3
Hold:
	BLSR D 2 A_FireBlasterPL1
	BLSR CB 2
	BLSR A 0 A_ReFire
	Goto Ready
Spawn:
	WBLS A -1
	Stop
}

defaultproperties
{
	SelectionOrder = 500;
	AmmoType1 = BlasterAmmo;
	AmmoUse1 = 1;
	AmmoGive1 = 30;
	PSpriteSY = 15.0;
	PickupMessage = "$txt_wpnblaster";
	SisterWeaponType = BlasterPowered;
	BotCombatDist = 256.0;
}
