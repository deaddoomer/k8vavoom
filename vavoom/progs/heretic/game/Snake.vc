//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Snake : Pawn
	__mobjinfo__(92)
	__scriptid__(132);

//==========================================================================
//
//	DropStuff
//
//==========================================================================

void DropStuff()
{
	DropItem(ItemAmmoPhoenixWimpy, 5, 0.328125);
}

//==========================================================================
//
//  A_SnakeAttack
//
//==========================================================================

void A_SnakeAttack()
{
	if (!Enemy)
	{
		SetState(SeeState);
		return;
	}
	PlaySound(AttackSound, CHAN_WEAPON);
	A_FaceTarget();
	SpawnMissile(Enemy, SnakeProjectileA);
}

//==========================================================================
//
//  A_SnakeAttack2
//
//==========================================================================

void A_SnakeAttack2()
{
	if (!Enemy)
	{
		SetState(SeeState);
		return;
	}
	PlaySound(AttackSound, CHAN_WEAPON);
	A_FaceTarget();
	SpawnMissile(Enemy, SnakeProjectileB);
}

__states__
{
	S_SNAKE_LOOK1('SNKE', 0, 'monsters/snake/base.md2', 0, 10.0 / 35.0, S_SNAKE_LOOK2) { A_Look(); }
	S_SNAKE_LOOK2('SNKE', 1, 'monsters/snake/base.md2', 1, 10.0 / 35.0, S_SNAKE_LOOK1) { A_Look(); }
	S_SNAKE_WALK1('SNKE', 0, 'monsters/snake/base.md2', 2, 2.0 / 35.0, S_SNAKE_WALK2) { A_Chase(); }
	S_SNAKE_WALK2('SNKE', 0, 'monsters/snake/base.md2', 3, 2.0 / 35.0, S_SNAKE_WALK3) { }
	S_SNAKE_WALK3('SNKE', 1, 'monsters/snake/base.md2', 4, 2.0 / 35.0, S_SNAKE_WALK4) { A_Chase(); }
	S_SNAKE_WALK4('SNKE', 1, 'monsters/snake/base.md2', 5, 2.0 / 35.0, S_SNAKE_WALK5) { }
	S_SNAKE_WALK5('SNKE', 2, 'monsters/snake/base.md2', 6, 2.0 / 35.0, S_SNAKE_WALK6) { A_Chase(); }
	S_SNAKE_WALK6('SNKE', 2, 'monsters/snake/base.md2', 7, 2.0 / 35.0, S_SNAKE_WALK7) { }
	S_SNAKE_WALK7('SNKE', 3, 'monsters/snake/base.md2', 8, 2.0 / 35.0, S_SNAKE_WALK8) { A_Chase(); }
	S_SNAKE_WALK8('SNKE', 3, 'monsters/snake/base.md2', 9, 2.0 / 35.0, S_SNAKE_WALK1) { }
	S_SNAKE_ATK1('SNKE', 5, 'monsters/snake/base.md2', 10, 5.0 / 35.0, S_SNAKE_ATK2) { A_FaceTarget(); }
	S_SNAKE_ATK2('SNKE', 5, 'monsters/snake/base.md2', 11, 5.0 / 35.0, S_SNAKE_ATK3) { A_FaceTarget(); }
	S_SNAKE_ATK3('SNKE', 5, 'monsters/snake/base.md2', 12, 4.0 / 35.0, S_SNAKE_ATK4) { A_SnakeAttack(); }
	S_SNAKE_ATK4('SNKE', 5, 'monsters/snake/base.md2', 13, 4.0 / 35.0, S_SNAKE_ATK5) { A_SnakeAttack(); }
	S_SNAKE_ATK5('SNKE', 5, 'monsters/snake/base.md2', 14, 4.0 / 35.0, S_SNAKE_ATK6) { A_SnakeAttack(); }
	S_SNAKE_ATK6('SNKE', 5, 'monsters/snake/base.md2', 15, 5.0 / 35.0, S_SNAKE_ATK7) { A_FaceTarget(); }
	S_SNAKE_ATK7('SNKE', 5, 'monsters/snake/base.md2', 16, 5.0 / 35.0, S_SNAKE_ATK8) { A_FaceTarget(); }
	S_SNAKE_ATK8('SNKE', 5, 'monsters/snake/base.md2', 17, 5.0 / 35.0, S_SNAKE_ATK9) { A_FaceTarget(); }
	S_SNAKE_ATK9('SNKE', 5, 'monsters/snake/base.md2', 18, 4.0 / 35.0, S_SNAKE_WALK1) { A_SnakeAttack2(); }
	S_SNAKE_PAIN1('SNKE', 4, 'monsters/snake/base.md2', 19, 3.0 / 35.0, S_SNAKE_PAIN2) { }
	S_SNAKE_PAIN2('SNKE', 4, 'monsters/snake/base.md2', 20, 3.0 / 35.0, S_SNAKE_WALK1) { A_Pain(); }
	S_SNAKE_DIE1('SNKE', 6, 'monsters/snake/death.md2', 0, 5.0 / 35.0, S_SNAKE_DIE2) { }
	S_SNAKE_DIE2('SNKE', 7, 'monsters/snake/death.md2', 1, 5.0 / 35.0, S_SNAKE_DIE3) { A_Scream(); }
	S_SNAKE_DIE3('SNKE', 8, 'monsters/snake/death.md2', 2, 5.0 / 35.0, S_SNAKE_DIE4) { }
	S_SNAKE_DIE4('SNKE', 9, 'monsters/snake/death.md2', 3, 5.0 / 35.0, S_SNAKE_DIE5) { }
	S_SNAKE_DIE5('SNKE', 10, 'monsters/snake/death.md2', 4, 5.0 / 35.0, S_SNAKE_DIE6) { }
	S_SNAKE_DIE6('SNKE', 11, 'monsters/snake/death.md2', 5, 5.0 / 35.0, S_SNAKE_DIE7) { }
	S_SNAKE_DIE7('SNKE', 12, 'monsters/snake/death.md2', 6, 5.0 / 35.0, S_SNAKE_DIE8) { A_NoBlocking(); }
	S_SNAKE_DIE8('SNKE', 13, 'monsters/snake/death.md2', 7, 5.0 / 35.0, S_SNAKE_DIE9) { }
	S_SNAKE_DIE9('SNKE', 14, 'monsters/snake/death.md2', 8, 5.0 / 35.0, S_SNAKE_DIE10) { }
	S_SNAKE_DIE10('SNKE', 15, 'monsters/snake/death.md2', 9, -1.0, S_NULL) { }
}

defaultproperties
{
	Health = 280;
	Radius = 22.0;
	Height = 70.0;
	Mass = 100.0;
	StepSpeed = 10.0;
	PainChance = 0.1875;
	IdleState = S_SNAKE_LOOK1;
	SeeState = S_SNAKE_WALK1;
	MissileState = S_SNAKE_ATK1;
	PainState = S_SNAKE_PAIN1;
	DeathState = S_SNAKE_DIE1;
	SightSound = 'snake/sight';
	ActiveSound = 'snake/active';
	AttackSound = 'snake/attack';
	PainSound = 'snake/pain';
	DeathSound = 'snake/death';
}

//**************************************************************************
//
//  $Log$
//  Revision 1.4  2006/02/15 23:33:11  dj_jl
//  Moved all server progs global variables to classes.
//
//  Revision 1.3  2005/11/18 23:36:50  dj_jl
//  Renamed sounds.
//
//  Revision 1.2  2005/06/16 17:46:39  dj_jl
//  Added model definitions.
//
//  Revision 1.1  2002/10/26 16:32:23  dj_jl
//  New style of defining classes.
//
//**************************************************************************
