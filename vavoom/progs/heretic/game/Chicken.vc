//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Chicken : Pawn
	__scriptid__(122);

//==========================================================================
//
//  UpdateChicken
//
//  Returns true if the chicken morphs.
//
//==========================================================================

bool UpdateChicken(int tics)
{
	Actor fog;
	class<Actor> moType;
	float oldAngle;
	EntityEx oldTarget;
	int oldSpecial;
	int oldTID;
	int oldArgs[5];
	Actor A;

	Special1 -= tics;
	if (Special1 > 0)
	{
		return false;
	}
	moType = SpecialCID;
	oldAngle = Angles.yaw;
	oldTarget = Target;
	oldSpecial = Special;
	oldTID = TID;
	oldArgs[0] = Args[0];
	oldArgs[1] = Args[1];
	oldArgs[2] = Args[2];
	oldArgs[3] = Args[3];
	oldArgs[4] = Args[4];
	UnlinkFromWorld();
	A = Spawn(moType, Origin);
	if (A.TestLocation() == false)
	{
		// Didn't fit
		A.Destroy();
		LinkToWorld();
		Special1 = 5 * 35;	// Next try in 5 seconds
		return false;
	}
	LinkToWorld();
	RemoveFromTIDList();
	SetState(FindState('FreeTargMobj'));
	A.Angles.yaw = oldAngle;
	A.Target = oldTarget;
	A.TID = oldTID;
	A.Special = oldSpecial;
	A.Args[0] = oldArgs[0];
	A.Args[1] = oldArgs[1];
	A.Args[2] = oldArgs[2];
	A.Args[3] = oldArgs[3];
	A.Args[4] = oldArgs[4];
	A.InsertIntoTIDList(oldTID);
	fog = Spawn(TeleportFog, A.Origin + vector(0.0, 0.0, TELEFOGHEIGHT));
	fog.PlaySound('misc/teleport', CHAN_VOICE);
	return true;
}

//==========================================================================
//
//  A_ChicLook
//
//==========================================================================

final void A_ChicLook()
{
	if (UpdateChicken(10))
	{
		return;
	}
	A_Look();
}

//==========================================================================
//
//  A_ChicChase
//
//==========================================================================

final void A_ChicChase()
{
	if (UpdateChicken(3))
	{
		return;
	}
	A_Chase();
}

//==========================================================================
//
//  A_ChicAttack
//
//==========================================================================

final void A_ChicAttack()
{
	if (UpdateChicken(18))
	{
		return;
	}
	if (!Target)
	{
		return;
	}
	if (CheckMeleeRange())
	{
		Target.Damage(self, self, 1 + (P_Random() & 1));
	}
}

//==========================================================================
//
//  A_ChicPain
//
//==========================================================================

final void A_ChicPain()
{
	if (UpdateChicken(10))
	{
		return;
	}
	PlaySound(PainSound, CHAN_VOICE);
}

states
{
Spawn:
	CHKN AB 10 A_ChicLook
	Loop
See:
	CHKN ABAB 3 A_ChicChase
	Loop
Melee:
	CHKN A 8 A_FaceTarget
	CHKN C 5 A_ChicAttack
	CHKN C 5
	Goto See
Pain:
	CHKN D 5 A_Feathers
	CHKN C 5 A_ChicPain
	Goto See
Death:
	CHKN E 6 A_Scream
	CHKN F 6 A_Feathers
	CHKN G 6
	CHKN H 6 A_NoBlocking
	CHKN IJK 6
	CHKN L -1
	Stop
}

defaultproperties
{
	Health = 10;
	Radius = 9.0;
	Height = 22.0;
	Mass = 40.0;
	StepSpeed = 4.0;
	PainChance = 0.78125;
	bDropOff = true;
	bWindThrust = true;
	bNoMorph = true;
	SightSound = 'chicken/sight';
	ActiveSound = 'chicken/active';
	AttackSound = 'chicken/attack';
	PainSound = 'chicken/pain';
	DeathSound = 'chicken/death';
}
