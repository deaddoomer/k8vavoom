//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Beast : Pawn
	__mobjinfo__(70)
	__scriptid__(3);

//==========================================================================
//
//	NoBlockingSet
//
//==========================================================================

void NoBlockingSet()
{
	DropItem(CrossbowAmmo, 10, 0.328125);
}

//==========================================================================
//
//  A_BeastAttack
//
//==========================================================================

final void A_BeastAttack()
{
	if (!Target)
	{
		return;
	}
	PlaySound(AttackSound, CHAN_WEAPON);
	if (CheckMeleeRange())
	{
		Target.Damage(self, self, HITDICE(3));
		return;
	}
	SpawnMissile(Target, BeastBall);
}

__states__
{
	S_BEAST_LOOK1('BEAS', 0, 10.0 / 35.0, S_BEAST_LOOK2) = A_Look
	S_BEAST_LOOK2('BEAS', 1, 10.0 / 35.0, S_BEAST_LOOK1) = A_Look
	S_BEAST_WALK1('BEAS', 0, 3.0 / 35.0, S_BEAST_WALK2) = A_Chase
	S_BEAST_WALK2('BEAS', 1, 3.0 / 35.0, S_BEAST_WALK3) = A_Chase
	S_BEAST_WALK3('BEAS', 2, 3.0 / 35.0, S_BEAST_WALK4) = A_Chase
	S_BEAST_WALK4('BEAS', 3, 3.0 / 35.0, S_BEAST_WALK5) = A_Chase
	S_BEAST_WALK5('BEAS', 4, 3.0 / 35.0, S_BEAST_WALK6) = A_Chase
	S_BEAST_WALK6('BEAS', 5, 3.0 / 35.0, S_BEAST_WALK1) = A_Chase
	S_BEAST_ATK1('BEAS', 7, 10.0 / 35.0, S_BEAST_ATK2) = A_FaceTarget
	S_BEAST_ATK2('BEAS', 8, 10.0 / 35.0, S_BEAST_WALK1) = A_BeastAttack
	S_BEAST_PAIN1('BEAS', 6, 3.0 / 35.0, S_BEAST_PAIN2) = none
	S_BEAST_PAIN2('BEAS', 6, 3.0 / 35.0, S_BEAST_WALK1) = A_Pain
	S_BEAST_DIE1('BEAS', 17, 6.0 / 35.0, S_BEAST_DIE2) = none
	S_BEAST_DIE2('BEAS', 18, 6.0 / 35.0, S_BEAST_DIE3) = A_Scream
	S_BEAST_DIE3('BEAS', 19, 6.0 / 35.0, S_BEAST_DIE4) = none
	S_BEAST_DIE4('BEAS', 20, 6.0 / 35.0, S_BEAST_DIE5) = none
	S_BEAST_DIE5('BEAS', 21, 6.0 / 35.0, S_BEAST_DIE6) = none
	S_BEAST_DIE6('BEAS', 22, 6.0 / 35.0, S_BEAST_DIE7) = A_NoBlocking
	S_BEAST_DIE7('BEAS', 23, 6.0 / 35.0, S_BEAST_DIE8) = none
	S_BEAST_DIE8('BEAS', 24, 6.0 / 35.0, S_BEAST_DIE9) = none
	S_BEAST_DIE9('BEAS', 25, -1.0, none) = none
	S_BEAST_XDIE1('BEAS', 9, 5.0 / 35.0, S_BEAST_XDIE2) = none
	S_BEAST_XDIE2('BEAS', 10, 6.0 / 35.0, S_BEAST_XDIE3) = A_Scream
	S_BEAST_XDIE3('BEAS', 11, 5.0 / 35.0, S_BEAST_XDIE4) = none
	S_BEAST_XDIE4('BEAS', 12, 6.0 / 35.0, S_BEAST_XDIE5) = none
	S_BEAST_XDIE5('BEAS', 13, 5.0 / 35.0, S_BEAST_XDIE6) = none
	S_BEAST_XDIE6('BEAS', 14, 6.0 / 35.0, S_BEAST_XDIE7) = A_NoBlocking
	S_BEAST_XDIE7('BEAS', 15, 5.0 / 35.0, S_BEAST_XDIE8) = none
	S_BEAST_XDIE8('BEAS', 16, -1.0, none) = none
}

defaultproperties
{
	Health = 220;
	GibsHealth = -110;
	Radius = 32.0;
	Height = 74.0;
	Mass = 200.0;
	StepSpeed = 14.0;
	PainChance = 0.390625;
	IdleState = S_BEAST_LOOK1;
	SeeState = S_BEAST_WALK1;
	MissileState = S_BEAST_ATK1;
	PainState = S_BEAST_PAIN1;
	DeathState = S_BEAST_DIE1;
	GibsDeathState = S_BEAST_XDIE1;
	SightSound = 'beast/sight';
	ActiveSound = 'beast/active';
	AttackSound = 'beast/attack';
	PainSound = 'beast/pain';
	DeathSound = 'beast/death';
}
