//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

enum
{
	MB_None,
	MB_Shareware,
	MB_Control,
	MB_Quit
};

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

void SharewareResponse(int key);
void ControlResponse(int key);
void QuitResponse(int ch);

// DATA DECLARATIONS -------------------------------------------------------

//
//  MESSAGE BOX
//
boolean messageToPrint;
int msgBoxX;
int msgBoxY;
int msgBoxW;
int msgBoxH;
int messageString[256 / 4];	// ...and here is the message string!
boolean messageNeedsInput;	// timed message = no input from user
int messageType;

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  MB_StartMessage
//
//==========================================================================

void MB_StartMessage(string text, int type, boolean input)
{
	messageToPrint = true;
	strcpy(ARR2STR(messageString), text);
	messageType = type;
	messageNeedsInput = input;

	T_SetFont(font_small);
	msgBoxW = (T_TextWidth(ARR2STR(messageString)) + 16) & ~15;
	msgBoxH = (T_TextHeight(ARR2STR(messageString)) + 16) & ~15;
	if (msgBoxW > 304)
		msgBoxW = 304;
	if (msgBoxH > 184)
		msgBoxH = 184;
	msgBoxX = (320 - msgBoxW) / 2;
	msgBoxY = (200 - msgBoxH) / 2;

	CmdBuf_AddText("HideConsole\n");
}

//==========================================================================
//
//  MB_Drawer
//
//==========================================================================

void MB_Drawer(void)
{
	// Horiz. & Vertically center string and print it.
	if (messageToPrint)
	{
		R_FillRectWithFlat(msgBoxX, msgBoxY, msgBoxW, msgBoxH, "FLOOR04");
		DrawBorder(msgBoxX, msgBoxY, msgBoxW, msgBoxH);
		T_SetFont(font_small);
		T_SetAlign(hcenter, vcenter);
		T_DrawText(160, 100, ARR2STR(messageString));
	}
}

//==========================================================================
//
//  MB_Responder
//
//==========================================================================

boolean MB_Responder(event_t * event)
{
	// Take care of any messages that need input
	if (messageToPrint && event->type == ev_keydown)
	{
		if (messageNeedsInput &&
			event->data1 != K_SPACE &&
			event->data1 != K_n &&
			event->data1 != K_y &&
			event->data1 != K_ESCAPE &&
			event->data1 != K_MOUSE1 && event->data1 != K_MOUSE2)
		{
			return true;
		}

		messageToPrint = false;
		switch (messageType)
		{
		case MB_None:
			break;
		case MB_Shareware:
			SharewareResponse(event->data1);
			break;
		case MB_Control:
			ControlResponse(event->data1);
			break;
		case MB_Quit:
			QuitResponse(event->data1);
			break;
		}

//      S_StartSound(sfx1_swtchx);
		return true;
	}
	return false;
}

//==========================================================================
//
//  MB_Active
//
//==========================================================================

boolean MB_Active(void)
{
	return messageToPrint;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.6  2002/03/09 17:52:52  dj_jl
//  Got rid of function pointers
//
//  Revision 1.5  2002/01/07 12:23:17  dj_jl
//  Changed copyright year
//
//  Revision 1.4  2001/12/12 19:14:11  dj_jl
//  Removed support for ASCII character constants
//
//  Revision 1.3  2001/10/09 17:32:48  dj_jl
//  Made message box close console
//
//  Revision 1.2  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.1  2001/08/29 17:46:25  dj_jl
//  Moved view border and message box to progs
//  
//**************************************************************************
