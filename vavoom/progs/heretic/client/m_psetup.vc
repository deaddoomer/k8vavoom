//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**    Player setup
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

class MenuScreenPlayerSetup:MenuScreen
{
	menuinputline_t Name;
	menuswitch_t color;
	menuspriteanim_t anim;
	menutext_t title;

	defaultproperties
	{
	}
}

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

MenuScreenPlayerSetup PSetupMenu;

string sw_colors[] =
	{ "green", "yellow", "red", "blue", "white", "gray", "brown",
	"light green"
};

// CODE --------------------------------------------------------------------

void SetColor(void)
{
	PSetupMenu.anim.translation = PSetupMenu.color.value;
}

void psetup_func(menucommon_t * item, int msg)
{
	if (msg != MMSG_ACTIVATE)
	{
		return;
	}

	switch (item->id)
	{
	case 1:
		SetCvarS("Name", ARR2STR(PSetupMenu.Name.value));
		break;

	case 2:
		SetCvar("color", PSetupMenu.color.value);
		SetColor();
		break;
	}
}

void menu_psetup(void)
{
	int x = 16;
	int y = 40;

	PSetupMenu = MenuScreenPlayerSetup(SpawnMenu(MenuScreenPlayerSetup));

	MenuInputLine_Init(&PSetupMenu.Name, x, y, "Name", TEXT_SMALLL, 1);
	PSetupMenu.Name.callback = psetup_func;
	PSetupMenu.Name.id = 1;
	strcpy(ARR2STR(PSetupMenu.Name.value), GetCvarS("Name"));
	MenuItemWrapper(PSetupMenu.AddItem(MenuItemWrapper)).item = &PSetupMenu.Name;
	y += 20;

	MenuSwitch_Init(&PSetupMenu.color, x, y, "Color", TEXT_SMALLL,
		GetCvar("color"), 8, &sw_colors[0]);
	PSetupMenu.color.callback = psetup_func;
	PSetupMenu.color.id = 2;
	MenuItemWrapper(PSetupMenu.AddItem(MenuItemWrapper)).item = &PSetupMenu.color;
	y += 10;

	R_InstallSprite("PLAY", 500);

	MenuSpriteAnim_Init(&PSetupMenu.anim, 200, 120, 500, 8, 4);
	SetColor();
	MenuItemWrapper(PSetupMenu.AddItem(MenuItemWrapper)).item = &PSetupMenu.anim;

	MenuText_InitTitle(&PSetupMenu.title, 160, 24, "PLAYER SETUP", TEXT_BIGC);
	MenuItemWrapper(PSetupMenu.AddItem(MenuItemWrapper)).item = &PSetupMenu.title;

	PushMenuScreen(PSetupMenu);
}

//**************************************************************************
//
//  $Log$
//  Revision 1.7  2002/01/21 18:21:32  dj_jl
//  Working on object-oriented menus
//
//  Revision 1.6  2002/01/11 08:03:12  dj_jl
//  Renamed 'name' to "Name'
//
//  Revision 1.5  2002/01/07 12:23:17  dj_jl
//  Changed copyright year
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/09/20 16:19:59  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
