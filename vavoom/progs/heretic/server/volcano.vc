//**************************************************************************
//**
//**	##   ##    ##    ##   ##   ####     ####   ###     ###
//**	##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**	 ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**	 ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**	  ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**	   #    ##    ##    #      ####     ####   ##       ##
//**
//**	$Id$
//**
//**	Copyright (C) 1999-2001 JÆnis Legzdi·ý
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//==========================================================================
//
//	A_VolcanoSet
//
//==========================================================================

void A_VolcanoSet(mobj_t* volcano)
{
	volcano->time = 3.0 + Random() * 3.5;
}

//==========================================================================
//
//	A_VolcanoBlast
//
//==========================================================================

void A_VolcanoBlast(mobj_t* volcano)
{
	int 	i;
	int 	count;
	mobj_t*	blast;
	angle_t	angle;

	count = 1 + (P_Random() % 3);
	for (i = 0; i < count; i++)
	{
		blast = P_SpawnMobj(volcano->origin.x, volcano->origin.y,
			volcano->origin.z + 44.0, MT_VOLCANOBLAST); // MT_VOLCANOBLAST
		blast->target = volcano;
		angle = P_Random() << 24;
		blast->angles.yaw = angle;
		blast->velocity.x = cos(angle) * 35.0;
		blast->velocity.y = sin(angle) * 35.0;
		blast->velocity.z = (2.5 + Random() * 4.0) * 35.0;
		StartSoundName(blast, "VolcanoBlast", CHAN_VOICE);
		CheckMissileSpawn(blast);
	}
}

//==========================================================================
//
//	A_VolcBallImpact
//
//==========================================================================

void A_VolcBallImpact(mobj_t* ball)
{
	int 	i;
	mobj_t*	tiny;
	angle_t	angle;

	if (ball->origin.z <= ball->floorz)
	{
		ball->flags |= MF_NOGRAVITY;
		ball->flags2 &= ~MF2_LOGRAV;
		ball->origin.z += 28.0;
	}
	P_RadiusAttack(ball, ball->target, 25, 0, 0);
	for (i = 0; i < 4; i++)
	{
		tiny = P_SpawnMobj(ball->origin.x, ball->origin.y, ball->origin.z, MT_VOLCANOTBLAST);
		tiny->target = ball;
		angle = i * ANG90;
		tiny->angles.yaw = angle;
		tiny->velocity.x = 0.7 * cos(angle) * 35.0;
		tiny->velocity.y = 0.7 * sin(angle) * 35.0;
		tiny->velocity.z = (1.0 + Random() * 2.0) * 35.0;
		CheckMissileSpawn(tiny);
	}
}

//**************************************************************************
//
//	$Log$
//	Revision 1.3  2001/08/29 17:42:13  dj_jl
//	Added sound channel
//
//	Revision 1.2  2001/07/27 14:27:52  dj_jl
//	Update with Id-s and Log-s, some fixes
//
//**************************************************************************
