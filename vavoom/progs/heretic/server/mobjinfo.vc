//**************************************************************************
//**
//**	##   ##    ##    ##   ##   ####     ####   ###     ###
//**	##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**	 ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**	 ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**	  ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**	   #    ##    ##    #      ####     ####   ##       ##
//**
//**	$Id$
//**
//**	Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**	Mobj info table
//**
//**	Generated by makeinfo.
//**
//**************************************************************************

//==========================================================================
//
//	MT_MISC0
//
//==========================================================================

class MT_MISC0:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ITEM_PTN1_1;
	}
};

//==========================================================================
//
//	MT_ITEMSHIELD1
//
//==========================================================================

class MT_ITEMSHIELD1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ITEM_SHLD1;
	}
};

//==========================================================================
//
//	MT_ITEMSHIELD2
//
//==========================================================================

class MT_ITEMSHIELD2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ITEM_SHD2_1;
	}
};

//==========================================================================
//
//	MT_MISC1
//
//==========================================================================

class MT_MISC1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ITEM_BAGH1;
	}
};

//==========================================================================
//
//	MT_MISC2
//
//==========================================================================

class MT_MISC2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ITEM_SPMP1;
	}
};

//==========================================================================
//
//	MT_ARTIINVISIBILITY
//
//==========================================================================

class MT_ARTIINVISIBILITY:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ARTI_INVS1;
	}
};

//==========================================================================
//
//	MT_MISC3
//
//==========================================================================

class MT_MISC3:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ARTI_PTN2_1;
	}
};

//==========================================================================
//
//	MT_ARTIFLY
//
//==========================================================================

class MT_ARTIFLY:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ARTI_SOAR1;
	}
};

//==========================================================================
//
//	MT_ARTIINVULNERABILITY
//
//==========================================================================

class MT_ARTIINVULNERABILITY:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ARTI_INVU1;
	}
};

//==========================================================================
//
//	MT_ARTITOMEOFPOWER
//
//==========================================================================

class MT_ARTITOMEOFPOWER:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ARTI_PWBK1;
	}
};

//==========================================================================
//
//	MT_ARTIEGG
//
//==========================================================================

class MT_ARTIEGG:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ARTI_EGGC1;
	}
};

//==========================================================================
//
//	MT_EGGFX
//
//==========================================================================

class MT_EGGFX:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 630.0;
		ReactionCount = 8;
		MissileDamage = 1;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_EGGFX1;
		DeathState = S_EGGFXI1_1;
	}
};

//==========================================================================
//
//	MT_ARTISUPERHEAL
//
//==========================================================================

class MT_ARTISUPERHEAL:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ARTI_SPHL1;
	}
};

//==========================================================================
//
//	MT_MISC4
//
//==========================================================================

class MT_MISC4:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ARTI_TRCH1;
	}
};

//==========================================================================
//
//	MT_MISC5
//
//==========================================================================

class MT_MISC5:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ARTI_FBMB1;
	}
};

//==========================================================================
//
//	MT_FIREBOMB
//
//==========================================================================

class MT_FIREBOMB:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOGRAVITY;
		SpawnState = S_FIREBOMB1;
		DeathSound = 'PhoenixHit';
	}
};

//==========================================================================
//
//	MT_ARTITELEPORT
//
//==========================================================================

class MT_ARTITELEPORT:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL|MF_COUNTITEM;
		Flags2 = MF2_FLOATBOB;
		SpawnState = S_ARTI_ATLP1;
	}
};

//==========================================================================
//
//	MT_POD
//
//==========================================================================

class MT_POD:Actor
{
	defaultproperties
	{
		Health = 45;
		Radius = 16.0;
		Height = 54.0;
		Mass = 100.0;
		ReactionCount = 8;
		PainChance = 255;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_NOBLOOD;
		Flags2 = MF2_WINDTHRUST|MF2_PUSHABLE|MF2_SLIDE|MF2_PASSMOBJ|MF2_TELESTOMP;
		SpawnState = S_POD_WAIT1;
		PainState = S_POD_PAIN1;
		DeathState = S_POD_DIE1;
		DeathSound = 'PodExplode';
	}
};

//==========================================================================
//
//	MT_PODGOO
//
//==========================================================================

class MT_PODGOO:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 2.0;
		Height = 4.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_LOGRAV|MF2_NOTELEPORT|MF2_CANNOTPUSH;
		SpawnState = S_PODGOO1;
		DeathState = S_PODGOOX;
	}
};

//==========================================================================
//
//	MT_PODGENERATOR
//
//==========================================================================

class MT_PODGENERATOR:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOSECTOR|MF_NOBLOCKMAP;
		SpawnState = S_PODGENERATOR;
	}
};

//==========================================================================
//
//	MT_SPLASH
//
//==========================================================================

class MT_SPLASH:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 2.0;
		Height = 4.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_LOGRAV|MF2_NOTELEPORT|MF2_CANNOTPUSH;
		SpawnState = S_SPLASH1;
		DeathState = S_SPLASHX;
	}
};

//==========================================================================
//
//	MT_SPLASHBASE
//
//==========================================================================

class MT_SPLASHBASE:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP;
		SpawnState = S_SPLASHBASE1;
	}
};

//==========================================================================
//
//	MT_LAVASPLASH
//
//==========================================================================

class MT_LAVASPLASH:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP;
		SpawnState = S_LAVASPLASH1;
	}
};

//==========================================================================
//
//	MT_LAVASMOKE
//
//==========================================================================

class MT_LAVASMOKE:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_LAVASMOKE1;
	}
};

//==========================================================================
//
//	MT_SLUDGECHUNK
//
//==========================================================================

class MT_SLUDGECHUNK:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 2.0;
		Height = 4.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_LOGRAV|MF2_NOTELEPORT|MF2_CANNOTPUSH;
		SpawnState = S_SLUDGECHUNK1;
		DeathState = S_SLUDGECHUNKX;
	}
};

//==========================================================================
//
//	MT_SLUDGESPLASH
//
//==========================================================================

class MT_SLUDGESPLASH:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP;
		SpawnState = S_SLUDGESPLASH1;
	}
};

//==========================================================================
//
//	MT_SKULLHANG70
//
//==========================================================================

class MT_SKULLHANG70:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 70.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_SKULLHANG70_1;
	}
};

//==========================================================================
//
//	MT_SKULLHANG60
//
//==========================================================================

class MT_SKULLHANG60:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 60.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_SKULLHANG60_1;
	}
};

//==========================================================================
//
//	MT_SKULLHANG45
//
//==========================================================================

class MT_SKULLHANG45:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 45.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_SKULLHANG45_1;
	}
};

//==========================================================================
//
//	MT_SKULLHANG35
//
//==========================================================================

class MT_SKULLHANG35:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 35.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_SKULLHANG35_1;
	}
};

//==========================================================================
//
//	MT_CHANDELIER
//
//==========================================================================

class MT_CHANDELIER:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 60.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_CHANDELIER1;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLight(origin,
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
	}
};

//==========================================================================
//
//	MT_SERPTORCH
//
//==========================================================================

class MT_SERPTORCH:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 12.0;
		Height = 54.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_SERPTORCH1;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 128.0);
	}
};

//==========================================================================
//
//	MT_SMALLPILLAR
//
//==========================================================================

class MT_SMALLPILLAR:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 34.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_SMALLPILLAR;
	}
};

//==========================================================================
//
//	MT_STALAGMITESMALL
//
//==========================================================================

class MT_STALAGMITESMALL:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 32.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_STALAGMITESMALL;
	}
};

//==========================================================================
//
//	MT_STALAGMITELARGE
//
//==========================================================================

class MT_STALAGMITELARGE:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 12.0;
		Height = 64.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_STALAGMITELARGE;
	}
};

//==========================================================================
//
//	MT_STALACTITESMALL
//
//==========================================================================

class MT_STALACTITESMALL:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 36.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_STALACTITESMALL;
	}
};

//==========================================================================
//
//	MT_STALACTITELARGE
//
//==========================================================================

class MT_STALACTITELARGE:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 12.0;
		Height = 68.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_STALACTITELARGE;
	}
};

//==========================================================================
//
//	MT_MISC6
//
//==========================================================================

class MT_MISC6:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 44.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_FIREBRAZIER1;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
	}
};

//==========================================================================
//
//	MT_BARREL
//
//==========================================================================

class MT_BARREL:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 12.0;
		Height = 32.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_BARREL;
	}
};

//==========================================================================
//
//	MT_MISC7
//
//==========================================================================

class MT_MISC7:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 14.0;
		Height = 128.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_BRPILLAR;
	}
};

//==========================================================================
//
//	MT_MISC8
//
//==========================================================================

class MT_MISC8:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 23.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_MOSS1;
	}
};

//==========================================================================
//
//	MT_MISC9
//
//==========================================================================

class MT_MISC9:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 27.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_MOSS2;
	}
};

//==========================================================================
//
//	MT_MISC10
//
//==========================================================================

class MT_MISC10:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOGRAVITY;
		SpawnState = S_WALLTORCH1;
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 80.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
	}
};

//==========================================================================
//
//	MT_MISC11
//
//==========================================================================

class MT_MISC11:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 104.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		SpawnState = S_HANGINGCORPSE;
	}
};

//==========================================================================
//
//	MT_KEYGIZMOBLUE
//
//==========================================================================

class MT_KEYGIZMOBLUE:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 50.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_KEYGIZMO1;
	}
};

//==========================================================================
//
//	MT_KEYGIZMOGREEN
//
//==========================================================================

class MT_KEYGIZMOGREEN:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 50.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_KEYGIZMO1;
	}
};

//==========================================================================
//
//	MT_KEYGIZMOYELLOW
//
//==========================================================================

class MT_KEYGIZMOYELLOW:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 50.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_KEYGIZMO1;
	}
};

//==========================================================================
//
//	MT_KEYGIZMOFLOAT
//
//==========================================================================

class MT_KEYGIZMOFLOAT:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID|MF_NOGRAVITY;
		SpawnState = S_KGZ_START;
	}
};

//==========================================================================
//
//	MT_MISC12
//
//==========================================================================

class MT_MISC12:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 12.0;
		Height = 20.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SOLID;
		SpawnState = S_VOLCANO1;
	}
};

//==========================================================================
//
//	MT_VOLCANOBLAST
//
//==========================================================================

class MT_VOLCANOBLAST:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 70.0;
		ReactionCount = 8;
		MissileDamage = 2;
		Flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_LOGRAV|MF2_NOTELEPORT|MF2_FIREDAMAGE;
		SpawnState = S_VOLCANOBALL1;
		DeathState = S_VOLCANOBALLX1;
		DeathSound = 'VolcanoHit';
		Effects = EF_DL_RED;
	}
};

//==========================================================================
//
//	MT_VOLCANOTBLAST
//
//==========================================================================

class MT_VOLCANOTBLAST:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 70.0;
		ReactionCount = 8;
		MissileDamage = 1;
		Flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_LOGRAV|MF2_NOTELEPORT|MF2_FIREDAMAGE;
		SpawnState = S_VOLCANOTBALL1;
		DeathState = S_VOLCANOTBALLX1;
		Effects = EF_DL_RED;
	}
};

//==========================================================================
//
//	MT_TELEGLITGEN
//
//==========================================================================

class MT_TELEGLITGEN:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOSECTOR|MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_TELEGLITGEN1;
	}
};

//==========================================================================
//
//	MT_TELEGLITGEN2
//
//==========================================================================

class MT_TELEGLITGEN2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOSECTOR|MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_TELEGLITGEN2;
	}
};

//==========================================================================
//
//	MT_TELEGLITTER
//
//==========================================================================

class MT_TELEGLITTER:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_MISSILE;
		SpawnState = S_TELEGLITTER1_1;
	}
};

//==========================================================================
//
//	MT_TELEGLITTER2
//
//==========================================================================

class MT_TELEGLITTER2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_MISSILE;
		SpawnState = S_TELEGLITTER2_1;
	}
};

//==========================================================================
//
//	MT_TFOG
//
//==========================================================================

class MT_TFOG:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_TFOG1;
	}
};

//==========================================================================
//
//	MT_TELEPORTMAN
//
//==========================================================================

class MT_TELEPORTMAN:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOSECTOR|MF_NOBLOCKMAP;
	}
};

//==========================================================================
//
//	MT_STAFFPUFF
//
//==========================================================================

class MT_STAFFPUFF:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_STAFFPUFF1;
		AttackSound = 'StaffHit';
	}
};

//==========================================================================
//
//	MT_STAFFPUFF2
//
//==========================================================================

class MT_STAFFPUFF2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_STAFFPUFF2_1;
		AttackSound = 'StaffHit2';
	}
};

//==========================================================================
//
//	MT_BEAKPUFF
//
//==========================================================================

class MT_BEAKPUFF:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_STAFFPUFF1;
		AttackSound = 'ChickenAttack';
	}
};

//==========================================================================
//
//	MT_MISC13
//
//==========================================================================

class MT_MISC13:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_WGNT;
	}
};

//==========================================================================
//
//	MT_GAUNTLETPUFF1
//
//==========================================================================

class MT_GAUNTLETPUFF1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_GAUNTLETPUFF1_1;
	}
};

//==========================================================================
//
//	MT_GAUNTLETPUFF2
//
//==========================================================================

class MT_GAUNTLETPUFF2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_GAUNTLETPUFF2_1;
	}
};

//==========================================================================
//
//	MT_MISC14
//
//==========================================================================

class MT_MISC14:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_BLSR;
	}
};

//==========================================================================
//
//	MT_BLASTERFX1
//
//==========================================================================

class MT_BLASTERFX1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 12.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 6440.0;
		ReactionCount = 8;
		MissileDamage = 2;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_BLASTERFX1_1;
		DeathState = S_BLASTERFXI1_1;
		DeathSound = 'BlasterHit';
		Effects = EF_DL_BLUE;
	}
};

//==========================================================================
//
//	MT_BLASTERSMOKE
//
//==========================================================================

class MT_BLASTERSMOKE:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		Flags2 = MF2_NOTELEPORT|MF2_CANNOTPUSH;
		SpawnState = S_BLASTERSMOKE1;
	}
};

//==========================================================================
//
//	MT_RIPPER
//
//==========================================================================

class MT_RIPPER:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 490.0;
		ReactionCount = 8;
		MissileDamage = 1;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT|MF2_RIP;
		SpawnState = S_RIPPER1;
		DeathState = S_RIPPERX1;
		DeathSound = 'SkullRodHit';
	}
};

//==========================================================================
//
//	MT_BLASTERPUFF1
//
//==========================================================================

class MT_BLASTERPUFF1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_BLASTERPUFF1_1;
	}
};

//==========================================================================
//
//	MT_BLASTERPUFF2
//
//==========================================================================

class MT_BLASTERPUFF2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_BLASTERPUFF2_1;
	}
};

//==========================================================================
//
//	MT_WMACE
//
//==========================================================================

class MT_WMACE:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_WMCE;
	}
};

//==========================================================================
//
//	MT_MACEFX1
//
//==========================================================================

class MT_MACEFX1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 700.0;
		ReactionCount = 8;
		MissileDamage = 2;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_FLOORBOUNCE|MF2_THRUGHOST|MF2_NOTELEPORT;
		SpawnState = S_MACEFX1_1;
		DeathState = S_MACEFXI1_1;
		SightSound = 'MaceFire';
	}
};

//==========================================================================
//
//	MT_MACEFX2
//
//==========================================================================

class MT_MACEFX2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 350.0;
		ReactionCount = 8;
		MissileDamage = 6;
		Flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_LOGRAV|MF2_FLOORBOUNCE|MF2_THRUGHOST|MF2_NOTELEPORT;
		SpawnState = S_MACEFX2_1;
		DeathState = S_MACEFXI2_1;
	}
};

//==========================================================================
//
//	MT_MACEFX3
//
//==========================================================================

class MT_MACEFX3:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 245.0;
		ReactionCount = 8;
		MissileDamage = 4;
		Flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_LOGRAV|MF2_FLOORBOUNCE|MF2_THRUGHOST|MF2_NOTELEPORT;
		SpawnState = S_MACEFX3_1;
		DeathState = S_MACEFXI1_1;
	}
};

//==========================================================================
//
//	MT_MACEFX4
//
//==========================================================================

class MT_MACEFX4:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 245.0;
		ReactionCount = 8;
		MissileDamage = 18;
		Flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_LOGRAV|MF2_FLOORBOUNCE|MF2_THRUGHOST|MF2_TELESTOMP;
		SpawnState = S_MACEFX4_1;
		DeathState = S_MACEFXI4_1;
	}
};

//==========================================================================
//
//	MT_WSKULLROD
//
//==========================================================================

class MT_WSKULLROD:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_WSKL;
	}
};

//==========================================================================
//
//	MT_HORNRODFX1
//
//==========================================================================

class MT_HORNRODFX1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 12.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 770.0;
		ReactionCount = 8;
		MissileDamage = 3;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_WINDTHRUST|MF2_NOTELEPORT;
		SpawnState = S_HRODFX1_1;
		DeathState = S_HRODFXI1_1;
		SightSound = 'SkullRodFire';
		DeathSound = 'SkullRodHit';
		Effects = EF_DL_RED;
	}
};

//==========================================================================
//
//	MT_HORNRODFX2
//
//==========================================================================

class MT_HORNRODFX2:Actor
{
	defaultproperties
	{
		Health = 140;
		Radius = 12.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 770.0;
		ReactionCount = 8;
		MissileDamage = 10;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_HRODFX2_1;
		DeathState = S_HRODFXI2_1;
		SightSound = 'SkullRodFire';
		DeathSound = 'SkullRodHit';
		Effects = EF_DL_RED;
	}
};

//==========================================================================
//
//	MT_RAINPLR1
//
//==========================================================================

class MT_RAINPLR1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 5.0;
		Height = 12.0;
		Mass = 100.0;
		Speed = 420.0;
		ReactionCount = 8;
		MissileDamage = 5;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_RAINPLR1_1;
		DeathState = S_RAINPLR1X_1;
	}
};

//==========================================================================
//
//	MT_RAINPLR2
//
//==========================================================================

class MT_RAINPLR2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 5.0;
		Height = 12.0;
		Mass = 100.0;
		Speed = 420.0;
		ReactionCount = 8;
		MissileDamage = 5;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_RAINPLR2_1;
		DeathState = S_RAINPLR2X_1;
	}
};

//==========================================================================
//
//	MT_RAINPLR3
//
//==========================================================================

class MT_RAINPLR3:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 5.0;
		Height = 12.0;
		Mass = 100.0;
		Speed = 420.0;
		ReactionCount = 8;
		MissileDamage = 5;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_RAINPLR3_1;
		DeathState = S_RAINPLR3X_1;
	}
};

//==========================================================================
//
//	MT_RAINPLR4
//
//==========================================================================

class MT_RAINPLR4:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 5.0;
		Height = 12.0;
		Mass = 100.0;
		Speed = 420.0;
		ReactionCount = 8;
		MissileDamage = 5;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_RAINPLR4_1;
		DeathState = S_RAINPLR4X_1;
	}
};

//==========================================================================
//
//	MT_GOLDWANDFX1
//
//==========================================================================

class MT_GOLDWANDFX1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 10.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 770.0;
		ReactionCount = 8;
		MissileDamage = 2;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_GWANDFX1_1;
		DeathState = S_GWANDFXI1_1;
		DeathSound = 'GoldWandFire';
		Effects = EF_DL_WHITE;
	}
};

//==========================================================================
//
//	MT_GOLDWANDFX2
//
//==========================================================================

class MT_GOLDWANDFX2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 10.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 630.0;
		ReactionCount = 8;
		MissileDamage = 1;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_GWANDFX2_1;
		DeathState = S_GWANDFXI1_1;
		Effects = EF_DL_WHITE;
	}
};

//==========================================================================
//
//	MT_GOLDWANDPUFF1
//
//==========================================================================

class MT_GOLDWANDPUFF1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_GWANDPUFF1_1;
	}
};

//==========================================================================
//
//	MT_GOLDWANDPUFF2
//
//==========================================================================

class MT_GOLDWANDPUFF2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_GWANDFXI1_1;
	}
};

//==========================================================================
//
//	MT_WPHOENIXROD
//
//==========================================================================

class MT_WPHOENIXROD:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_WPHX;
	}
};

//==========================================================================
//
//	MT_PHOENIXFX1
//
//==========================================================================

class MT_PHOENIXFX1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 11.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 700.0;
		ReactionCount = 8;
		MissileDamage = 20;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_THRUGHOST|MF2_NOTELEPORT;
		SpawnState = S_PHOENIXFX1_1;
		DeathState = S_PHOENIXFXI1_1;
		SightSound = 'PhoenixFire';
		DeathSound = 'PhoenixHit';
		Effects = EF_DL_RED;
	}
};

//==========================================================================
//
//	MT_PHOENIXPUFF
//
//==========================================================================

class MT_PHOENIXPUFF:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		Flags2 = MF2_NOTELEPORT|MF2_CANNOTPUSH;
		SpawnState = S_PHOENIXPUFF1;
	}
};

//==========================================================================
//
//	MT_PHOENIXFX2
//
//==========================================================================

class MT_PHOENIXFX2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 6.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 350.0;
		ReactionCount = 8;
		MissileDamage = 2;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT|MF2_FIREDAMAGE;
		SpawnState = S_PHOENIXFX2_1;
		DeathState = S_PHOENIXFXI2_1;
		Effects = EF_DL_WHITE;
	}
};

//==========================================================================
//
//	MT_MISC15
//
//==========================================================================

class MT_MISC15:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_WBOW;
	}
};

//==========================================================================
//
//	MT_CRBOWFX1
//
//==========================================================================

class MT_CRBOWFX1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 11.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 1050.0;
		ReactionCount = 8;
		MissileDamage = 10;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_CRBOWFX1;
		DeathState = S_CRBOWFXI1_1;
		SightSound = 'BowFire';
		DeathSound = 'SkullRodHit';
	}
};

//==========================================================================
//
//	MT_CRBOWFX2
//
//==========================================================================

class MT_CRBOWFX2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 11.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 1120.0;
		ReactionCount = 8;
		MissileDamage = 6;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_CRBOWFX2;
		DeathState = S_CRBOWFXI1_1;
		SightSound = 'BowFire';
		DeathSound = 'SkullRodHit';
		Effects = EF_DL_GREEN;
	}
};

//==========================================================================
//
//	MT_CRBOWFX3
//
//==========================================================================

class MT_CRBOWFX3:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 11.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 700.0;
		ReactionCount = 8;
		MissileDamage = 2;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_WINDTHRUST|MF2_THRUGHOST|MF2_NOTELEPORT;
		SpawnState = S_CRBOWFX3;
		DeathState = S_CRBOWFXI3_1;
		DeathSound = 'SkullRodHit';
		Effects = EF_DL_GREEN;
	}
};

//==========================================================================
//
//	MT_CRBOWFX4
//
//==========================================================================

class MT_CRBOWFX4:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP;
		Flags2 = MF2_LOGRAV;
		SpawnState = S_CRBOWFX4_1;
	}
};

//==========================================================================
//
//	MT_BLOOD
//
//==========================================================================

class MT_BLOOD:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP;
		SpawnState = S_BLOOD1;
	}
};

//==========================================================================
//
//	MT_BLOODSPLATTER
//
//==========================================================================

class MT_BLOODSPLATTER:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 2.0;
		Height = 4.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT|MF2_CANNOTPUSH;
		SpawnState = S_BLOODSPLATTER1;
		DeathState = S_BLOODSPLATTERX;
	}
};

//==========================================================================
//
//	MT_PLAYER
//
//==========================================================================

class MT_PLAYER:Actor
{
	defaultproperties
	{
		Health = 100;
		GibsHealth = -50;
		Radius = 16.0;
		Height = 56.0;
		Mass = 100.0;
		PainChance = 255;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_PICKUP;
		Flags2 = MF2_WINDTHRUST|MF2_FOOTCLIP|MF2_SLIDE|MF2_PASSMOBJ|MF2_TELESTOMP;
		SpawnState = S_PLAY;
		SeeState = S_PLAY_RUN1;
		MissileState = S_PLAY_ATK1;
		PainState = S_PLAY_PAIN;
		DeathState = S_PLAY_DIE1;
		GibsDeathState = S_PLAY_XDIE1;
		PainSound = 'PlayerPain';
		DeathSound = 'PlayerDeath';
	}
};

//==========================================================================
//
//	MT_BLOODYSKULL
//
//==========================================================================

class MT_BLOODYSKULL:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 4.0;
		Height = 4.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_DROPOFF;
		Flags2 = MF2_LOGRAV|MF2_CANNOTPUSH;
		SpawnState = S_BLOODYSKULL1;
	}
};

//==========================================================================
//
//	MT_CHICPLAYER
//
//==========================================================================

class MT_CHICPLAYER:Actor
{
	defaultproperties
	{
		Health = 100;
		Radius = 16.0;
		Height = 24.0;
		Mass = 100.0;
		PainChance = 255;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF;
		Flags2 = MF2_LOGRAV|MF2_WINDTHRUST|MF2_FOOTCLIP|MF2_SLIDE|MF2_PASSMOBJ|MF2_TELESTOMP;
		SpawnState = S_CHICPLAY;
		SeeState = S_CHICPLAY_RUN1;
		MissileState = S_CHICPLAY_ATK1;
		PainState = S_CHICPLAY_PAIN;
		DeathState = S_CHICKEN_DIE1;
		PainSound = 'ChickenPain';
		DeathSound = 'ChickenDeath';
	}
};

//==========================================================================
//
//	MT_CHICKEN
//
//==========================================================================

class MT_CHICKEN:Actor
{
	defaultproperties
	{
		Health = 10;
		Radius = 9.0;
		Height = 22.0;
		Mass = 40.0;
		Speed = 140.0;
		ReactionCount = 8;
		PainChance = 200;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_COUNTKILL;
		Flags2 = MF2_WINDTHRUST|MF2_FOOTCLIP|MF2_PASSMOBJ;
		SpawnState = S_CHICKEN_LOOK1;
		SeeState = S_CHICKEN_WALK1;
		MeleeState = S_CHICKEN_ATK1;
		PainState = S_CHICKEN_PAIN1;
		DeathState = S_CHICKEN_DIE1;
		SightSound = 'ChickenPain';
		ActiveSound = 'ChickenActive';
		AttackSound = 'ChickenAttack';
		PainSound = 'ChickenPain';
		DeathSound = 'ChickenDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_FEATHER
//
//==========================================================================

class MT_FEATHER:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 2.0;
		Height = 4.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_LOGRAV|MF2_WINDTHRUST|MF2_NOTELEPORT|MF2_CANNOTPUSH;
		SpawnState = S_FEATHER1;
		DeathState = S_FEATHERX;
	}
};

//==========================================================================
//
//	MT_MUMMY
//
//==========================================================================

class MT_MUMMY:Actor
{
	defaultproperties
	{
		Health = 80;
		Radius = 22.0;
		Height = 62.0;
		Mass = 75.0;
		Speed = 420.0;
		ReactionCount = 8;
		PainChance = 128;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		Flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		SpawnState = S_MUMMY_LOOK1;
		SeeState = S_MUMMY_WALK1;
		MeleeState = S_MUMMY_ATK1;
		PainState = S_MUMMY_PAIN1;
		DeathState = S_MUMMY_DIE1;
		SightSound = 'MumySight';
		ActiveSound = 'MumyActive';
		AttackSound = 'MumyAttack1';
		PainSound = 'MumyPain';
		DeathSound = 'MumyDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_MUMMYLEADER
//
//==========================================================================

class MT_MUMMYLEADER:Actor
{
	defaultproperties
	{
		Health = 100;
		Radius = 22.0;
		Height = 62.0;
		Mass = 75.0;
		Speed = 420.0;
		ReactionCount = 8;
		PainChance = 64;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		Flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		SpawnState = S_MUMMY_LOOK1;
		SeeState = S_MUMMY_WALK1;
		MeleeState = S_MUMMY_ATK1;
		MissileState = S_MUMMYL_ATK1;
		PainState = S_MUMMY_PAIN1;
		DeathState = S_MUMMY_DIE1;
		SightSound = 'MumySight';
		ActiveSound = 'MumyActive';
		AttackSound = 'MumyAttack1';
		PainSound = 'MumyPain';
		DeathSound = 'MumyDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_MUMMYGHOST
//
//==========================================================================

class MT_MUMMYGHOST:Actor
{
	defaultproperties
	{
		Health = 80;
		Radius = 22.0;
		Height = 62.0;
		Mass = 75.0;
		Speed = 420.0;
		ReactionCount = 8;
		PainChance = 128;
		Translucency = 33;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		Flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		SpawnState = S_MUMMY_LOOK1;
		SeeState = S_MUMMY_WALK1;
		MeleeState = S_MUMMY_ATK1;
		PainState = S_MUMMY_PAIN1;
		DeathState = S_MUMMY_DIE1;
		SightSound = 'MumySight';
		ActiveSound = 'MumyActive';
		AttackSound = 'MumyAttack1';
		PainSound = 'MumyPain';
		DeathSound = 'MumyDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_MUMMYLEADERGHOST
//
//==========================================================================

class MT_MUMMYLEADERGHOST:Actor
{
	defaultproperties
	{
		Health = 100;
		Radius = 22.0;
		Height = 62.0;
		Mass = 75.0;
		Speed = 420.0;
		ReactionCount = 8;
		PainChance = 64;
		Translucency = 33;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		Flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		SpawnState = S_MUMMY_LOOK1;
		SeeState = S_MUMMY_WALK1;
		MeleeState = S_MUMMY_ATK1;
		MissileState = S_MUMMYL_ATK1;
		PainState = S_MUMMY_PAIN1;
		DeathState = S_MUMMY_DIE1;
		SightSound = 'MumySight';
		ActiveSound = 'MumyActive';
		AttackSound = 'MumyAttack1';
		PainSound = 'MumyPain';
		DeathSound = 'MumyDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_MUMMYSOUL
//
//==========================================================================

class MT_MUMMYSOUL:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		SpawnState = S_MUMMY_SOUL1;
	}
};

//==========================================================================
//
//	MT_MUMMYFX1
//
//==========================================================================

class MT_MUMMYFX1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 14.0;
		Mass = 100.0;
		Speed = 315.0;
		ReactionCount = 8;
		MissileDamage = 4;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_MUMMYFX1_1;
		DeathState = S_MUMMYFXI1_1;
		Effects = EF_DL_WHITE;
	}
};

//==========================================================================
//
//	MT_BEAST
//
//==========================================================================

class MT_BEAST:Actor
{
	defaultproperties
	{
		Health = 220;
		GibsHealth = -110;
		Radius = 32.0;
		Height = 74.0;
		Mass = 200.0;
		Speed = 490.0;
		ReactionCount = 8;
		PainChance = 100;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		Flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		SpawnState = S_BEAST_LOOK1;
		SeeState = S_BEAST_WALK1;
		MissileState = S_BEAST_ATK1;
		PainState = S_BEAST_PAIN1;
		DeathState = S_BEAST_DIE1;
		GibsDeathState = S_BEAST_XDIE1;
		SightSound = 'BeastSight';
		ActiveSound = 'BeastActive';
		AttackSound = 'BeastAttack';
		PainSound = 'BeastPain';
		DeathSound = 'BeastDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_BEASTBALL
//
//==========================================================================

class MT_BEASTBALL:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 9.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 420.0;
		ReactionCount = 8;
		MissileDamage = 4;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_WINDTHRUST|MF2_NOTELEPORT;
		SpawnState = S_BEASTBALL1;
		DeathState = S_BEASTBALLX1;
		Effects = EF_DL_RED;
	}
};

//==========================================================================
//
//	MT_BURNBALL
//
//==========================================================================

class MT_BURNBALL:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 6.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 350.0;
		ReactionCount = 8;
		MissileDamage = 2;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_BURNBALL1;
		DeathState = S_BEASTBALLX1;
		Effects = EF_DL_RED;
	}
};

//==========================================================================
//
//	MT_BURNBALLFB
//
//==========================================================================

class MT_BURNBALLFB:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 6.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 350.0;
		ReactionCount = 8;
		MissileDamage = 2;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_BURNBALLFB1;
		DeathState = S_BEASTBALLX1;
		Effects = EF_DL_RED;
	}
};

//==========================================================================
//
//	MT_PUFFY
//
//==========================================================================

class MT_PUFFY:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 6.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 350.0;
		ReactionCount = 8;
		MissileDamage = 2;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_PUFFY1;
		DeathState = S_PUFFY1;
	}
};

//==========================================================================
//
//	MT_SNAKE
//
//==========================================================================

class MT_SNAKE:Actor
{
	defaultproperties
	{
		Health = 280;
		Radius = 22.0;
		Height = 70.0;
		Mass = 100.0;
		Speed = 350.0;
		ReactionCount = 8;
		PainChance = 48;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		Flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		SpawnState = S_SNAKE_LOOK1;
		SeeState = S_SNAKE_WALK1;
		MissileState = S_SNAKE_ATK1;
		PainState = S_SNAKE_PAIN1;
		DeathState = S_SNAKE_DIE1;
		SightSound = 'SnakeSight';
		ActiveSound = 'SnakeActive';
		AttackSound = 'SnakeAttack';
		PainSound = 'SnakePain';
		DeathSound = 'SnakeDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_SNAKEPRO_A
//
//==========================================================================

class MT_SNAKEPRO_A:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 12.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 490.0;
		ReactionCount = 8;
		MissileDamage = 1;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_WINDTHRUST|MF2_NOTELEPORT;
		SpawnState = S_SNAKEPRO_A1;
		DeathState = S_SNAKEPRO_AX1;
		Effects = EF_DL_MAGENTA;
	}
};

//==========================================================================
//
//	MT_SNAKEPRO_B
//
//==========================================================================

class MT_SNAKEPRO_B:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 12.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 490.0;
		ReactionCount = 8;
		MissileDamage = 3;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_SNAKEPRO_B1;
		DeathState = S_SNAKEPRO_BX1;
		Effects = EF_DL_WHITE;
	}
};

//==========================================================================
//
//	MT_HEAD
//
//==========================================================================

class MT_HEAD:Actor
{
	defaultproperties
	{
		Health = 700;
		Radius = 40.0;
		Height = 72.0;
		Mass = 325.0;
		Speed = 210.0;
		ReactionCount = 8;
		PainChance = 32;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_NOBLOOD|MF_COUNTKILL;
		Flags2 = MF2_PASSMOBJ;
		SpawnState = S_HEAD_LOOK;
		SeeState = S_HEAD_FLOAT;
		MissileState = S_HEAD_ATK1;
		PainState = S_HEAD_PAIN1;
		DeathState = S_HEAD_DIE1;
		SightSound = 'HeadSight';
		ActiveSound = 'HeadActive';
		AttackSound = 'HeadAttack1';
		PainSound = 'HeadPain';
		DeathSound = 'HeadDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_HEADFX1
//
//==========================================================================

class MT_HEADFX1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 12.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 455.0;
		ReactionCount = 8;
		MissileDamage = 1;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_THRUGHOST|MF2_NOTELEPORT;
		SpawnState = S_HEADFX1_1;
		DeathState = S_HEADFXI1_1;
		Effects = EF_DL_BLUE;
	}
};

//==========================================================================
//
//	MT_HEADFX2
//
//==========================================================================

class MT_HEADFX2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 12.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 280.0;
		ReactionCount = 8;
		MissileDamage = 3;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_HEADFX2_1;
		DeathState = S_HEADFXI2_1;
		Effects = EF_DL_BLUE;
	}
};

//==========================================================================
//
//	MT_HEADFX3
//
//==========================================================================

class MT_HEADFX3:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 14.0;
		Height = 12.0;
		Mass = 100.0;
		Speed = 350.0;
		ReactionCount = 8;
		MissileDamage = 5;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_WINDTHRUST|MF2_NOTELEPORT;
		SpawnState = S_HEADFX3_1;
		DeathState = S_HEADFXI3_1;
		Effects = EF_DL_WHITE;
	}
};

//==========================================================================
//
//	MT_WHIRLWIND
//
//==========================================================================

class MT_WHIRLWIND:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 16.0;
		Height = 74.0;
		Mass = 100.0;
		Speed = 350.0;
		ReactionCount = 8;
		MissileDamage = 1;
		Translucency = 33;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_HEADFX4_1;
		DeathState = S_HEADFXI4_1;
	}
};

//==========================================================================
//
//	MT_CLINK
//
//==========================================================================

class MT_CLINK:Actor
{
	defaultproperties
	{
		Health = 150;
		Radius = 20.0;
		Height = 64.0;
		Mass = 75.0;
		Speed = 490.0;
		ReactionCount = 8;
		PainChance = 32;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_NOBLOOD|MF_COUNTKILL;
		Flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		SpawnState = S_CLINK_LOOK1;
		SeeState = S_CLINK_WALK1;
		MeleeState = S_CLINK_ATK1;
		PainState = S_CLINK_PAIN1;
		DeathState = S_CLINK_DIE1;
		SightSound = 'ClinkSight';
		ActiveSound = 'ClinkActive';
		AttackSound = 'ClinkAttack';
		PainSound = 'ClinkPain';
		DeathSound = 'ClinkDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_WIZARD
//
//==========================================================================

class MT_WIZARD:Actor
{
	defaultproperties
	{
		Health = 180;
		Radius = 16.0;
		Height = 68.0;
		Mass = 100.0;
		Speed = 420.0;
		ReactionCount = 8;
		PainChance = 64;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_FLOAT|MF_COUNTKILL;
		Flags2 = MF2_PASSMOBJ;
		SpawnState = S_WIZARD_LOOK1;
		SeeState = S_WIZARD_WALK1;
		MissileState = S_WIZARD_ATK1;
		PainState = S_WIZARD_PAIN1;
		DeathState = S_WIZARD_DIE1;
		SightSound = 'WizardSight';
		ActiveSound = 'WizardActive';
		AttackSound = 'WizardAttack';
		PainSound = 'WizardPain';
		DeathSound = 'WizardDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_WIZFX1
//
//==========================================================================

class MT_WIZFX1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 10.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 630.0;
		ReactionCount = 8;
		MissileDamage = 3;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_WIZFX1_1;
		DeathState = S_WIZFXI1_1;
		Effects = EF_DL_MAGENTA;
	}
};

//==========================================================================
//
//	MT_IMP
//
//==========================================================================

class MT_IMP:Actor
{
	defaultproperties
	{
		Health = 40;
		GibsHealth = -20;
		Radius = 16.0;
		Height = 36.0;
		Mass = 50.0;
		Speed = 350.0;
		ReactionCount = 8;
		PainChance = 200;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_FLOAT|MF_COUNTKILL;
		Flags2 = MF2_SPAWNFLOAT|MF2_PASSMOBJ;
		SpawnState = S_IMP_LOOK1;
		SeeState = S_IMP_FLY1;
		MeleeState = S_IMP_MEATK1;
		MissileState = S_IMP_MSATK1_1;
		PainState = S_IMP_PAIN1;
		CrashState = S_IMP_CRASH1;
		DeathState = S_IMP_DIE1;
		GibsDeathState = S_IMP_XDIE1;
		SightSound = 'ImpSight';
		ActiveSound = 'ImpActive';
		AttackSound = 'ImpAttack1';
		PainSound = 'ImpPain';
		DeathSound = 'ImpDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_IMPLEADER
//
//==========================================================================

class MT_IMPLEADER:Actor
{
	defaultproperties
	{
		Health = 80;
		GibsHealth = -40;
		Radius = 16.0;
		Height = 36.0;
		Mass = 50.0;
		Speed = 350.0;
		ReactionCount = 8;
		PainChance = 200;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_FLOAT|MF_COUNTKILL;
		Flags2 = MF2_SPAWNFLOAT|MF2_PASSMOBJ;
		SpawnState = S_IMP_LOOK1;
		SeeState = S_IMP_FLY1;
		MissileState = S_IMP_MSATK2_1;
		PainState = S_IMP_PAIN1;
		CrashState = S_IMP_CRASH1;
		DeathState = S_IMP_DIE1;
		GibsDeathState = S_IMP_XDIE1;
		SightSound = 'ImpSight';
		ActiveSound = 'ImpActive';
		AttackSound = 'ImpAttack2';
		PainSound = 'ImpPain';
		DeathSound = 'ImpDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_IMPCHUNK1
//
//==========================================================================

class MT_IMPCHUNK1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP;
		SpawnState = S_IMP_CHUNKA1;
	}
};

//==========================================================================
//
//	MT_IMPCHUNK2
//
//==========================================================================

class MT_IMPCHUNK2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP;
		SpawnState = S_IMP_CHUNKB1;
	}
};

//==========================================================================
//
//	MT_IMPBALL
//
//==========================================================================

class MT_IMPBALL:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 350.0;
		ReactionCount = 8;
		MissileDamage = 1;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_WINDTHRUST|MF2_NOTELEPORT;
		SpawnState = S_IMPFX1;
		DeathState = S_IMPFXI1;
		Effects = EF_DL_WHITE;
	}
};

//==========================================================================
//
//	MT_KNIGHT
//
//==========================================================================

class MT_KNIGHT:Actor
{
	defaultproperties
	{
		Health = 200;
		Radius = 24.0;
		Height = 78.0;
		Mass = 150.0;
		Speed = 420.0;
		ReactionCount = 8;
		PainChance = 100;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		Flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		SpawnState = S_KNIGHT_STND1;
		SeeState = S_KNIGHT_WALK1;
		MeleeState = S_KNIGHT_ATK1;
		MissileState = S_KNIGHT_ATK1;
		PainState = S_KNIGHT_PAIN1;
		DeathState = S_KNIGHT_DIE1;
		SightSound = 'KnightSight';
		ActiveSound = 'KnightActive';
		AttackSound = 'KnightAttack1';
		PainSound = 'KnightPain';
		DeathSound = 'KnightDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_KNIGHTGHOST
//
//==========================================================================

class MT_KNIGHTGHOST:Actor
{
	defaultproperties
	{
		Health = 200;
		Radius = 24.0;
		Height = 78.0;
		Mass = 150.0;
		Speed = 420.0;
		ReactionCount = 8;
		PainChance = 100;
		Translucency = 33;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		Flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		SpawnState = S_KNIGHT_STND1;
		SeeState = S_KNIGHT_WALK1;
		MeleeState = S_KNIGHT_ATK1;
		MissileState = S_KNIGHT_ATK1;
		PainState = S_KNIGHT_PAIN1;
		DeathState = S_KNIGHT_DIE1;
		SightSound = 'KnightSight';
		ActiveSound = 'KnightActive';
		AttackSound = 'KnightAttack1';
		PainSound = 'KnightPain';
		DeathSound = 'KnightDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_KNIGHTAXE
//
//==========================================================================

class MT_KNIGHTAXE:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 10.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 315.0;
		ReactionCount = 8;
		MissileDamage = 2;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_WINDTHRUST|MF2_THRUGHOST|MF2_NOTELEPORT;
		SpawnState = S_SPINAXE1;
		DeathState = S_SPINAXEX1;
		DeathSound = 'SkullRodHit';
		Effects = EF_DL_GREEN;
	}
};

//==========================================================================
//
//	MT_REDAXE
//
//==========================================================================

class MT_REDAXE:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 10.0;
		Height = 8.0;
		Mass = 100.0;
		Speed = 315.0;
		ReactionCount = 8;
		MissileDamage = 7;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_THRUGHOST|MF2_NOTELEPORT;
		SpawnState = S_REDAXE1;
		DeathState = S_REDAXEX1;
		DeathSound = 'SkullRodHit';
		Effects = EF_DL_RED;
	}
};

//==========================================================================
//
//	MT_SORCERER1
//
//==========================================================================

class MT_SORCERER1:Actor
{
	defaultproperties
	{
		Health = 2000;
		Radius = 28.0;
		Height = 100.0;
		Mass = 800.0;
		Speed = 560.0;
		ReactionCount = 8;
		PainChance = 56;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		Flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ|MF2_BOSS;
		SpawnState = S_SRCR1_LOOK1;
		SeeState = S_SRCR1_WALK1;
		MissileState = S_SRCR1_ATK1;
		PainState = S_SRCR1_PAIN1;
		DeathState = S_SRCR1_DIE1;
		SightSound = 'SorcererDemonSight';
		ActiveSound = 'SorcererDemonActive';
		AttackSound = 'SorcererDemonAttack';
		PainSound = 'SorcererDemonPain';
		DeathSound = 'SorcererDemonDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_SRCRFX1
//
//==========================================================================

class MT_SRCRFX1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 10.0;
		Height = 10.0;
		Mass = 100.0;
		Speed = 700.0;
		ReactionCount = 8;
		MissileDamage = 10;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT|MF2_FIREDAMAGE;
		SpawnState = S_SRCRFX1_1;
		DeathState = S_SRCRFXI1_1;
		Effects = EF_DL_WHITE;
	}
};

//==========================================================================
//
//	MT_SORCERER2
//
//==========================================================================

class MT_SORCERER2:Actor
{
	defaultproperties
	{
		Health = 3500;
		Radius = 16.0;
		Height = 70.0;
		Mass = 300.0;
		Speed = 490.0;
		ReactionCount = 8;
		PainChance = 32;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_COUNTKILL;
		Flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ|MF2_BOSS;
		SpawnState = S_SOR2_LOOK1;
		SeeState = S_SOR2_WALK1;
		MissileState = S_SOR2_ATK1;
		PainState = S_SOR2_PAIN1;
		DeathState = S_SOR2_DIE1;
		SightSound = 'SorcererSight';
		ActiveSound = 'SorcererActive';
		AttackSound = 'SorcererAttack';
		PainSound = 'SorcererPain';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_SOR2FX1
//
//==========================================================================

class MT_SOR2FX1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 10.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 700.0;
		ReactionCount = 8;
		MissileDamage = 1;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_SOR2FX1_1;
		DeathState = S_SOR2FXI1_1;
		Effects = EF_DL_BLUE;
	}
};

//==========================================================================
//
//	MT_SOR2FXSPARK
//
//==========================================================================

class MT_SOR2FXSPARK:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		Flags2 = MF2_NOTELEPORT|MF2_CANNOTPUSH;
		SpawnState = S_SOR2FXSPARK1;
	}
};

//==========================================================================
//
//	MT_SOR2FX2
//
//==========================================================================

class MT_SOR2FX2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 10.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 210.0;
		ReactionCount = 8;
		MissileDamage = 10;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT;
		SpawnState = S_SOR2FX2_1;
		DeathState = S_SOR2FXI2_1;
		Effects = EF_DL_BLUE;
	}
};

//==========================================================================
//
//	MT_SOR2TELEFADE
//
//==========================================================================

class MT_SOR2TELEFADE:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOBLOCKMAP;
		SpawnState = S_SOR2TELEFADE1;
	}
};

//==========================================================================
//
//	MT_MINOTAUR
//
//==========================================================================

class MT_MINOTAUR:Actor
{
	defaultproperties
	{
		Health = 3000;
		Radius = 28.0;
		Height = 100.0;
		Mass = 800.0;
		Speed = 560.0;
		ReactionCount = 8;
		PainChance = 25;
		MissileDamage = 7;
		Flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_COUNTKILL;
		Flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ|MF2_BOSS;
		SpawnState = S_MNTR_LOOK1;
		SeeState = S_MNTR_WALK1;
		MeleeState = S_MNTR_ATK1_1;
		MissileState = S_MNTR_ATK2_1;
		PainState = S_MNTR_PAIN1;
		DeathState = S_MNTR_DIE1;
		SightSound = 'MinotaurSight';
		ActiveSound = 'MinotaurActive';
		AttackSound = 'MinotaurAttack1';
		PainSound = 'MinotaurPain';
		DeathSound = 'MinotaurDeath';
	}

	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	MT_MNTRFX1
//
//==========================================================================

class MT_MNTRFX1:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 10.0;
		Height = 6.0;
		Mass = 100.0;
		Speed = 700.0;
		ReactionCount = 8;
		MissileDamage = 3;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT|MF2_FIREDAMAGE;
		SpawnState = S_MNTRFX1_1;
		DeathState = S_MNTRFXI1_1;
		Effects = EF_DL_WHITE;
	}
};

//==========================================================================
//
//	MT_MNTRFX2
//
//==========================================================================

class MT_MNTRFX2:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 5.0;
		Height = 12.0;
		Mass = 100.0;
		Speed = 490.0;
		ReactionCount = 8;
		MissileDamage = 4;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT|MF2_FIREDAMAGE;
		SpawnState = S_MNTRFX2_1;
		DeathState = S_MNTRFXI2_1;
		DeathSound = 'PhoenixHit';
		Effects = EF_DL_WHITE;
	}
};

//==========================================================================
//
//	MT_MNTRFX3
//
//==========================================================================

class MT_MNTRFX3:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 8.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		MissileDamage = 4;
		Flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		Flags2 = MF2_NOTELEPORT|MF2_FIREDAMAGE;
		SpawnState = S_MNTRFX3_1;
		DeathState = S_MNTRFXI2_1;
		DeathSound = 'PhoenixHit';
		Effects = EF_DL_WHITE;
	}
};

//==========================================================================
//
//	MT_AKYY
//
//==========================================================================

class MT_AKYY:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AKYY1;
	}
};

//==========================================================================
//
//	MT_BKYY
//
//==========================================================================

class MT_BKYY:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_BKYY1;
	}
};

//==========================================================================
//
//	MT_CKEY
//
//==========================================================================

class MT_CKEY:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_CKYY1;
	}
};

//==========================================================================
//
//	MT_AMGWNDWIMPY
//
//==========================================================================

class MT_AMGWNDWIMPY:Actor
{
	defaultproperties
	{
		Health = 10;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AMG1;
	}
};

//==========================================================================
//
//	MT_AMGWNDHEFTY
//
//==========================================================================

class MT_AMGWNDHEFTY:Actor
{
	defaultproperties
	{
		Health = 50;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AMG2_1;
	}
};

//==========================================================================
//
//	MT_AMMACEWIMPY
//
//==========================================================================

class MT_AMMACEWIMPY:Actor
{
	defaultproperties
	{
		Health = 20;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AMM1;
	}
};

//==========================================================================
//
//	MT_AMMACEHEFTY
//
//==========================================================================

class MT_AMMACEHEFTY:Actor
{
	defaultproperties
	{
		Health = 100;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AMM2;
	}
};

//==========================================================================
//
//	MT_AMCBOWWIMPY
//
//==========================================================================

class MT_AMCBOWWIMPY:Actor
{
	defaultproperties
	{
		Health = 5;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AMC1;
	}
};

//==========================================================================
//
//	MT_AMCBOWHEFTY
//
//==========================================================================

class MT_AMCBOWHEFTY:Actor
{
	defaultproperties
	{
		Health = 20;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AMC2_1;
	}
};

//==========================================================================
//
//	MT_AMSKRDWIMPY
//
//==========================================================================

class MT_AMSKRDWIMPY:Actor
{
	defaultproperties
	{
		Health = 20;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AMS1_1;
	}
};

//==========================================================================
//
//	MT_AMSKRDHEFTY
//
//==========================================================================

class MT_AMSKRDHEFTY:Actor
{
	defaultproperties
	{
		Health = 100;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AMS2_1;
	}
};

//==========================================================================
//
//	MT_AMPHRDWIMPY
//
//==========================================================================

class MT_AMPHRDWIMPY:Actor
{
	defaultproperties
	{
		Health = 1;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AMP1_1;
	}
};

//==========================================================================
//
//	MT_AMPHRDHEFTY
//
//==========================================================================

class MT_AMPHRDHEFTY:Actor
{
	defaultproperties
	{
		Health = 10;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AMP2_1;
	}
};

//==========================================================================
//
//	MT_AMBLSRWIMPY
//
//==========================================================================

class MT_AMBLSRWIMPY:Actor
{
	defaultproperties
	{
		Health = 10;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AMB1_1;
	}
};

//==========================================================================
//
//	MT_AMBLSRHEFTY
//
//==========================================================================

class MT_AMBLSRHEFTY:Actor
{
	defaultproperties
	{
		Health = 25;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_SPECIAL;
		SpawnState = S_AMB2_1;
	}
};

//==========================================================================
//
//	MT_SOUNDWIND
//
//==========================================================================

class MT_SOUNDWIND:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOSECTOR|MF_NOBLOCKMAP;
		SpawnState = S_SND_WIND;
	}
};

//==========================================================================
//
//	MT_SOUNDWATERFALL
//
//==========================================================================

class MT_SOUNDWATERFALL:Actor
{
	defaultproperties
	{
		Health = 1000;
		Radius = 20.0;
		Height = 16.0;
		Mass = 100.0;
		ReactionCount = 8;
		Flags = MF_NOSECTOR|MF_NOBLOCKMAP;
		SpawnState = S_SND_WATERFALL;
	}
};

__mobjinfo__
{
	{ 81, MT_MISC0 }
	{ 85, MT_ITEMSHIELD1 }
	{ 31, MT_ITEMSHIELD2 }
	{ 8, MT_MISC1 }
	{ 35, MT_MISC2 }
	{ 75, MT_ARTIINVISIBILITY }
	{ 82, MT_MISC3 }
	{ 83, MT_ARTIFLY }
	{ 84, MT_ARTIINVULNERABILITY }
	{ 86, MT_ARTITOMEOFPOWER }
	{ 30, MT_ARTIEGG }
	{ 32, MT_ARTISUPERHEAL }
	{ 33, MT_MISC4 }
	{ 34, MT_MISC5 }
	{ 36, MT_ARTITELEPORT }
	{ 2035, MT_POD }
	{ 43, MT_PODGENERATOR }
	{ 17, MT_SKULLHANG70 }
	{ 24, MT_SKULLHANG60 }
	{ 25, MT_SKULLHANG45 }
	{ 26, MT_SKULLHANG35 }
	{ 28, MT_CHANDELIER }
	{ 27, MT_SERPTORCH }
	{ 29, MT_SMALLPILLAR }
	{ 37, MT_STALAGMITESMALL }
	{ 38, MT_STALAGMITELARGE }
	{ 39, MT_STALACTITESMALL }
	{ 40, MT_STALACTITELARGE }
	{ 76, MT_MISC6 }
	{ 44, MT_BARREL }
	{ 47, MT_MISC7 }
	{ 48, MT_MISC8 }
	{ 49, MT_MISC9 }
	{ 50, MT_MISC10 }
	{ 51, MT_MISC11 }
	{ 94, MT_KEYGIZMOBLUE }
	{ 95, MT_KEYGIZMOGREEN }
	{ 96, MT_KEYGIZMOYELLOW }
	{ 87, MT_MISC12 }
	{ 74, MT_TELEGLITGEN }
	{ 52, MT_TELEGLITGEN2 }
	{ 14, MT_TELEPORTMAN }
	{ 2005, MT_MISC13 }
	{ 53, MT_MISC14 }
	{ 2002, MT_WMACE }
	{ 2004, MT_WSKULLROD }
	{ 2003, MT_WPHOENIXROD }
	{ 2001, MT_MISC15 }
	{ 68, MT_MUMMY }
	{ 45, MT_MUMMYLEADER }
	{ 69, MT_MUMMYGHOST }
	{ 46, MT_MUMMYLEADERGHOST }
	{ 70, MT_BEAST }
	{ 92, MT_SNAKE }
	{ 6, MT_HEAD }
	{ 90, MT_CLINK }
	{ 15, MT_WIZARD }
	{ 66, MT_IMP }
	{ 5, MT_IMPLEADER }
	{ 64, MT_KNIGHT }
	{ 65, MT_KNIGHTGHOST }
	{ 7, MT_SORCERER1 }
	{ 9, MT_MINOTAUR }
	{ 73, MT_AKYY }
	{ 79, MT_BKYY }
	{ 80, MT_CKEY }
	{ 10, MT_AMGWNDWIMPY }
	{ 12, MT_AMGWNDHEFTY }
	{ 13, MT_AMMACEWIMPY }
	{ 16, MT_AMMACEHEFTY }
	{ 18, MT_AMCBOWWIMPY }
	{ 19, MT_AMCBOWHEFTY }
	{ 20, MT_AMSKRDWIMPY }
	{ 21, MT_AMSKRDHEFTY }
	{ 22, MT_AMPHRDWIMPY }
	{ 23, MT_AMPHRDHEFTY }
	{ 54, MT_AMBLSRWIMPY }
	{ 55, MT_AMBLSRHEFTY }
	{ 42, MT_SOUNDWIND }
	{ 41, MT_SOUNDWATERFALL }
}

//**************************************************************************
//
//	$Log$
//	Revision 1.15  2002/01/15 18:27:00  dj_jl
//	Some property names with logical words starting with capital letter.
//	Moved everything from Entity class into Actor class.
//
//	Revision 1.14  2002/01/12 18:00:47  dj_jl
//	Sound names initialized as names
//	
//	Revision 1.13  2002/01/11 18:19:41  dj_jl
//	Started to use names in progs
//	
//	Revision 1.12  2002/01/07 12:23:17  dj_jl
//	Changed copyright year
//	
//	Revision 1.11  2001/12/27 17:48:17  dj_jl
//	Removed spawnhealth
//	
//	Revision 1.10  2001/12/12 18:57:41  dj_jl
//	State functions now are methods of Actor and Weapon classes
//	
//	Revision 1.9  2001/12/04 18:25:36  dj_jl
//	Replaced constructors with defaultproperties
//	
//	Revision 1.8  2001/11/09 14:37:53  dj_jl
//	Using constructors
//	
//	Revision 1.7  2001/10/22 17:23:12  dj_jl
//	Floatification of angles
//	
//	Revision 1.6  2001/10/18 17:39:33  dj_jl
//	A lots of changes for Alpha 2
//	
//	Revision 1.5  2001/10/02 17:42:38  dj_jl
//	Possibility to declare function's code inside class declaration
//	
//	Revision 1.4  2001/09/27 17:08:19  dj_jl
//	Removed spawn functions, added mobj classes
//	
//	Revision 1.3  2001/09/20 16:19:59  dj_jl
//	Start using object-oriented stuff, beautification
//	
//	Revision 1.2  2001/07/27 14:27:52  dj_jl
//	Update with Id-s and Log-s, some fixes
//
//**************************************************************************
