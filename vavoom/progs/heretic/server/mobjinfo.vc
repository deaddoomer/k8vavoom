//**************************************************************************
//**
//**	##   ##    ##    ##   ##   ####     ####   ###     ###
//**	##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**	 ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**	 ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**	  ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**	   #    ##    ##    #      ####     ####   ##       ##
//**
//**	$Id$
//**
//**	Copyright (C) 1999-2001 JÆnis Legzdi·ý
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**	Mobj info table
//**
//**	Generated by makeinfo.
//**
//**************************************************************************

//==========================================================================
//
//	misc_MISC0
//
//==========================================================================

class misc_MISC0:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ITEM_PTN1_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_ITEMSHIELD1
//
//==========================================================================

class misc_ITEMSHIELD1:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ITEM_SHLD1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_ITEMSHIELD2
//
//==========================================================================

class misc_ITEMSHIELD2:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ITEM_SHD2_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC1
//
//==========================================================================

class misc_MISC1:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ITEM_BAGH1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC2
//
//==========================================================================

class misc_MISC2:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ITEM_SPMP1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_ARTIINVISIBILITY
//
//==========================================================================

class misc_ARTIINVISIBILITY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ARTI_INVS1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC3
//
//==========================================================================

class misc_MISC3:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ARTI_PTN2_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_ARTIFLY
//
//==========================================================================

class misc_ARTIFLY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ARTI_SOAR1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_ARTIINVULNERABILITY
//
//==========================================================================

class misc_ARTIINVULNERABILITY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ARTI_INVU1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_ARTITOMEOFPOWER
//
//==========================================================================

class misc_ARTITOMEOFPOWER:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ARTI_PWBK1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_ARTIEGG
//
//==========================================================================

class misc_ARTIEGG:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ARTI_EGGC1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_EGGFX
//
//==========================================================================

class misc_EGGFX:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 8.0;
		mass = 100.0;
		speed = 630.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 1;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_EGGFX1;
		deathstate = S_EGGFXI1_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_ARTISUPERHEAL
//
//==========================================================================

class misc_ARTISUPERHEAL:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ARTI_SPHL1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC4
//
//==========================================================================

class misc_MISC4:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ARTI_TRCH1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC5
//
//==========================================================================

class misc_MISC5:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ARTI_FBMB1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_FIREBOMB
//
//==========================================================================

class misc_FIREBOMB:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOGRAVITY;
		spawnstate = S_FIREBOMB1;
		sound_death = GetSoundID("PhoenixHit");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_ARTITELEPORT
//
//==========================================================================

class misc_ARTITELEPORT:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL|MF_COUNTITEM;
		flags2 = MF2_FLOATBOB;
		spawnstate = S_ARTI_ATLP1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_POD
//
//==========================================================================

class misc_POD:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 45;
		spawnhealth = health;
		radius = 16.0;
		height = 54.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 255;
		flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_NOBLOOD;
		flags2 = MF2_WINDTHRUST|MF2_PUSHABLE|MF2_SLIDE|MF2_PASSMOBJ|MF2_TELESTOMP;
		spawnstate = S_POD_WAIT1;
		painstate = S_POD_PAIN1;
		deathstate = S_POD_DIE1;
		sound_death = GetSoundID("PodExplode");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_PODGOO
//
//==========================================================================

class misc_PODGOO:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 2.0;
		height = 4.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_LOGRAV|MF2_NOTELEPORT|MF2_CANNOTPUSH;
		spawnstate = S_PODGOO1;
		deathstate = S_PODGOOX;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_PODGENERATOR
//
//==========================================================================

class misc_PODGENERATOR:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOSECTOR|MF_NOBLOCKMAP;
		spawnstate = S_PODGENERATOR;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SPLASH
//
//==========================================================================

class misc_SPLASH:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 2.0;
		height = 4.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_LOGRAV|MF2_NOTELEPORT|MF2_CANNOTPUSH;
		spawnstate = S_SPLASH1;
		deathstate = S_SPLASHX;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SPLASHBASE
//
//==========================================================================

class misc_SPLASHBASE:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP;
		spawnstate = S_SPLASHBASE1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_LAVASPLASH
//
//==========================================================================

class misc_LAVASPLASH:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP;
		spawnstate = S_LAVASPLASH1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_LAVASMOKE
//
//==========================================================================

class misc_LAVASMOKE:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_LAVASMOKE1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SLUDGECHUNK
//
//==========================================================================

class misc_SLUDGECHUNK:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 2.0;
		height = 4.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_LOGRAV|MF2_NOTELEPORT|MF2_CANNOTPUSH;
		spawnstate = S_SLUDGECHUNK1;
		deathstate = S_SLUDGECHUNKX;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SLUDGESPLASH
//
//==========================================================================

class misc_SLUDGESPLASH:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP;
		spawnstate = S_SLUDGESPLASH1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SKULLHANG70
//
//==========================================================================

class misc_SKULLHANG70:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 70.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_SKULLHANG70_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SKULLHANG60
//
//==========================================================================

class misc_SKULLHANG60:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 60.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_SKULLHANG60_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SKULLHANG45
//
//==========================================================================

class misc_SKULLHANG45:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 45.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_SKULLHANG45_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SKULLHANG35
//
//==========================================================================

class misc_SKULLHANG35:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 35.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_SKULLHANG35_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_CHANDELIER
//
//==========================================================================

class misc_CHANDELIER:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 60.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_CHANDELIER1;
		::OnMapSpawn(mthing);
		AddStaticLight(origin,
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
	}
};

//==========================================================================
//
//	misc_SERPTORCH
//
//==========================================================================

class misc_SERPTORCH:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 12.0;
		height = 54.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_SERPTORCH1;
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 128.0);
	}
};

//==========================================================================
//
//	misc_SMALLPILLAR
//
//==========================================================================

class misc_SMALLPILLAR:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 34.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_SMALLPILLAR;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_STALAGMITESMALL
//
//==========================================================================

class misc_STALAGMITESMALL:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 32.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_STALAGMITESMALL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_STALAGMITELARGE
//
//==========================================================================

class misc_STALAGMITELARGE:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 12.0;
		height = 64.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_STALAGMITELARGE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_STALACTITESMALL
//
//==========================================================================

class misc_STALACTITESMALL:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 36.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_STALACTITESMALL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_STALACTITELARGE
//
//==========================================================================

class misc_STALACTITELARGE:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 12.0;
		height = 68.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_STALACTITELARGE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC6
//
//==========================================================================

class misc_MISC6:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 44.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_FIREBRAZIER1;
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
	}
};

//==========================================================================
//
//	misc_BARREL
//
//==========================================================================

class misc_BARREL:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 12.0;
		height = 32.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_BARREL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC7
//
//==========================================================================

class misc_MISC7:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 14.0;
		height = 128.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_BRPILLAR;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC8
//
//==========================================================================

class misc_MISC8:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 23.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_MOSS1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC9
//
//==========================================================================

class misc_MISC9:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 27.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_MOSS2;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC10
//
//==========================================================================

class misc_MISC10:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOGRAVITY;
		spawnstate = S_WALLTORCH1;
		::OnMapSpawn(mthing);
		AddStaticLight(origin + vector(0.0, 0.0, 80.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
	}
};

//==========================================================================
//
//	misc_MISC11
//
//==========================================================================

class misc_MISC11:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 104.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
		spawnstate = S_HANGINGCORPSE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_KEYGIZMOBLUE
//
//==========================================================================

class misc_KEYGIZMOBLUE:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 50.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_KEYGIZMO1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_KEYGIZMOGREEN
//
//==========================================================================

class misc_KEYGIZMOGREEN:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 50.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_KEYGIZMO1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_KEYGIZMOYELLOW
//
//==========================================================================

class misc_KEYGIZMOYELLOW:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 50.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_KEYGIZMO1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_KEYGIZMOFLOAT
//
//==========================================================================

class misc_KEYGIZMOFLOAT:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID|MF_NOGRAVITY;
		spawnstate = S_KGZ_START;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC12
//
//==========================================================================

class misc_MISC12:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 12.0;
		height = 20.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SOLID;
		spawnstate = S_VOLCANO1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_VOLCANOBLAST
//
//==========================================================================

class misc_VOLCANOBLAST:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 8.0;
		mass = 100.0;
		speed = 70.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 2;
		flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_LOGRAV|MF2_NOTELEPORT|MF2_FIREDAMAGE;
		spawnstate = S_VOLCANOBALL1;
		deathstate = S_VOLCANOBALLX1;
		sound_death = GetSoundID("VolcanoHit");
		effects = EF_DL_RED;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_VOLCANOTBLAST
//
//==========================================================================

class misc_VOLCANOTBLAST:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 6.0;
		mass = 100.0;
		speed = 70.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 1;
		flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_LOGRAV|MF2_NOTELEPORT|MF2_FIREDAMAGE;
		spawnstate = S_VOLCANOTBALL1;
		deathstate = S_VOLCANOTBALLX1;
		effects = EF_DL_RED;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_TELEGLITGEN
//
//==========================================================================

class misc_TELEGLITGEN:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOSECTOR|MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_TELEGLITGEN1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_TELEGLITGEN2
//
//==========================================================================

class misc_TELEGLITGEN2:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOSECTOR|MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_TELEGLITGEN2;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_TELEGLITTER
//
//==========================================================================

class misc_TELEGLITTER:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_MISSILE;
		spawnstate = S_TELEGLITTER1_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_TELEGLITTER2
//
//==========================================================================

class misc_TELEGLITTER2:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_MISSILE;
		spawnstate = S_TELEGLITTER2_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_TFOG
//
//==========================================================================

class misc_TFOG:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_TFOG1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_TELEPORTMAN
//
//==========================================================================

class misc_TELEPORTMAN:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOSECTOR|MF_NOBLOCKMAP;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_STAFFPUFF
//
//==========================================================================

class misc_STAFFPUFF:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_STAFFPUFF1;
		sound_attack = GetSoundID("StaffHit");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_STAFFPUFF2
//
//==========================================================================

class misc_STAFFPUFF2:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_STAFFPUFF2_1;
		sound_attack = GetSoundID("StaffHit2");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BEAKPUFF
//
//==========================================================================

class misc_BEAKPUFF:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_STAFFPUFF1;
		sound_attack = GetSoundID("ChickenAttack");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC13
//
//==========================================================================

class misc_MISC13:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_WGNT;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_GAUNTLETPUFF1
//
//==========================================================================

class misc_GAUNTLETPUFF1:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_GAUNTLETPUFF1_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_GAUNTLETPUFF2
//
//==========================================================================

class misc_GAUNTLETPUFF2:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_GAUNTLETPUFF2_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC14
//
//==========================================================================

class misc_MISC14:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_BLSR;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BLASTERFX1
//
//==========================================================================

class misc_BLASTERFX1:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 12.0;
		height = 8.0;
		mass = 100.0;
		speed = 6440.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 2;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_BLASTERFX1_1;
		deathstate = S_BLASTERFXI1_1;
		sound_death = GetSoundID("BlasterHit");
		effects = EF_DL_BLUE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BLASTERSMOKE
//
//==========================================================================

class misc_BLASTERSMOKE:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		flags2 = MF2_NOTELEPORT|MF2_CANNOTPUSH;
		spawnstate = S_BLASTERSMOKE1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_RIPPER
//
//==========================================================================

class misc_RIPPER:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 6.0;
		mass = 100.0;
		speed = 490.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 1;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT|MF2_RIP;
		spawnstate = S_RIPPER1;
		deathstate = S_RIPPERX1;
		sound_death = GetSoundID("SkullRodHit");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BLASTERPUFF1
//
//==========================================================================

class misc_BLASTERPUFF1:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_BLASTERPUFF1_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BLASTERPUFF2
//
//==========================================================================

class misc_BLASTERPUFF2:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_BLASTERPUFF2_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_WMACE
//
//==========================================================================

class misc_WMACE:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_WMCE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MACEFX1
//
//==========================================================================

class misc_MACEFX1:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 6.0;
		mass = 100.0;
		speed = 700.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 2;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_FLOORBOUNCE|MF2_THRUGHOST|MF2_NOTELEPORT;
		spawnstate = S_MACEFX1_1;
		deathstate = S_MACEFXI1_1;
		sound_sight = GetSoundID("MaceFire");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MACEFX2
//
//==========================================================================

class misc_MACEFX2:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 6.0;
		mass = 100.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 6;
		flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_LOGRAV|MF2_FLOORBOUNCE|MF2_THRUGHOST|MF2_NOTELEPORT;
		spawnstate = S_MACEFX2_1;
		deathstate = S_MACEFXI2_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MACEFX3
//
//==========================================================================

class misc_MACEFX3:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 6.0;
		mass = 100.0;
		speed = 245.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 4;
		flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_LOGRAV|MF2_FLOORBOUNCE|MF2_THRUGHOST|MF2_NOTELEPORT;
		spawnstate = S_MACEFX3_1;
		deathstate = S_MACEFXI1_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MACEFX4
//
//==========================================================================

class misc_MACEFX4:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 6.0;
		mass = 100.0;
		speed = 245.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 18;
		flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_LOGRAV|MF2_FLOORBOUNCE|MF2_THRUGHOST|MF2_TELESTOMP;
		spawnstate = S_MACEFX4_1;
		deathstate = S_MACEFXI4_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_WSKULLROD
//
//==========================================================================

class misc_WSKULLROD:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_WSKL;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_HORNRODFX1
//
//==========================================================================

class misc_HORNRODFX1:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 12.0;
		height = 8.0;
		mass = 100.0;
		speed = 770.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 3;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_WINDTHRUST|MF2_NOTELEPORT;
		spawnstate = S_HRODFX1_1;
		deathstate = S_HRODFXI1_1;
		sound_sight = GetSoundID("SkullRodFire");
		sound_death = GetSoundID("SkullRodHit");
		effects = EF_DL_RED;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_HORNRODFX2
//
//==========================================================================

class misc_HORNRODFX2:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 140;
		spawnhealth = health;
		radius = 12.0;
		height = 8.0;
		mass = 100.0;
		speed = 770.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 10;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_HRODFX2_1;
		deathstate = S_HRODFXI2_1;
		sound_sight = GetSoundID("SkullRodFire");
		sound_death = GetSoundID("SkullRodHit");
		effects = EF_DL_RED;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_RAINPLR1
//
//==========================================================================

class misc_RAINPLR1:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 5.0;
		height = 12.0;
		mass = 100.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 5;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_RAINPLR1_1;
		deathstate = S_RAINPLR1X_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_RAINPLR2
//
//==========================================================================

class misc_RAINPLR2:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 5.0;
		height = 12.0;
		mass = 100.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 5;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_RAINPLR2_1;
		deathstate = S_RAINPLR2X_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_RAINPLR3
//
//==========================================================================

class misc_RAINPLR3:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 5.0;
		height = 12.0;
		mass = 100.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 5;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_RAINPLR3_1;
		deathstate = S_RAINPLR3X_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_RAINPLR4
//
//==========================================================================

class misc_RAINPLR4:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 5.0;
		height = 12.0;
		mass = 100.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 5;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_RAINPLR4_1;
		deathstate = S_RAINPLR4X_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_GOLDWANDFX1
//
//==========================================================================

class misc_GOLDWANDFX1:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 10.0;
		height = 6.0;
		mass = 100.0;
		speed = 770.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 2;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_GWANDFX1_1;
		deathstate = S_GWANDFXI1_1;
		sound_death = GetSoundID("GoldWandFire");
		effects = EF_DL_WHITE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_GOLDWANDFX2
//
//==========================================================================

class misc_GOLDWANDFX2:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 10.0;
		height = 6.0;
		mass = 100.0;
		speed = 630.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 1;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_GWANDFX2_1;
		deathstate = S_GWANDFXI1_1;
		effects = EF_DL_WHITE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_GOLDWANDPUFF1
//
//==========================================================================

class misc_GOLDWANDPUFF1:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_GWANDPUFF1_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_GOLDWANDPUFF2
//
//==========================================================================

class misc_GOLDWANDPUFF2:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_GWANDFXI1_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_WPHOENIXROD
//
//==========================================================================

class misc_WPHOENIXROD:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_WPHX;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_PHOENIXFX1
//
//==========================================================================

class misc_PHOENIXFX1:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 11.0;
		height = 8.0;
		mass = 100.0;
		speed = 700.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 20;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_THRUGHOST|MF2_NOTELEPORT;
		spawnstate = S_PHOENIXFX1_1;
		deathstate = S_PHOENIXFXI1_1;
		sound_sight = GetSoundID("PhoenixFire");
		sound_death = GetSoundID("PhoenixHit");
		effects = EF_DL_RED;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_PHOENIXPUFF
//
//==========================================================================

class misc_PHOENIXPUFF:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		flags2 = MF2_NOTELEPORT|MF2_CANNOTPUSH;
		spawnstate = S_PHOENIXPUFF1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_PHOENIXFX2
//
//==========================================================================

class misc_PHOENIXFX2:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 6.0;
		height = 8.0;
		mass = 100.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 2;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT|MF2_FIREDAMAGE;
		spawnstate = S_PHOENIXFX2_1;
		deathstate = S_PHOENIXFXI2_1;
		effects = EF_DL_WHITE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MISC15
//
//==========================================================================

class misc_MISC15:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_WBOW;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_CRBOWFX1
//
//==========================================================================

class misc_CRBOWFX1:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 11.0;
		height = 8.0;
		mass = 100.0;
		speed = 1050.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 10;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_CRBOWFX1;
		deathstate = S_CRBOWFXI1_1;
		sound_sight = GetSoundID("BowFire");
		sound_death = GetSoundID("SkullRodHit");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_CRBOWFX2
//
//==========================================================================

class misc_CRBOWFX2:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 11.0;
		height = 8.0;
		mass = 100.0;
		speed = 1120.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 6;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_CRBOWFX2;
		deathstate = S_CRBOWFXI1_1;
		sound_sight = GetSoundID("BowFire");
		sound_death = GetSoundID("SkullRodHit");
		effects = EF_DL_GREEN;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_CRBOWFX3
//
//==========================================================================

class misc_CRBOWFX3:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 11.0;
		height = 8.0;
		mass = 100.0;
		speed = 700.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 2;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_WINDTHRUST|MF2_THRUGHOST|MF2_NOTELEPORT;
		spawnstate = S_CRBOWFX3;
		deathstate = S_CRBOWFXI3_1;
		sound_death = GetSoundID("SkullRodHit");
		effects = EF_DL_GREEN;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_CRBOWFX4
//
//==========================================================================

class misc_CRBOWFX4:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP;
		flags2 = MF2_LOGRAV;
		spawnstate = S_CRBOWFX4_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BLOOD
//
//==========================================================================

class misc_BLOOD:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP;
		spawnstate = S_BLOOD1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BLOODSPLATTER
//
//==========================================================================

class misc_BLOODSPLATTER:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 2.0;
		height = 4.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT|MF2_CANNOTPUSH;
		spawnstate = S_BLOODSPLATTER1;
		deathstate = S_BLOODSPLATTERX;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_PLAYER
//
//==========================================================================

class misc_PLAYER:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 100;
		spawnhealth = health;
		gibshealth = -50;
		radius = 16.0;
		height = 56.0;
		mass = 100.0;
		painchance = 255;
		flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_PICKUP;
		flags2 = MF2_WINDTHRUST|MF2_FOOTCLIP|MF2_SLIDE|MF2_PASSMOBJ|MF2_TELESTOMP;
		spawnstate = S_PLAY;
		seestate = S_PLAY_RUN1;
		missilestate = S_PLAY_ATK1;
		painstate = S_PLAY_PAIN;
		deathstate = S_PLAY_DIE1;
		xdeathstate = S_PLAY_XDIE1;
		sound_pain = GetSoundID("PlayerPain");
		sound_death = GetSoundID("PlayerDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BLOODYSKULL
//
//==========================================================================

class misc_BLOODYSKULL:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 4.0;
		height = 4.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_DROPOFF;
		flags2 = MF2_LOGRAV|MF2_CANNOTPUSH;
		spawnstate = S_BLOODYSKULL1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_CHICPLAYER
//
//==========================================================================

class misc_CHICPLAYER:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 100;
		spawnhealth = health;
		radius = 16.0;
		height = 24.0;
		mass = 100.0;
		painchance = 255;
		flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF;
		flags2 = MF2_LOGRAV|MF2_WINDTHRUST|MF2_FOOTCLIP|MF2_SLIDE|MF2_PASSMOBJ|MF2_TELESTOMP;
		spawnstate = S_CHICPLAY;
		seestate = S_CHICPLAY_RUN1;
		missilestate = S_CHICPLAY_ATK1;
		painstate = S_CHICPLAY_PAIN;
		deathstate = S_CHICKEN_DIE1;
		sound_pain = GetSoundID("ChickenPain");
		sound_death = GetSoundID("ChickenDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_CHICKEN
//
//==========================================================================

class misc_CHICKEN:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 10;
		spawnhealth = health;
		radius = 9.0;
		height = 22.0;
		mass = 40.0;
		speed = 140.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 200;
		flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_COUNTKILL;
		flags2 = MF2_WINDTHRUST|MF2_FOOTCLIP|MF2_PASSMOBJ;
		spawnstate = S_CHICKEN_LOOK1;
		seestate = S_CHICKEN_WALK1;
		meleestate = S_CHICKEN_ATK1;
		painstate = S_CHICKEN_PAIN1;
		deathstate = S_CHICKEN_DIE1;
		sound_sight = GetSoundID("ChickenPain");
		sound_active = GetSoundID("ChickenActive");
		sound_attack = GetSoundID("ChickenAttack");
		sound_pain = GetSoundID("ChickenPain");
		sound_death = GetSoundID("ChickenDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_FEATHER
//
//==========================================================================

class misc_FEATHER:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 2.0;
		height = 4.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_LOGRAV|MF2_WINDTHRUST|MF2_NOTELEPORT|MF2_CANNOTPUSH;
		spawnstate = S_FEATHER1;
		deathstate = S_FEATHERX;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MUMMY
//
//==========================================================================

class misc_MUMMY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 80;
		spawnhealth = health;
		radius = 22.0;
		height = 62.0;
		mass = 75.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 128;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		spawnstate = S_MUMMY_LOOK1;
		seestate = S_MUMMY_WALK1;
		meleestate = S_MUMMY_ATK1;
		painstate = S_MUMMY_PAIN1;
		deathstate = S_MUMMY_DIE1;
		sound_sight = GetSoundID("MumySight");
		sound_active = GetSoundID("MumyActive");
		sound_attack = GetSoundID("MumyAttack1");
		sound_pain = GetSoundID("MumyPain");
		sound_death = GetSoundID("MumyDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MUMMYLEADER
//
//==========================================================================

class misc_MUMMYLEADER:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 100;
		spawnhealth = health;
		radius = 22.0;
		height = 62.0;
		mass = 75.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 64;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		spawnstate = S_MUMMY_LOOK1;
		seestate = S_MUMMY_WALK1;
		meleestate = S_MUMMY_ATK1;
		missilestate = S_MUMMYL_ATK1;
		painstate = S_MUMMY_PAIN1;
		deathstate = S_MUMMY_DIE1;
		sound_sight = GetSoundID("MumySight");
		sound_active = GetSoundID("MumyActive");
		sound_attack = GetSoundID("MumyAttack1");
		sound_pain = GetSoundID("MumyPain");
		sound_death = GetSoundID("MumyDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MUMMYGHOST
//
//==========================================================================

class misc_MUMMYGHOST:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		translucency = 33;
		health = 80;
		spawnhealth = health;
		radius = 22.0;
		height = 62.0;
		mass = 75.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 128;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		spawnstate = S_MUMMY_LOOK1;
		seestate = S_MUMMY_WALK1;
		meleestate = S_MUMMY_ATK1;
		painstate = S_MUMMY_PAIN1;
		deathstate = S_MUMMY_DIE1;
		sound_sight = GetSoundID("MumySight");
		sound_active = GetSoundID("MumyActive");
		sound_attack = GetSoundID("MumyAttack1");
		sound_pain = GetSoundID("MumyPain");
		sound_death = GetSoundID("MumyDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MUMMYLEADERGHOST
//
//==========================================================================

class misc_MUMMYLEADERGHOST:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		translucency = 33;
		health = 100;
		spawnhealth = health;
		radius = 22.0;
		height = 62.0;
		mass = 75.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 64;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		spawnstate = S_MUMMY_LOOK1;
		seestate = S_MUMMY_WALK1;
		meleestate = S_MUMMY_ATK1;
		missilestate = S_MUMMYL_ATK1;
		painstate = S_MUMMY_PAIN1;
		deathstate = S_MUMMY_DIE1;
		sound_sight = GetSoundID("MumySight");
		sound_active = GetSoundID("MumyActive");
		sound_attack = GetSoundID("MumyAttack1");
		sound_pain = GetSoundID("MumyPain");
		sound_death = GetSoundID("MumyDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MUMMYSOUL
//
//==========================================================================

class misc_MUMMYSOUL:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		spawnstate = S_MUMMY_SOUL1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MUMMYFX1
//
//==========================================================================

class misc_MUMMYFX1:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 14.0;
		mass = 100.0;
		speed = 315.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 4;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_MUMMYFX1_1;
		deathstate = S_MUMMYFXI1_1;
		effects = EF_DL_WHITE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BEAST
//
//==========================================================================

class misc_BEAST:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 220;
		spawnhealth = health;
		gibshealth = -110;
		radius = 32.0;
		height = 74.0;
		mass = 200.0;
		speed = 490.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 100;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		spawnstate = S_BEAST_LOOK1;
		seestate = S_BEAST_WALK1;
		missilestate = S_BEAST_ATK1;
		painstate = S_BEAST_PAIN1;
		deathstate = S_BEAST_DIE1;
		xdeathstate = S_BEAST_XDIE1;
		sound_sight = GetSoundID("BeastSight");
		sound_active = GetSoundID("BeastActive");
		sound_attack = GetSoundID("BeastAttack");
		sound_pain = GetSoundID("BeastPain");
		sound_death = GetSoundID("BeastDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BEASTBALL
//
//==========================================================================

class misc_BEASTBALL:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 9.0;
		height = 8.0;
		mass = 100.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 4;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_WINDTHRUST|MF2_NOTELEPORT;
		spawnstate = S_BEASTBALL1;
		deathstate = S_BEASTBALLX1;
		effects = EF_DL_RED;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BURNBALL
//
//==========================================================================

class misc_BURNBALL:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 6.0;
		height = 8.0;
		mass = 100.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 2;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_BURNBALL1;
		deathstate = S_BEASTBALLX1;
		effects = EF_DL_RED;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BURNBALLFB
//
//==========================================================================

class misc_BURNBALLFB:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 6.0;
		height = 8.0;
		mass = 100.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 2;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_BURNBALLFB1;
		deathstate = S_BEASTBALLX1;
		effects = EF_DL_RED;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_PUFFY
//
//==========================================================================

class misc_PUFFY:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 6.0;
		height = 8.0;
		mass = 100.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 2;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_PUFFY1;
		deathstate = S_PUFFY1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SNAKE
//
//==========================================================================

class misc_SNAKE:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 280;
		spawnhealth = health;
		radius = 22.0;
		height = 70.0;
		mass = 100.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 48;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		spawnstate = S_SNAKE_LOOK1;
		seestate = S_SNAKE_WALK1;
		missilestate = S_SNAKE_ATK1;
		painstate = S_SNAKE_PAIN1;
		deathstate = S_SNAKE_DIE1;
		sound_sight = GetSoundID("SnakeSight");
		sound_active = GetSoundID("SnakeActive");
		sound_attack = GetSoundID("SnakeAttack");
		sound_pain = GetSoundID("SnakePain");
		sound_death = GetSoundID("SnakeDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SNAKEPRO_A
//
//==========================================================================

class misc_SNAKEPRO_A:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 12.0;
		height = 8.0;
		mass = 100.0;
		speed = 490.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 1;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_WINDTHRUST|MF2_NOTELEPORT;
		spawnstate = S_SNAKEPRO_A1;
		deathstate = S_SNAKEPRO_AX1;
		effects = EF_DL_MAGENTA;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SNAKEPRO_B
//
//==========================================================================

class misc_SNAKEPRO_B:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 12.0;
		height = 8.0;
		mass = 100.0;
		speed = 490.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 3;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_SNAKEPRO_B1;
		deathstate = S_SNAKEPRO_BX1;
		effects = EF_DL_WHITE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_HEAD
//
//==========================================================================

class misc_HEAD:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 700;
		spawnhealth = health;
		radius = 40.0;
		height = 72.0;
		mass = 325.0;
		speed = 210.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 32;
		flags = MF_SOLID|MF_SHOOTABLE|MF_NOBLOOD|MF_COUNTKILL;
		flags2 = MF2_PASSMOBJ;
		spawnstate = S_HEAD_LOOK;
		seestate = S_HEAD_FLOAT;
		missilestate = S_HEAD_ATK1;
		painstate = S_HEAD_PAIN1;
		deathstate = S_HEAD_DIE1;
		sound_sight = GetSoundID("HeadSight");
		sound_active = GetSoundID("HeadActive");
		sound_attack = GetSoundID("HeadAttack1");
		sound_pain = GetSoundID("HeadPain");
		sound_death = GetSoundID("HeadDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_HEADFX1
//
//==========================================================================

class misc_HEADFX1:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 12.0;
		height = 6.0;
		mass = 100.0;
		speed = 455.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 1;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_THRUGHOST|MF2_NOTELEPORT;
		spawnstate = S_HEADFX1_1;
		deathstate = S_HEADFXI1_1;
		effects = EF_DL_BLUE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_HEADFX2
//
//==========================================================================

class misc_HEADFX2:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 12.0;
		height = 6.0;
		mass = 100.0;
		speed = 280.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 3;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_HEADFX2_1;
		deathstate = S_HEADFXI2_1;
		effects = EF_DL_BLUE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_HEADFX3
//
//==========================================================================

class misc_HEADFX3:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 14.0;
		height = 12.0;
		mass = 100.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 5;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_WINDTHRUST|MF2_NOTELEPORT;
		spawnstate = S_HEADFX3_1;
		deathstate = S_HEADFXI3_1;
		effects = EF_DL_WHITE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_WHIRLWIND
//
//==========================================================================

class misc_WHIRLWIND:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		translucency = 33;
		health = 1000;
		spawnhealth = health;
		radius = 16.0;
		height = 74.0;
		mass = 100.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 1;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_HEADFX4_1;
		deathstate = S_HEADFXI4_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_CLINK
//
//==========================================================================

class misc_CLINK:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 150;
		spawnhealth = health;
		radius = 20.0;
		height = 64.0;
		mass = 75.0;
		speed = 490.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 32;
		flags = MF_SOLID|MF_SHOOTABLE|MF_NOBLOOD|MF_COUNTKILL;
		flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		spawnstate = S_CLINK_LOOK1;
		seestate = S_CLINK_WALK1;
		meleestate = S_CLINK_ATK1;
		painstate = S_CLINK_PAIN1;
		deathstate = S_CLINK_DIE1;
		sound_sight = GetSoundID("ClinkSight");
		sound_active = GetSoundID("ClinkActive");
		sound_attack = GetSoundID("ClinkAttack");
		sound_pain = GetSoundID("ClinkPain");
		sound_death = GetSoundID("ClinkDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_WIZARD
//
//==========================================================================

class misc_WIZARD:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 180;
		spawnhealth = health;
		radius = 16.0;
		height = 68.0;
		mass = 100.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 64;
		flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_FLOAT|MF_COUNTKILL;
		flags2 = MF2_PASSMOBJ;
		spawnstate = S_WIZARD_LOOK1;
		seestate = S_WIZARD_WALK1;
		missilestate = S_WIZARD_ATK1;
		painstate = S_WIZARD_PAIN1;
		deathstate = S_WIZARD_DIE1;
		sound_sight = GetSoundID("WizardSight");
		sound_active = GetSoundID("WizardActive");
		sound_attack = GetSoundID("WizardAttack");
		sound_pain = GetSoundID("WizardPain");
		sound_death = GetSoundID("WizardDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_WIZFX1
//
//==========================================================================

class misc_WIZFX1:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 10.0;
		height = 6.0;
		mass = 100.0;
		speed = 630.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 3;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_WIZFX1_1;
		deathstate = S_WIZFXI1_1;
		effects = EF_DL_MAGENTA;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_IMP
//
//==========================================================================

class misc_IMP:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 40;
		spawnhealth = health;
		gibshealth = -20;
		radius = 16.0;
		height = 36.0;
		mass = 50.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 200;
		flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_FLOAT|MF_COUNTKILL;
		flags2 = MF2_SPAWNFLOAT|MF2_PASSMOBJ;
		spawnstate = S_IMP_LOOK1;
		seestate = S_IMP_FLY1;
		meleestate = S_IMP_MEATK1;
		missilestate = S_IMP_MSATK1_1;
		painstate = S_IMP_PAIN1;
		crashstate = S_IMP_CRASH1;
		deathstate = S_IMP_DIE1;
		xdeathstate = S_IMP_XDIE1;
		sound_sight = GetSoundID("ImpSight");
		sound_active = GetSoundID("ImpActive");
		sound_attack = GetSoundID("ImpAttack1");
		sound_pain = GetSoundID("ImpPain");
		sound_death = GetSoundID("ImpDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_IMPLEADER
//
//==========================================================================

class misc_IMPLEADER:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 80;
		spawnhealth = health;
		gibshealth = -40;
		radius = 16.0;
		height = 36.0;
		mass = 50.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 200;
		flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_FLOAT|MF_COUNTKILL;
		flags2 = MF2_SPAWNFLOAT|MF2_PASSMOBJ;
		spawnstate = S_IMP_LOOK1;
		seestate = S_IMP_FLY1;
		missilestate = S_IMP_MSATK2_1;
		painstate = S_IMP_PAIN1;
		crashstate = S_IMP_CRASH1;
		deathstate = S_IMP_DIE1;
		xdeathstate = S_IMP_XDIE1;
		sound_sight = GetSoundID("ImpSight");
		sound_active = GetSoundID("ImpActive");
		sound_attack = GetSoundID("ImpAttack2");
		sound_pain = GetSoundID("ImpPain");
		sound_death = GetSoundID("ImpDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_IMPCHUNK1
//
//==========================================================================

class misc_IMPCHUNK1:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP;
		spawnstate = S_IMP_CHUNKA1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_IMPCHUNK2
//
//==========================================================================

class misc_IMPCHUNK2:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP;
		spawnstate = S_IMP_CHUNKB1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_IMPBALL
//
//==========================================================================

class misc_IMPBALL:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 8.0;
		mass = 100.0;
		speed = 350.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 1;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_WINDTHRUST|MF2_NOTELEPORT;
		spawnstate = S_IMPFX1;
		deathstate = S_IMPFXI1;
		effects = EF_DL_WHITE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_KNIGHT
//
//==========================================================================

class misc_KNIGHT:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 200;
		spawnhealth = health;
		radius = 24.0;
		height = 78.0;
		mass = 150.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 100;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		spawnstate = S_KNIGHT_STND1;
		seestate = S_KNIGHT_WALK1;
		meleestate = S_KNIGHT_ATK1;
		missilestate = S_KNIGHT_ATK1;
		painstate = S_KNIGHT_PAIN1;
		deathstate = S_KNIGHT_DIE1;
		sound_sight = GetSoundID("KnightSight");
		sound_active = GetSoundID("KnightActive");
		sound_attack = GetSoundID("KnightAttack1");
		sound_pain = GetSoundID("KnightPain");
		sound_death = GetSoundID("KnightDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_KNIGHTGHOST
//
//==========================================================================

class misc_KNIGHTGHOST:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		translucency = 33;
		health = 200;
		spawnhealth = health;
		radius = 24.0;
		height = 78.0;
		mass = 150.0;
		speed = 420.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 100;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ;
		spawnstate = S_KNIGHT_STND1;
		seestate = S_KNIGHT_WALK1;
		meleestate = S_KNIGHT_ATK1;
		missilestate = S_KNIGHT_ATK1;
		painstate = S_KNIGHT_PAIN1;
		deathstate = S_KNIGHT_DIE1;
		sound_sight = GetSoundID("KnightSight");
		sound_active = GetSoundID("KnightActive");
		sound_attack = GetSoundID("KnightAttack1");
		sound_pain = GetSoundID("KnightPain");
		sound_death = GetSoundID("KnightDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_KNIGHTAXE
//
//==========================================================================

class misc_KNIGHTAXE:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 10.0;
		height = 8.0;
		mass = 100.0;
		speed = 315.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 2;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_WINDTHRUST|MF2_THRUGHOST|MF2_NOTELEPORT;
		spawnstate = S_SPINAXE1;
		deathstate = S_SPINAXEX1;
		sound_death = GetSoundID("SkullRodHit");
		effects = EF_DL_GREEN;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_REDAXE
//
//==========================================================================

class misc_REDAXE:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 10.0;
		height = 8.0;
		mass = 100.0;
		speed = 315.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 7;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_THRUGHOST|MF2_NOTELEPORT;
		spawnstate = S_REDAXE1;
		deathstate = S_REDAXEX1;
		sound_death = GetSoundID("SkullRodHit");
		effects = EF_DL_RED;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SORCERER1
//
//==========================================================================

class misc_SORCERER1:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 2000;
		spawnhealth = health;
		radius = 28.0;
		height = 100.0;
		mass = 800.0;
		speed = 560.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 56;
		flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
		flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ|MF2_BOSS;
		spawnstate = S_SRCR1_LOOK1;
		seestate = S_SRCR1_WALK1;
		missilestate = S_SRCR1_ATK1;
		painstate = S_SRCR1_PAIN1;
		deathstate = S_SRCR1_DIE1;
		sound_sight = GetSoundID("SorcererDemonSight");
		sound_active = GetSoundID("SorcererDemonActive");
		sound_attack = GetSoundID("SorcererDemonAttack");
		sound_pain = GetSoundID("SorcererDemonPain");
		sound_death = GetSoundID("SorcererDemonDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SRCRFX1
//
//==========================================================================

class misc_SRCRFX1:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 10.0;
		height = 10.0;
		mass = 100.0;
		speed = 700.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 10;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT|MF2_FIREDAMAGE;
		spawnstate = S_SRCRFX1_1;
		deathstate = S_SRCRFXI1_1;
		effects = EF_DL_WHITE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SORCERER2
//
//==========================================================================

class misc_SORCERER2:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 3500;
		spawnhealth = health;
		radius = 16.0;
		height = 70.0;
		mass = 300.0;
		speed = 490.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 32;
		flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_COUNTKILL;
		flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ|MF2_BOSS;
		spawnstate = S_SOR2_LOOK1;
		seestate = S_SOR2_WALK1;
		missilestate = S_SOR2_ATK1;
		painstate = S_SOR2_PAIN1;
		deathstate = S_SOR2_DIE1;
		sound_sight = GetSoundID("SorcererSight");
		sound_active = GetSoundID("SorcererActive");
		sound_attack = GetSoundID("SorcererAttack");
		sound_pain = GetSoundID("SorcererPain");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SOR2FX1
//
//==========================================================================

class misc_SOR2FX1:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 10.0;
		height = 6.0;
		mass = 100.0;
		speed = 700.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 1;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_SOR2FX1_1;
		deathstate = S_SOR2FXI1_1;
		effects = EF_DL_BLUE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SOR2FXSPARK
//
//==========================================================================

class misc_SOR2FXSPARK:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
		flags2 = MF2_NOTELEPORT|MF2_CANNOTPUSH;
		spawnstate = S_SOR2FXSPARK1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SOR2FX2
//
//==========================================================================

class misc_SOR2FX2:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 10.0;
		height = 6.0;
		mass = 100.0;
		speed = 210.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 10;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT;
		spawnstate = S_SOR2FX2_1;
		deathstate = S_SOR2FXI2_1;
		effects = EF_DL_BLUE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SOR2TELEFADE
//
//==========================================================================

class misc_SOR2TELEFADE:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOBLOCKMAP;
		spawnstate = S_SOR2TELEFADE1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MINOTAUR
//
//==========================================================================

class misc_MINOTAUR:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (nomonsters)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 3000;
		spawnhealth = health;
		radius = 28.0;
		height = 100.0;
		mass = 800.0;
		speed = 560.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		painchance = 25;
		damage = 7;
		flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_COUNTKILL;
		flags2 = MF2_FOOTCLIP|MF2_PASSMOBJ|MF2_BOSS;
		spawnstate = S_MNTR_LOOK1;
		seestate = S_MNTR_WALK1;
		meleestate = S_MNTR_ATK1_1;
		missilestate = S_MNTR_ATK2_1;
		painstate = S_MNTR_PAIN1;
		deathstate = S_MNTR_DIE1;
		sound_sight = GetSoundID("MinotaurSight");
		sound_active = GetSoundID("MinotaurActive");
		sound_attack = GetSoundID("MinotaurAttack1");
		sound_pain = GetSoundID("MinotaurPain");
		sound_death = GetSoundID("MinotaurDeath");
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MNTRFX1
//
//==========================================================================

class misc_MNTRFX1:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 10.0;
		height = 6.0;
		mass = 100.0;
		speed = 700.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 3;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT|MF2_FIREDAMAGE;
		spawnstate = S_MNTRFX1_1;
		deathstate = S_MNTRFXI1_1;
		effects = EF_DL_WHITE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MNTRFX2
//
//==========================================================================

class misc_MNTRFX2:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 5.0;
		height = 12.0;
		mass = 100.0;
		speed = 490.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 4;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT|MF2_FIREDAMAGE;
		spawnstate = S_MNTRFX2_1;
		deathstate = S_MNTRFXI2_1;
		sound_death = GetSoundID("PhoenixHit");
		effects = EF_DL_WHITE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_MNTRFX3
//
//==========================================================================

class misc_MNTRFX3:Missile
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 8.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		damage = 4;
		flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
		flags2 = MF2_NOTELEPORT|MF2_FIREDAMAGE;
		spawnstate = S_MNTRFX3_1;
		deathstate = S_MNTRFXI2_1;
		sound_death = GetSoundID("PhoenixHit");
		effects = EF_DL_WHITE;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_AKYY
//
//==========================================================================

class misc_AKYY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (deathmatch)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AKYY1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_BKYY
//
//==========================================================================

class misc_BKYY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (deathmatch)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_BKYY1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_CKEY
//
//==========================================================================

class misc_CKEY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		if (deathmatch)
		{
			RemoveMobjThinker(this);
			return;
		}
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_CKYY1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_AMGWNDWIMPY
//
//==========================================================================

class misc_AMGWNDWIMPY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 10;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AMG1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_AMGWNDHEFTY
//
//==========================================================================

class misc_AMGWNDHEFTY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 50;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AMG2_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_AMMACEWIMPY
//
//==========================================================================

class misc_AMMACEWIMPY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 20;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AMM1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_AMMACEHEFTY
//
//==========================================================================

class misc_AMMACEHEFTY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 100;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AMM2;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_AMCBOWWIMPY
//
//==========================================================================

class misc_AMCBOWWIMPY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 5;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AMC1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_AMCBOWHEFTY
//
//==========================================================================

class misc_AMCBOWHEFTY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 20;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AMC2_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_AMSKRDWIMPY
//
//==========================================================================

class misc_AMSKRDWIMPY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 20;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AMS1_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_AMSKRDHEFTY
//
//==========================================================================

class misc_AMSKRDHEFTY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 100;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AMS2_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_AMPHRDWIMPY
//
//==========================================================================

class misc_AMPHRDWIMPY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AMP1_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_AMPHRDHEFTY
//
//==========================================================================

class misc_AMPHRDHEFTY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 10;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AMP2_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_AMBLSRWIMPY
//
//==========================================================================

class misc_AMBLSRWIMPY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 10;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AMB1_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_AMBLSRHEFTY
//
//==========================================================================

class misc_AMBLSRHEFTY:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 25;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_SPECIAL;
		spawnstate = S_AMB2_1;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SOUNDWIND
//
//==========================================================================

class misc_SOUNDWIND:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOSECTOR|MF_NOBLOCKMAP;
		spawnstate = S_SND_WIND;
		::OnMapSpawn(mthing);
	}
};

//==========================================================================
//
//	misc_SOUNDWATERFALL
//
//==========================================================================

class misc_SOUNDWATERFALL:Actor
{
	void OnMapSpawn(mthing_t *mthing)
	{
		health = 1000;
		spawnhealth = health;
		radius = 20.0;
		height = 16.0;
		mass = 100.0;
		if (gameskill != sk_nightmare)
			reactiontime = 8;
		flags = MF_NOSECTOR|MF_NOBLOCKMAP;
		spawnstate = S_SND_WATERFALL;
		::OnMapSpawn(mthing);
	}
};

__mobjinfo__
{
	MT_MISC0 { 81, misc_MISC0 }
	MT_ITEMSHIELD1 { 85, misc_ITEMSHIELD1 }
	MT_ITEMSHIELD2 { 31, misc_ITEMSHIELD2 }
	MT_MISC1 { 8, misc_MISC1 }
	MT_MISC2 { 35, misc_MISC2 }
	MT_ARTIINVISIBILITY { 75, misc_ARTIINVISIBILITY }
	MT_MISC3 { 82, misc_MISC3 }
	MT_ARTIFLY { 83, misc_ARTIFLY }
	MT_ARTIINVULNERABILITY { 84, misc_ARTIINVULNERABILITY }
	MT_ARTITOMEOFPOWER { 86, misc_ARTITOMEOFPOWER }
	MT_ARTIEGG { 30, misc_ARTIEGG }
	MT_EGGFX { -1, misc_EGGFX }
	MT_ARTISUPERHEAL { 32, misc_ARTISUPERHEAL }
	MT_MISC4 { 33, misc_MISC4 }
	MT_MISC5 { 34, misc_MISC5 }
	MT_FIREBOMB { -1, misc_FIREBOMB }
	MT_ARTITELEPORT { 36, misc_ARTITELEPORT }
	MT_POD { 2035, misc_POD }
	MT_PODGOO { -1, misc_PODGOO }
	MT_PODGENERATOR { 43, misc_PODGENERATOR }
	MT_SPLASH { -1, misc_SPLASH }
	MT_SPLASHBASE { -1, misc_SPLASHBASE }
	MT_LAVASPLASH { -1, misc_LAVASPLASH }
	MT_LAVASMOKE { -1, misc_LAVASMOKE }
	MT_SLUDGECHUNK { -1, misc_SLUDGECHUNK }
	MT_SLUDGESPLASH { -1, misc_SLUDGESPLASH }
	MT_SKULLHANG70 { 17, misc_SKULLHANG70 }
	MT_SKULLHANG60 { 24, misc_SKULLHANG60 }
	MT_SKULLHANG45 { 25, misc_SKULLHANG45 }
	MT_SKULLHANG35 { 26, misc_SKULLHANG35 }
	MT_CHANDELIER { 28, misc_CHANDELIER }
	MT_SERPTORCH { 27, misc_SERPTORCH }
	MT_SMALLPILLAR { 29, misc_SMALLPILLAR }
	MT_STALAGMITESMALL { 37, misc_STALAGMITESMALL }
	MT_STALAGMITELARGE { 38, misc_STALAGMITELARGE }
	MT_STALACTITESMALL { 39, misc_STALACTITESMALL }
	MT_STALACTITELARGE { 40, misc_STALACTITELARGE }
	MT_MISC6 { 76, misc_MISC6 }
	MT_BARREL { 44, misc_BARREL }
	MT_MISC7 { 47, misc_MISC7 }
	MT_MISC8 { 48, misc_MISC8 }
	MT_MISC9 { 49, misc_MISC9 }
	MT_MISC10 { 50, misc_MISC10 }
	MT_MISC11 { 51, misc_MISC11 }
	MT_KEYGIZMOBLUE { 94, misc_KEYGIZMOBLUE }
	MT_KEYGIZMOGREEN { 95, misc_KEYGIZMOGREEN }
	MT_KEYGIZMOYELLOW { 96, misc_KEYGIZMOYELLOW }
	MT_KEYGIZMOFLOAT { -1, misc_KEYGIZMOFLOAT }
	MT_MISC12 { 87, misc_MISC12 }
	MT_VOLCANOBLAST { -1, misc_VOLCANOBLAST }
	MT_VOLCANOTBLAST { -1, misc_VOLCANOTBLAST }
	MT_TELEGLITGEN { 74, misc_TELEGLITGEN }
	MT_TELEGLITGEN2 { 52, misc_TELEGLITGEN2 }
	MT_TELEGLITTER { -1, misc_TELEGLITTER }
	MT_TELEGLITTER2 { -1, misc_TELEGLITTER2 }
	MT_TFOG { -1, misc_TFOG }
	MT_TELEPORTMAN { 14, misc_TELEPORTMAN }
	MT_STAFFPUFF { -1, misc_STAFFPUFF }
	MT_STAFFPUFF2 { -1, misc_STAFFPUFF2 }
	MT_BEAKPUFF { -1, misc_BEAKPUFF }
	MT_MISC13 { 2005, misc_MISC13 }
	MT_GAUNTLETPUFF1 { -1, misc_GAUNTLETPUFF1 }
	MT_GAUNTLETPUFF2 { -1, misc_GAUNTLETPUFF2 }
	MT_MISC14 { 53, misc_MISC14 }
	MT_BLASTERFX1 { -1, misc_BLASTERFX1 }
	MT_BLASTERSMOKE { -1, misc_BLASTERSMOKE }
	MT_RIPPER { -1, misc_RIPPER }
	MT_BLASTERPUFF1 { -1, misc_BLASTERPUFF1 }
	MT_BLASTERPUFF2 { -1, misc_BLASTERPUFF2 }
	MT_WMACE { 2002, misc_WMACE }
	MT_MACEFX1 { -1, misc_MACEFX1 }
	MT_MACEFX2 { -1, misc_MACEFX2 }
	MT_MACEFX3 { -1, misc_MACEFX3 }
	MT_MACEFX4 { -1, misc_MACEFX4 }
	MT_WSKULLROD { 2004, misc_WSKULLROD }
	MT_HORNRODFX1 { -1, misc_HORNRODFX1 }
	MT_HORNRODFX2 { -1, misc_HORNRODFX2 }
	MT_RAINPLR1 { -1, misc_RAINPLR1 }
	MT_RAINPLR2 { -1, misc_RAINPLR2 }
	MT_RAINPLR3 { -1, misc_RAINPLR3 }
	MT_RAINPLR4 { -1, misc_RAINPLR4 }
	MT_GOLDWANDFX1 { -1, misc_GOLDWANDFX1 }
	MT_GOLDWANDFX2 { -1, misc_GOLDWANDFX2 }
	MT_GOLDWANDPUFF1 { -1, misc_GOLDWANDPUFF1 }
	MT_GOLDWANDPUFF2 { -1, misc_GOLDWANDPUFF2 }
	MT_WPHOENIXROD { 2003, misc_WPHOENIXROD }
	MT_PHOENIXFX1 { -1, misc_PHOENIXFX1 }
	MT_PHOENIXPUFF { -1, misc_PHOENIXPUFF }
	MT_PHOENIXFX2 { -1, misc_PHOENIXFX2 }
	MT_MISC15 { 2001, misc_MISC15 }
	MT_CRBOWFX1 { -1, misc_CRBOWFX1 }
	MT_CRBOWFX2 { -1, misc_CRBOWFX2 }
	MT_CRBOWFX3 { -1, misc_CRBOWFX3 }
	MT_CRBOWFX4 { -1, misc_CRBOWFX4 }
	MT_BLOOD { -1, misc_BLOOD }
	MT_BLOODSPLATTER { -1, misc_BLOODSPLATTER }
	MT_PLAYER { -1, misc_PLAYER }
	MT_BLOODYSKULL { -1, misc_BLOODYSKULL }
	MT_CHICPLAYER { -1, misc_CHICPLAYER }
	MT_CHICKEN { -1, misc_CHICKEN }
	MT_FEATHER { -1, misc_FEATHER }
	MT_MUMMY { 68, misc_MUMMY }
	MT_MUMMYLEADER { 45, misc_MUMMYLEADER }
	MT_MUMMYGHOST { 69, misc_MUMMYGHOST }
	MT_MUMMYLEADERGHOST { 46, misc_MUMMYLEADERGHOST }
	MT_MUMMYSOUL { -1, misc_MUMMYSOUL }
	MT_MUMMYFX1 { -1, misc_MUMMYFX1 }
	MT_BEAST { 70, misc_BEAST }
	MT_BEASTBALL { -1, misc_BEASTBALL }
	MT_BURNBALL { -1, misc_BURNBALL }
	MT_BURNBALLFB { -1, misc_BURNBALLFB }
	MT_PUFFY { -1, misc_PUFFY }
	MT_SNAKE { 92, misc_SNAKE }
	MT_SNAKEPRO_A { -1, misc_SNAKEPRO_A }
	MT_SNAKEPRO_B { -1, misc_SNAKEPRO_B }
	MT_HEAD { 6, misc_HEAD }
	MT_HEADFX1 { -1, misc_HEADFX1 }
	MT_HEADFX2 { -1, misc_HEADFX2 }
	MT_HEADFX3 { -1, misc_HEADFX3 }
	MT_WHIRLWIND { -1, misc_WHIRLWIND }
	MT_CLINK { 90, misc_CLINK }
	MT_WIZARD { 15, misc_WIZARD }
	MT_WIZFX1 { -1, misc_WIZFX1 }
	MT_IMP { 66, misc_IMP }
	MT_IMPLEADER { 5, misc_IMPLEADER }
	MT_IMPCHUNK1 { -1, misc_IMPCHUNK1 }
	MT_IMPCHUNK2 { -1, misc_IMPCHUNK2 }
	MT_IMPBALL { -1, misc_IMPBALL }
	MT_KNIGHT { 64, misc_KNIGHT }
	MT_KNIGHTGHOST { 65, misc_KNIGHTGHOST }
	MT_KNIGHTAXE { -1, misc_KNIGHTAXE }
	MT_REDAXE { -1, misc_REDAXE }
	MT_SORCERER1 { 7, misc_SORCERER1 }
	MT_SRCRFX1 { -1, misc_SRCRFX1 }
	MT_SORCERER2 { -1, misc_SORCERER2 }
	MT_SOR2FX1 { -1, misc_SOR2FX1 }
	MT_SOR2FXSPARK { -1, misc_SOR2FXSPARK }
	MT_SOR2FX2 { -1, misc_SOR2FX2 }
	MT_SOR2TELEFADE { -1, misc_SOR2TELEFADE }
	MT_MINOTAUR { 9, misc_MINOTAUR }
	MT_MNTRFX1 { -1, misc_MNTRFX1 }
	MT_MNTRFX2 { -1, misc_MNTRFX2 }
	MT_MNTRFX3 { -1, misc_MNTRFX3 }
	MT_AKYY { 73, misc_AKYY }
	MT_BKYY { 79, misc_BKYY }
	MT_CKEY { 80, misc_CKEY }
	MT_AMGWNDWIMPY { 10, misc_AMGWNDWIMPY }
	MT_AMGWNDHEFTY { 12, misc_AMGWNDHEFTY }
	MT_AMMACEWIMPY { 13, misc_AMMACEWIMPY }
	MT_AMMACEHEFTY { 16, misc_AMMACEHEFTY }
	MT_AMCBOWWIMPY { 18, misc_AMCBOWWIMPY }
	MT_AMCBOWHEFTY { 19, misc_AMCBOWHEFTY }
	MT_AMSKRDWIMPY { 20, misc_AMSKRDWIMPY }
	MT_AMSKRDHEFTY { 21, misc_AMSKRDHEFTY }
	MT_AMPHRDWIMPY { 22, misc_AMPHRDWIMPY }
	MT_AMPHRDHEFTY { 23, misc_AMPHRDHEFTY }
	MT_AMBLSRWIMPY { 54, misc_AMBLSRWIMPY }
	MT_AMBLSRHEFTY { 55, misc_AMBLSRHEFTY }
	MT_SOUNDWIND { 42, misc_SOUNDWIND }
	MT_SOUNDWATERFALL { 41, misc_SOUNDWATERFALL }
}

//**************************************************************************
//
//	$Log$
//	Revision 1.6  2001/10/18 17:39:33  dj_jl
//	A lots of changes for Alpha 2
//
//	Revision 1.5  2001/10/02 17:42:38  dj_jl
//	Possibility to declare function's code inside class declaration
//	
//	Revision 1.4  2001/09/27 17:08:19  dj_jl
//	Removed spawn functions, added mobj classes
//	
//	Revision 1.3  2001/09/20 16:19:59  dj_jl
//	Start using object-oriented stuff, beautification
//	
//	Revision 1.2  2001/07/27 14:27:52  dj_jl
//	Update with Id-s and Log-s, some fixes
//
//**************************************************************************
