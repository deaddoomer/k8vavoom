//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//**************************************************************************
//
//	SkullHang70
//
//**************************************************************************

class SkullHang70:Decoration
	__mobjinfo__(17)
{

__states__
{
	S_SKULLHANG70_1('SKH1', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 20.0;
	Height = 70.0;
	bSpawnCeiling = true;
	bNoGravity = true;
	IdleState = S_SKULLHANG70_1;
}

}

//**************************************************************************
//
//	SkullHang60
//
//**************************************************************************

class SkullHang60:Decoration
	__mobjinfo__(24)
{

__states__
{
	S_SKULLHANG60_1('SKH2', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 20.0;
	Height = 60.0;
	bSpawnCeiling = true;
	bNoGravity = true;
	IdleState = S_SKULLHANG60_1;
}

}

//**************************************************************************
//
//	SkullHang45
//
//**************************************************************************

class SkullHang45:Decoration
	__mobjinfo__(25)
{

__states__
{
	S_SKULLHANG45_1('SKH3', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 20.0;
	Height = 45.0;
	bSpawnCeiling = true;
	bNoGravity = true;
	IdleState = S_SKULLHANG45_1;
}

}

//**************************************************************************
//
//	SkullHang35
//
//**************************************************************************

class SkullHang35:Decoration
	__mobjinfo__(26)
{

__states__
{
	S_SKULLHANG35_1('SKH4', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 20.0;
	Height = 35.0;
	bSpawnCeiling = true;
	bNoGravity = true;
	IdleState = S_SKULLHANG35_1;
}

}

//**************************************************************************
//
//	Chandelier
//
//**************************************************************************

class Chandelier:Decoration
	__mobjinfo__(28)
{

void OnMapSpawn(mthing_t *mthing)
{
	::OnMapSpawn(mthing);
	AddStaticLight(Origin,
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
}

__states__
{
	S_CHANDELIER1('CHDL', 0, 'lights/chandelr.md2', 0, 4.0 / 35.0, S_CHANDELIER2) { }
	S_CHANDELIER2('CHDL', 1, 'lights/chandelr.md2', 0, 4.0 / 35.0, S_CHANDELIER3) { }
	S_CHANDELIER3('CHDL', 2, 'lights/chandelr.md2', 0, 4.0 / 35.0, S_CHANDELIER1) { }
}

defaultproperties
{
	Radius = 20.0;
	Height = 60.0;
	bSpawnCeiling = true;
	bNoGravity = true;
	IdleState = S_CHANDELIER1;
}

}

//**************************************************************************
//
//	SerpentTorch
//
//**************************************************************************

class SerpentTorch:Decoration
	__mobjinfo__(27)
{

void OnMapSpawn(mthing_t *mthing)
{
	::OnMapSpawn(mthing);
	AddStaticLight(Origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 128.0);
}

__states__
{
	S_SERPTORCH1('SRTC', 0, 'lights/serptrch.md2', 0, 4.0 / 35.0, S_SERPTORCH2) { }
	S_SERPTORCH2('SRTC', 1, 'lights/serptrch.md2', 0, 4.0 / 35.0, S_SERPTORCH3) { }
	S_SERPTORCH3('SRTC', 2, 'lights/serptrch.md2', 0, 4.0 / 35.0, S_SERPTORCH1) { }
}

defaultproperties
{
	Radius = 12.0;
	Height = 54.0;
	bSolid = true;
	IdleState = S_SERPTORCH1;
}

}

//**************************************************************************
//
//	SmallPillar
//
//**************************************************************************

class SmallPillar:Decoration
	__mobjinfo__(29)
{

__states__
{
	S_SMALLPILLAR('SMPL', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 16.0;
	Height = 34.0;
	bSolid = true;
	IdleState = S_SMALLPILLAR;
}

}

//**************************************************************************
//
//	StalagmiteSmall
//
//**************************************************************************

class StalagmiteSmall:Decoration
	__mobjinfo__(37)
{

__states__
{
	S_STALAGMITESMALL('STGS', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 8.0;
	Height = 32.0;
	bSolid = true;
	IdleState = S_STALAGMITESMALL;
}

}

//**************************************************************************
//
//	StalagmiteLarge
//
//**************************************************************************

class StalagmiteLarge:Decoration
	__mobjinfo__(38)
{

__states__
{
	S_STALAGMITELARGE('STGL', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 12.0;
	Height = 64.0;
	bSolid = true;
	IdleState = S_STALAGMITELARGE;
}

}

//**************************************************************************
//
//	StalactiteSmall
//
//**************************************************************************

class StalactiteSmall:Decoration
	__mobjinfo__(39)
{

__states__
{
	S_STALACTITESMALL('STCS', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 8.0;
	Height = 36.0;
	bSolid = true;
	bSpawnCeiling = true;
	bNoGravity = true;
	IdleState = S_STALACTITESMALL;
}

}

//**************************************************************************
//
//	StalactiteLarge
//
//**************************************************************************

class StalactiteLarge:Decoration
	__mobjinfo__(40)
{

__states__
{
	S_STALACTITELARGE('STCL', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 12.0;
	Height = 68.0;
	bSolid = true;
	bSpawnCeiling = true;
	bNoGravity = true;
	IdleState = S_STALACTITELARGE;
}

}

//**************************************************************************
//
//	FireBrazier
//
//**************************************************************************

class FireBrazier:Decoration
	__mobjinfo__(76)
{

void OnMapSpawn(mthing_t *mthing)
{
	::OnMapSpawn(mthing);
	AddStaticLight(Origin + vector(0.0, 0.0, 32.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
}

__states__
{
	S_FIREBRAZIER1('KFR1', 0 | FF_FULLBRIGHT, 3.0 / 35.0, S_FIREBRAZIER2) { }
	S_FIREBRAZIER2('KFR1', 1 | FF_FULLBRIGHT, 3.0 / 35.0, S_FIREBRAZIER3) { }
	S_FIREBRAZIER3('KFR1', 2 | FF_FULLBRIGHT, 3.0 / 35.0, S_FIREBRAZIER4) { }
	S_FIREBRAZIER4('KFR1', 3 | FF_FULLBRIGHT, 3.0 / 35.0, S_FIREBRAZIER5) { }
	S_FIREBRAZIER5('KFR1', 4 | FF_FULLBRIGHT, 3.0 / 35.0, S_FIREBRAZIER6) { }
	S_FIREBRAZIER6('KFR1', 5 | FF_FULLBRIGHT, 3.0 / 35.0, S_FIREBRAZIER7) { }
	S_FIREBRAZIER7('KFR1', 6 | FF_FULLBRIGHT, 3.0 / 35.0, S_FIREBRAZIER8) { }
	S_FIREBRAZIER8('KFR1', 7 | FF_FULLBRIGHT, 3.0 / 35.0, S_FIREBRAZIER1) { }
}

defaultproperties
{
	Radius = 16.0;
	Height = 44.0;
	bSolid = true;
	IdleState = S_FIREBRAZIER1;
}

}

//**************************************************************************
//
//	Barrel
//
//**************************************************************************

class Barrel:Decoration
	__mobjinfo__(44)
{

__states__
{
	S_BARREL('BARL', 0, 'objects/barrel.md2', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 12.0;
	Height = 32.0;
	bSolid = true;
	IdleState = S_BARREL;
}

}

//**************************************************************************
//
//	BrownPillar
//
//**************************************************************************

class BrownPillar:Decoration
	__mobjinfo__(47)
{

__states__
{
	S_BRPILLAR('BRPL', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 14.0;
	Height = 128.0;
	bSolid = true;
	IdleState = S_BRPILLAR;
}

}

//**************************************************************************
//
//	Moss1
//
//**************************************************************************

class Moss1:Decoration
	__mobjinfo__(48)
{

__states__
{
	S_MOSS1('MOS1', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 20.0;
	Height = 23.0;
	bSpawnCeiling = true;
	bNoGravity = true;
	IdleState = S_MOSS1;
}

}

//**************************************************************************
//
//	Moss2
//
//**************************************************************************

class Moss2:Decoration
	__mobjinfo__(49)
{

__states__
{
	S_MOSS2('MOS2', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 20.0;
	Height = 27.0;
	bSpawnCeiling = true;
	bNoGravity = true;
	IdleState = S_MOSS2;
}

}

//**************************************************************************
//
//	WallTorch
//
//**************************************************************************

class WallTorch:Decoration
	__mobjinfo__(50)
{

void OnMapSpawn(mthing_t *mthing)
{
	::OnMapSpawn(mthing);
	AddStaticLight(Origin + vector(0.0, 0.0, 80.0),
		mthing->arg1 ? itof(mthing->arg1) * 8.0 : 200.0);
}

__states__
{
	S_WALLTORCH1('WTRH', 0 | FF_FULLBRIGHT, 'lights/torch.md2', 0, 6.0 / 35.0, S_WALLTORCH2) { }
	S_WALLTORCH2('WTRH', 1 | FF_FULLBRIGHT, 'lights/torch.md2', 1, 6.0 / 35.0, S_WALLTORCH3) { }
	S_WALLTORCH3('WTRH', 2 | FF_FULLBRIGHT, 'lights/torch.md2', 2, 6.0 / 35.0, S_WALLTORCH1) { }
}

defaultproperties
{
	Radius = 20.0;
	Height = 16.0;
	bNoGravity = true;
	IdleState = S_WALLTORCH1;
}

}

//**************************************************************************
//
//	HangingCorpse
//
//**************************************************************************

class HangingCorpse:Decoration
	__mobjinfo__(51)
{

__states__
{
	S_HANGINGCORPSE('HCOR', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 8.0;
	Height = 104.0;
	bSolid = true;
	bSpawnCeiling = true;
	bNoGravity = true;
	IdleState = S_HANGINGCORPSE;
}

}

//**************************************************************************
//
//	KeyGizmoFloat
//
//**************************************************************************

class KeyGizmoFloat:Decoration
{

__states__
{
	S_KGZ_START('KGZB', 0, 1.0 / 35.0, S_KGZ_START) { }
	S_KGZ_BLUEFLOAT1('KGZB', 0 | FF_FULLBRIGHT, -1.0, S_NULL) { }
	S_KGZ_GREENFLOAT1('KGZG', 0 | FF_FULLBRIGHT, -1.0, S_NULL) { }
	S_KGZ_YELLOWFLOAT1('KGZY', 0 | FF_FULLBRIGHT, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 16.0;
	Height = 16.0;
	bSolid = true;
	bNoGravity = true;
	IdleState = S_KGZ_START;
}

}

//**************************************************************************
//
//	KeyGizmoBlue
//
//**************************************************************************

class KeyGizmoBlue:Decoration
	__mobjinfo__(94)
{

int GizmoFloatState;

//==========================================================================
//
//  A_InitKeyGizmo
//
//==========================================================================

void A_InitKeyGizmo(void)
{
	Actor A;

	A = Spawn(KeyGizmoFloat, Origin + vector(0.0, 0.0, 60.0));
	A.SetState(GizmoFloatState);
}

__states__
{
	S_KEYGIZMO1('KGZ1', 0, 1.0 / 35.0, S_KEYGIZMO2) { }
	S_KEYGIZMO2('KGZ1', 0, 1.0 / 35.0, S_KEYGIZMO3) { A_InitKeyGizmo(); }
	S_KEYGIZMO3('KGZ1', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	Radius = 16.0;
	Height = 50.0;
	bSolid = true;
	IdleState = S_KEYGIZMO1;
	GizmoFloatState = S_KGZ_BLUEFLOAT1;
}

}

//**************************************************************************
//
//	KeyGizmoGreen
//
//**************************************************************************

class KeyGizmoGreen:KeyGizmoBlue
	__mobjinfo__(95)
{

defaultproperties
{
	GizmoFloatState = S_KGZ_GREENFLOAT1;
}

}

//**************************************************************************
//
//	KeyGizmoYellow
//
//**************************************************************************

class KeyGizmoYellow:KeyGizmoBlue
	__mobjinfo__(96)
{

defaultproperties
{
	GizmoFloatState = S_KGZ_YELLOWFLOAT1;
}

}

//**************************************************************************
//
//  $Log$
//  Revision 1.2  2002/07/13 07:58:51  dj_jl
//  Added new models, updated existing ones.
//
//  Revision 1.1  2002/06/22 07:16:00  dj_jl
//  Added base classes for objects, split them into corresponding files.
//
//**************************************************************************
