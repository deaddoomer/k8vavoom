//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//**************************************************************************
//**************************************************************************
//
//	Beast
//
//**************************************************************************
//**************************************************************************

class Beast:Pawn
	__mobjinfo__(70)
{

//==========================================================================
//
//  A_BeastAttack
//
//==========================================================================

void A_BeastAttack(void)
{
	if (!Enemy)
	{
		return;
	}
	PlaySound(AttackSound, CHAN_WEAPON);
	if (CheckMeleeRange())
	{
		Enemy.Damage(self, self, HITDICE(3));
		return;
	}
	SpawnMissile(Enemy, BeastBall);
}

__states__
{
	S_BEAST_LOOK1('BEAS', 0, 10.0 / 35.0, S_BEAST_LOOK2) { A_Look(); }
	S_BEAST_LOOK2('BEAS', 1, 10.0 / 35.0, S_BEAST_LOOK1) { A_Look(); }
	S_BEAST_WALK1('BEAS', 0, 3.0 / 35.0, S_BEAST_WALK2) { A_Chase(); }
	S_BEAST_WALK2('BEAS', 1, 3.0 / 35.0, S_BEAST_WALK3) { A_Chase(); }
	S_BEAST_WALK3('BEAS', 2, 3.0 / 35.0, S_BEAST_WALK4) { A_Chase(); }
	S_BEAST_WALK4('BEAS', 3, 3.0 / 35.0, S_BEAST_WALK5) { A_Chase(); }
	S_BEAST_WALK5('BEAS', 4, 3.0 / 35.0, S_BEAST_WALK6) { A_Chase(); }
	S_BEAST_WALK6('BEAS', 5, 3.0 / 35.0, S_BEAST_WALK1) { A_Chase(); }
	S_BEAST_ATK1('BEAS', 7, 10.0 / 35.0, S_BEAST_ATK2) { A_FaceTarget(); }
	S_BEAST_ATK2('BEAS', 8, 10.0 / 35.0, S_BEAST_WALK1) { A_BeastAttack(); }
	S_BEAST_PAIN1('BEAS', 6, 3.0 / 35.0, S_BEAST_PAIN2) { }
	S_BEAST_PAIN2('BEAS', 6, 3.0 / 35.0, S_BEAST_WALK1) { A_Pain(); }
	S_BEAST_DIE1('BEAS', 17, 6.0 / 35.0, S_BEAST_DIE2) { }
	S_BEAST_DIE2('BEAS', 18, 6.0 / 35.0, S_BEAST_DIE3) { A_Scream(); }
	S_BEAST_DIE3('BEAS', 19, 6.0 / 35.0, S_BEAST_DIE4) { }
	S_BEAST_DIE4('BEAS', 20, 6.0 / 35.0, S_BEAST_DIE5) { }
	S_BEAST_DIE5('BEAS', 21, 6.0 / 35.0, S_BEAST_DIE6) { }
	S_BEAST_DIE6('BEAS', 22, 6.0 / 35.0, S_BEAST_DIE7) { A_NoBlocking(); }
	S_BEAST_DIE7('BEAS', 23, 6.0 / 35.0, S_BEAST_DIE8) { }
	S_BEAST_DIE8('BEAS', 24, 6.0 / 35.0, S_BEAST_DIE9) { }
	S_BEAST_DIE9('BEAS', 25, -1.0, S_NULL) { }
	S_BEAST_XDIE1('BEAS', 9, 5.0 / 35.0, S_BEAST_XDIE2) { }
	S_BEAST_XDIE2('BEAS', 10, 6.0 / 35.0, S_BEAST_XDIE3) { A_Scream(); }
	S_BEAST_XDIE3('BEAS', 11, 5.0 / 35.0, S_BEAST_XDIE4) { }
	S_BEAST_XDIE4('BEAS', 12, 6.0 / 35.0, S_BEAST_XDIE5) { }
	S_BEAST_XDIE5('BEAS', 13, 5.0 / 35.0, S_BEAST_XDIE6) { }
	S_BEAST_XDIE6('BEAS', 14, 6.0 / 35.0, S_BEAST_XDIE7) { A_NoBlocking(); }
	S_BEAST_XDIE7('BEAS', 15, 5.0 / 35.0, S_BEAST_XDIE8) { }
	S_BEAST_XDIE8('BEAS', 16, -1.0, S_NULL) { }
}

defaultproperties
{
	Health = 220;
	GibsHealth = -110;
	Radius = 32.0;
	Height = 74.0;
	Mass = 200.0;
	StepSpeed = 14.0;
	PainChance = 100;
	IdleState = S_BEAST_LOOK1;
	SeeState = S_BEAST_WALK1;
	MissileState = S_BEAST_ATK1;
	PainState = S_BEAST_PAIN1;
	DeathState = S_BEAST_DIE1;
	GibsDeathState = S_BEAST_XDIE1;
	SightSound = 'BeastSight';
	ActiveSound = 'BeastActive';
	AttackSound = 'BeastAttack';
	PainSound = 'BeastPain';
	DeathSound = 'BeastDeath';
}

}

//**************************************************************************
//**************************************************************************

//==========================================================================
//
//  Actor::A_BeastPuff
//
//==========================================================================

void Actor::A_BeastPuff(void)
{
	TVec org;

	if (P_Random() > 64)
	{
		org.x = Origin.x + (Random() - Random()) * 4.0;
		org.y = Origin.y + (Random() - Random()) * 4.0;
		org.z = Origin.z + (Random() - Random()) * 4.0;
		Spawn(Puffy, org);
	}
}

//**************************************************************************
//
//  $Log$
//  Revision 1.19  2002/05/18 16:59:59  dj_jl
//  Renamed SpawnState to IdleState, other changes.
//
//  Revision 1.18  2002/03/20 19:07:46  dj_jl
//  Got rid of a lots of legacy, beautification.
//
//  Revision 1.17  2002/03/16 17:45:12  dj_jl
//  Added Pawn and PlayerPawn classes, beautification.
//
//  Revision 1.16  2002/03/02 17:41:12  dj_jl
//  Renamed Enemy to Target. Beautification.
//
//  Revision 1.15  2002/02/26 17:49:48  dj_jl
//  no message
//
//  Revision 1.14  2002/02/22 18:00:15  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.13  2002/02/16 16:26:55  dj_jl
//  Removed precalculated sound IDs
//
//  Revision 1.12  2002/02/14 19:20:57  dj_jl
//  Renamed Entity properties to new naming style
//
//  Revision 1.11  2002/01/28 18:50:18  dj_jl
//  Made some functions Actor members.
//  Replaced some pointers with references.
//
//  Revision 1.10  2002/01/25 18:04:34  dj_jl
//  Many global functions made Actor functions
//
//  Revision 1.9  2002/01/24 18:19:25  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//  Revision 1.8  2002/01/17 18:15:53  dj_jl
//  Renamed all map object classes
//
//  Revision 1.7  2002/01/07 12:23:17  dj_jl
//  Changed copyright year
//
//  Revision 1.6  2001/12/12 18:57:41  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.5  2001/11/02 18:42:08  dj_jl
//  Damage method
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/08/29 17:42:13  dj_jl
//  Added sound channel
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
