//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

classid TranslateThingType[] =
{
	MapSpot,	// T_NONE
	Clink,
	MummyLeader,
	Beast,
	Mummy,
	Imp,
	Knight,
	ImpLeader,
	MummyGhost,
	MummyLeaderGhost,

	ImpBall,	// 10
	ItemAmmoGoldWandWimpy,
	ItemAmmoGoldWandHefty,
	MapSpot,
	ArtifactEgg,
	ArtifactFly,
	MapSpot,
	MapSpot,
	ArtifactTeleport,
	Wizard,

	Head,	// 20
	MapSpot/*Bridge*/,
	MapSpot,
	ItemHealthPotion,
	ArtifactHealthFlask,
	ArtifactSuperHeal,
	MapSpot,
	ItemWeaponCrossbow,
	ItemWeaponBlaster,
	ItemWeaponPhoenixRod,

	ItemWeaponSkullRod,	// 30
	MapSpot,
	ItemWeaponGauntlets,
	ItemAmmoCrossbowWimpy,
	ItemAmmoCrossbowHefty,
	ItemAmmoMaceWimpy,
	ItemAmmoMaceHefty,
	ItemAmmoBlasterWimpy,
	ItemAmmoBlasterHefty,
	MapSpot,

	EggMissile,	// 40
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,

	MapSpot,	// 50
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,

	MapSpot,	// 60
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	ItemShield1,
	ItemShield2,

	MapSpot,	// 70
	MapSpot,
	ArtifactFireBomb/*FireBomb*/,
	ArtifactTorch,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,

	MapSpot,	// 80
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	ItemKeyBlue,
	ItemKeyGreen,
	ItemKeyYellow,
	MapSpot,
	MapSpot,

	MapSpot,	// 90
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,

	MapSpot,	// 100
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,

	SoundWind,	// 110
	SoundWaterfall,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,
	MapSpot,

	BeastBall,	// 120
	Feather,
	Chicken,
	VolcanoBlast,
	VolcanoTBlast,
	Pod,
	PodGenerator,
	KnightAxe,
	KnightRedAxe,
	KnightGhost,

	Blood,	// 130
	MummyMissile,
	Snake,
	ArtifactInvulnerability,
	ArtifactTomeOfPower,
	ArtifactInvisibility,
	ItemBagOfHolding,
	ItemMap,
	SnakeProjectileA,
	SnakeProjectileB,

	WizardMissile,	// 140
	MapSpot/*BossSpot*/,
	Sorcerer1,
	Sorcerer2,
	Sorcerer1Missile,
	Sorcerer2Missile1,
	Sorcerer2Missile2,
	CrossbowFX1,
	CrossbowFX2,
	CrossbowFX3,

	Volcano,	// 150
	GoldWandMissile1,
	GoldWandMissile2,
	MaceFX4,
	MaceFX1,
	MaceFX3,
	MaceFX2,
	Ripper,
	ItemAmmoSkullRodWimpy,
	ItemAmmoSkullRodHefty,

	HornRodMissile1,	// 160
	ItemAmmoPhoenixWimpy,
	ItemAmmoPhoenixHefty,
	PhoenixFX1,
	HeadMissile1,
	WhirlWind,
	TeleGlitter,
	TeleGlitter2
};

int GetAmmoChange[] = {
	wp_goldwand,
	wp_crossbow,
	wp_blaster,
	wp_skullrod,
	wp_phoenixrod,
	wp_mace
};

int GetWeaponAmmo[NUMWEAPONS] = {
	0,	// staff
	25,	// gold wand
	10,	// crossbow
	30,	// blaster
	50,	// skull rod
	2,	// phoenix rod
	50,	// mace
	0,	// gauntlets
	0	// beak
};

int WeaponValue[] = {
	1,	// staff
	3,	// goldwand
	4,	// crossbow
	5,	// blaster
	6,	// skullrod
	7,	// phoenixrod
	8,	// mace
	2,	// gauntlets
	0	// beak
};
int maxammo[NUMAMMO] = {
	100,	// gold wand
	50,	// crossbow
	200,	// blaster
	200,	// skull rod
	20,	// phoenix rod
	150	// mace
};

string ArtifactText[NUMARTIFACTS] =
{
	"",
	TXT_ARTIINVULNERABILITY,
	TXT_ARTIINVISIBILITY,
	TXT_ARTIHEALTH,
	TXT_ARTISUPERHEALTH,
	TXT_ARTITOMEOFPOWER,
	TXT_ARTITORCH,
	TXT_ARTIFIREBOMB,
	TXT_ARTIEGG,
	TXT_ARTIFLY,
	TXT_ARTITELEPORT,
};
string WeaponText[] = {
	"",
	"",
	TXT_WPNCROSSBOW,
	TXT_WPNBLASTER,
	TXT_WPNSKULLROD,
	TXT_WPNPHOENIXROD,
	TXT_WPNMACE,
	TXT_WPNGAUNTLETS,
};
string KeyText[] = {
	TXT_GOTYELLOWKEY,
	TXT_GOTGREENKEY,
	TXT_GOTBLUEKEY,
};
string AmmoText[] = {
	TXT_AMMOGOLDWAND1,
	TXT_AMMOGOLDWAND2,
	TXT_AMMOMACE1,
	TXT_AMMOMACE2,
	TXT_AMMOCROSSBOW1,
	TXT_AMMOCROSSBOW2,
	TXT_AMMOBLASTER1,
	TXT_AMMOBLASTER2,
	TXT_AMMOSKULLROD1,
	TXT_AMMOSKULLROD2,
	TXT_AMMOPHOENIXROD1,
	TXT_AMMOPHOENIXROD2,
};

classid PuffType;

float air_control = 1.0 / 256.0;

bool onground;

bool WeaponInShareware[9] = {
	true,	// Staff
	true,	// Gold wand
	true,	// Crossbow
	true,	// Blaster
	false,	// Skull rod
	false,	// Phoenix rod
	false,	// Mace
	true,	// Gauntlets
	true	// Beak
};

float pushTab[5] =
{
	5.0 * 35.0 * 35.0 / 32.0,
	10.0 * 35.0 * 35.0 / 32.0,
	25.0 * 35.0 * 35.0 / 32.0,
	30.0 * 35.0 * 35.0 / 32.0,
	35.0 * 35.0 * 35.0 / 32.0
};

Actor MissileMobj;

float windTab[3] = { 5.0 / 32.0, 10.0 / 32.0, 25.0 / 32.0 };

int opposite[] = {
	DI_WEST, DI_SOUTHWEST, DI_SOUTH, DI_SOUTHEAST, DI_EAST, DI_NORTHEAST,
	DI_NORTH, DI_NORTHWEST, DI_NODIR
};

int diags[] = { DI_NORTHWEST, DI_NORTHEAST, DI_SOUTHWEST, DI_SOUTHEAST };

float xspeed[8] =
	{ 1.0, 0.7171630859, 0.0, -0.7171630859, -1.0, -0.7171630859, 0.0,
		0.7171630859 };
float yspeed[8] =
	{ 0.0, 0.7171630859, 1.0, 0.7171630859, 0.0, -0.7171630859, -1.0,
		-0.7171630859 };

int WeaponAmmoUsePL1[NUMWEAPONS] = {
	0,	// staff
	USE_GWND_AMMO_1,	// gold wand
	USE_CBOW_AMMO_1,	// crossbow
	USE_BLSR_AMMO_1,	// blaster
	USE_SKRD_AMMO_1,	// skull rod
	USE_PHRD_AMMO_1,	// phoenix rod
	USE_MACE_AMMO_1,	// mace
	0,	// gauntlets
	0	// beak
};

int WeaponAmmoUsePL2[NUMWEAPONS] = {
	0,	// staff
	USE_GWND_AMMO_2,	// gold wand
	USE_CBOW_AMMO_2,	// crossbow
	USE_BLSR_AMMO_2,	// blaster
	USE_SKRD_AMMO_2,	// skull rod
	USE_PHRD_AMMO_2,	// phoenix rod
	USE_MACE_AMMO_2,	// mace
	0,	// gauntlets
	0	// beak
};

//**************************************************************************
//
//  $Log$
//  Revision 1.61  2006/02/13 18:30:16  dj_jl
//  Moved all server progs global functions to classes.
//
//  Revision 1.60  2005/12/27 22:22:28  dj_jl
//  Created level info class, moved action special handling to it.
//
//  Revision 1.59  2005/12/07 22:54:18  dj_jl
//  Moved compiler generated data out of globals.
//
//  Revision 1.58  2005/11/30 23:52:04  dj_jl
//  Switch statement requires integer.
//
//  Revision 1.57  2004/11/22 07:36:26  dj_jl
//  Implemented all sector specials in all games.
//
//  Revision 1.56  2004/11/01 07:38:22  dj_jl
//  Almost all Hexen line specials are available in all games.
//
//  Revision 1.55  2004/08/28 12:35:22  dj_jl
//  Move general client functions to player class.
//
//  Revision 1.54  2004/08/23 19:23:57  dj_jl
//  Moved weapon utilites to player class.
//
//  Revision 1.53  2004/03/01 07:08:30  dj_jl
//  Height for player starts
//
//  Revision 1.52  2003/11/12 16:49:44  dj_jl
//  Changed player structure into a class
//
//  Revision 1.51  2003/07/11 16:47:39  dj_jl
//  Made array of players with pointers
//
//  Revision 1.50  2003/03/08 12:34:46  dj_jl
//  Removing class pointers.
//
//  Revision 1.49  2002/10/26 16:32:24  dj_jl
//  New style of defining classes.
//
//  Revision 1.48  2002/09/07 16:28:25  dj_jl
//  Added Level class.
//
//  Revision 1.47  2002/07/23 16:31:44  dj_jl
//  Beautification.
//
//  Revision 1.46  2002/07/23 13:07:30  dj_jl
//  Final touches for switching to floating-point time, beautification.
//
//  Revision 1.45  2002/07/13 08:01:49  dj_jl
//  Moved some functions to the Entity class.
//
//  Revision 1.44  2002/06/29 15:58:14  dj_jl
//  Added total frags count.
//
//  Revision 1.43  2002/06/22 07:16:00  dj_jl
//  Added base classes for objects, split them into corresponding files.
//
//  Revision 1.42  2002/06/14 15:47:53  dj_jl
//  Added state names to the states.
//
//  Revision 1.41  2002/05/18 16:59:59  dj_jl
//  Renamed SpawnState to IdleState, other changes.
//
//  Revision 1.40  2002/04/11 16:52:14  dj_jl
//  Made TryMove native.
//
//  Revision 1.39  2002/03/28 18:15:34  dj_jl
//  Renamed mo in player_t to MO.
//
//  Revision 1.38  2002/03/20 19:07:46  dj_jl
//  Got rid of a lots of legacy, beautification.
//
//  Revision 1.37  2002/03/16 17:45:13  dj_jl
//  Added Pawn and PlayerPawn classes, beautification.
//
//  Revision 1.36  2002/03/02 17:41:13  dj_jl
//  Renamed Enemy to Target. Beautification.
//
//  Revision 1.35  2002/02/26 17:49:48  dj_jl
//  no message
//
//  Revision 1.34  2002/02/22 18:00:17  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.33  2002/02/16 16:26:55  dj_jl
//  Removed precalculated sound IDs
//
//  Revision 1.32  2002/02/14 19:20:58  dj_jl
//  Renamed Entity properties to new naming style
//
//  Revision 1.31  2002/02/09 18:13:46  dj_jl
//  Added flags that determines what line blocking flags to check
//
//  Revision 1.30  2002/02/07 18:50:08  dj_jl
//  Made CheckPosition shared.
//
//  Revision 1.29  2002/02/06 17:28:52  dj_jl
//  Replaced Actor flags with boolean variables.
//
//  Revision 1.28  2002/02/02 19:17:25  dj_jl
//  Replacing pointers with references, beautification.
//
//  Revision 1.27  2002/01/29 18:11:23  dj_jl
//  Added dormant things
//
//  Revision 1.26  2002/01/28 18:50:18  dj_jl
//  Made some functions Actor members.
//  Replaced some pointers with references.
//
//  Revision 1.25  2002/01/25 18:04:35  dj_jl
//  Many global functions made Actor functions
//
//  Revision 1.24  2002/01/24 18:19:26  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//  Revision 1.23  2002/01/17 18:15:53  dj_jl
//  Renamed all map object classes
//
//  Revision 1.22  2002/01/15 18:27:00  dj_jl
//  Some property names with logical words starting with capital letter.
//  Moved everything from Entity class into Actor class.
//
//  Revision 1.21  2002/01/15 08:10:57  dj_jl
//  Added P_CheckRelPosition
//
//  Revision 1.20  2002/01/12 18:00:47  dj_jl
//  Sound names initialized as names
//
//  Revision 1.19  2002/01/11 18:19:41  dj_jl
//  Started to use names in progs
//
//  Revision 1.18  2002/01/07 12:23:17  dj_jl
//  Changed copyright year
//
//  Revision 1.17  2001/12/27 17:52:23  dj_jl
//  Removed Entity property type, replaced with Object property Class
//
//  Revision 1.16  2001/12/18 18:35:26  dj_jl
//  Added polyobjs
//
//  Revision 1.15  2001/12/12 18:57:41  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.14  2001/12/04 18:36:42  dj_jl
//  Bots, directly from SkullTag!
//
//  Revision 1.13  2001/12/01 18:14:09  dj_jl
//  Changed MSG_Select, beautification
//
//  Revision 1.12  2001/11/02 18:42:08  dj_jl
//  Damage method
//
//  Revision 1.11  2001/10/22 17:23:12  dj_jl
//  Floatification of angles
//
//  Revision 1.10  2001/10/18 17:39:33  dj_jl
//  A lots of changes for Alpha 2
//
//  Revision 1.9  2001/10/09 17:41:17  dj_jl
//  Beautification
//
//  Revision 1.8  2001/10/02 17:42:38  dj_jl
//  Possibility to declare function's code inside class declaration
//
//  Revision 1.7  2001/09/27 17:08:19  dj_jl
//  Removed spawn functions, added mobj classes
//
//  Revision 1.6  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.5  2001/08/31 17:17:23  dj_jl
//  Removed vector macros
//  
//  Revision 1.4  2001/08/29 17:42:13  dj_jl
//  Added sound channel
//  
//  Revision 1.3  2001/07/31 16:59:30  dj_jl
//  Set model when spawning object
//
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
