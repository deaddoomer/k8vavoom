//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//**************************************************************************
//
//	ItemHealthPotion
//
//**************************************************************************

class ItemHealthPotion:Pickup
	__mobjinfo__(81)
{

__states__
{
	S_ITEM_PTN1_1('PTN1', 0, 'items/vial.md2', 0, 3.0 / 35.0, S_ITEM_PTN1_2) { }
	S_ITEM_PTN1_2('PTN1', 1, 'items/vial.md2', 0, 3.0 / 35.0, S_ITEM_PTN1_3) { }
	S_ITEM_PTN1_3('PTN1', 2, 'items/vial.md2', 0, 3.0 / 35.0, S_ITEM_PTN1_1) { }
}

defaultproperties
{
	bFloatBob = true;
	IdleState = S_ITEM_PTN1_1;
}

}

//**************************************************************************
//
//	ItemShield1
//
//**************************************************************************

class ItemShield1:Pickup
	__mobjinfo__(85)
{

__states__
{
	S_ITEM_SHLD1('SHLD', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	bFloatBob = true;
	IdleState = S_ITEM_SHLD1;
}

}

//**************************************************************************
//
//	ItemShield2
//
//**************************************************************************

class ItemShield2:Pickup
	__mobjinfo__(31)
{

__states__
{
	S_ITEM_SHD2_1('SHD2', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	bFloatBob = true;
	IdleState = S_ITEM_SHD2_1;
}

}

//**************************************************************************
//
//	ItemBagOfHolding
//
//**************************************************************************

class ItemBagOfHolding:Pickup
	__mobjinfo__(8)
{

__states__
{
	S_ITEM_BAGH1('BAGH', 0, 'items/bag.md2', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	bCountItem = true;
	bFloatBob = true;
	IdleState = S_ITEM_BAGH1;
}

}

//**************************************************************************
//
//	ItemMap
//
//**************************************************************************

class ItemMap:Pickup
	__mobjinfo__(35)
{

__states__
{
	S_ITEM_SPMP1('SPMP', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	bCountItem = true;
	bFloatBob = true;
	IdleState = S_ITEM_SPMP1;
}

}

//**************************************************************************
//
//	ArtifactInvisibility
//
//**************************************************************************

class ArtifactInvisibility:Artifact
	__mobjinfo__(75)
{

__states__
{
	S_ARTI_INVS1('INVS', 0 | FF_FULLBRIGHT, 350.0 / 35.0, S_ARTI_INVS1) { }
}

defaultproperties
{
	ArtifactType = arti_invisibility;
	bCanRespawn = false;
	Translucency = 33;
	IdleState = S_ARTI_INVS1;
}

}

//**************************************************************************
//
//	ArtifactHealthFlask
//
//**************************************************************************

class ArtifactHealthFlask:Artifact
	__mobjinfo__(82)
{

__states__
{
	S_ARTI_PTN2_1('PTN2', 0, 'artifact/flask.md2', 0, 4.0 / 35.0, S_ARTI_PTN2_2) { }
	S_ARTI_PTN2_2('PTN2', 1, 'artifact/flask.md2', 0, 4.0 / 35.0, S_ARTI_PTN2_3) { }
	S_ARTI_PTN2_3('PTN2', 2, 'artifact/flask.md2', 0, 4.0 / 35.0, S_ARTI_PTN2_1) { }
}

defaultproperties
{
	ArtifactType = arti_health;
	IdleState = S_ARTI_PTN2_1;
}

}

//**************************************************************************
//
//	ArtifactFly
//
//**************************************************************************

class ArtifactFly:Artifact
	__mobjinfo__(83)
{

__states__
{
	S_ARTI_SOAR1('SOAR', 0, 5.0 / 35.0, S_ARTI_SOAR2) { }
	S_ARTI_SOAR2('SOAR', 1, 5.0 / 35.0, S_ARTI_SOAR3) { }
	S_ARTI_SOAR3('SOAR', 2, 5.0 / 35.0, S_ARTI_SOAR4) { }
	S_ARTI_SOAR4('SOAR', 1, 5.0 / 35.0, S_ARTI_SOAR1) { }
}

defaultproperties
{
	ArtifactType = arti_fly;
	IdleState = S_ARTI_SOAR1;
}

}

//**************************************************************************
//
//	ArtifactInvulnerability
//
//**************************************************************************

class ArtifactInvulnerability:Artifact
	__mobjinfo__(84)
{

__states__
{
	S_ARTI_INVU1('INVU', 0, 3.0 / 35.0, S_ARTI_INVU2) { }
	S_ARTI_INVU2('INVU', 1, 3.0 / 35.0, S_ARTI_INVU3) { }
	S_ARTI_INVU3('INVU', 2, 3.0 / 35.0, S_ARTI_INVU4) { }
	S_ARTI_INVU4('INVU', 3, 3.0 / 35.0, S_ARTI_INVU1) { }
}

defaultproperties
{
	ArtifactType = arti_invulnerability;
	bCanRespawn = false;
	IdleState = S_ARTI_INVU1;
}

}

//**************************************************************************
//
//	ArtifactTomeOfPower
//
//**************************************************************************

class ArtifactTomeOfPower:Artifact
	__mobjinfo__(86)
{

__states__
{
	S_ARTI_PWBK1('PWBK', 0, 'artifact/tome.md2', 0, 350.0 / 35.0, S_ARTI_PWBK1) { }
}

defaultproperties
{
	ArtifactType = arti_tomeofpower;
	IdleState = S_ARTI_PWBK1;
}

}

//**************************************************************************
//
//	ArtifactEgg
//
//**************************************************************************

class ArtifactEgg:Artifact
	__mobjinfo__(30)
{

__states__
{
	S_ARTI_EGGC1('EGGC', 0, 6.0 / 35.0, S_ARTI_EGGC2) { }
	S_ARTI_EGGC2('EGGC', 1, 6.0 / 35.0, S_ARTI_EGGC3) { }
	S_ARTI_EGGC3('EGGC', 2, 6.0 / 35.0, S_ARTI_EGGC4) { }
	S_ARTI_EGGC4('EGGC', 1, 6.0 / 35.0, S_ARTI_EGGC1) { }
}

defaultproperties
{
	ArtifactType = arti_egg;
	IdleState = S_ARTI_EGGC1;
}

}

//**************************************************************************
//
//	ArtifactSuperHeal
//
//**************************************************************************

class ArtifactSuperHeal:Artifact
	__mobjinfo__(32)
{

__states__
{
	S_ARTI_SPHL1('SPHL', 0, 'artifact/shboost.md2', 0, 350.0 / 35.0, S_ARTI_SPHL1) { }
}

defaultproperties
{
	ArtifactType = arti_superhealth;
	IdleState = S_ARTI_SPHL1;
}

}

//**************************************************************************
//
//	ArtifactTorch
//
//**************************************************************************

class ArtifactTorch:Artifact
	__mobjinfo__(33)
{

__states__
{
	S_ARTI_TRCH1('TRCH', 0 | FF_FULLBRIGHT, 'artifact/torch.md2', 0, 3.0 / 35.0, S_ARTI_TRCH2) { }
	S_ARTI_TRCH2('TRCH', 1 | FF_FULLBRIGHT, 'artifact/torch.md2', 0, 3.0 / 35.0, S_ARTI_TRCH3) { }
	S_ARTI_TRCH3('TRCH', 2 | FF_FULLBRIGHT, 'artifact/torch.md2', 0, 3.0 / 35.0, S_ARTI_TRCH1) { }
}

defaultproperties
{
	ArtifactType = arti_torch;
	IdleState = S_ARTI_TRCH1;
}

}

//**************************************************************************
//
//	ArtifactFireBomb
//
//**************************************************************************

class ArtifactFireBomb:Artifact
	__mobjinfo__(34)
{

__states__
{
	S_ARTI_FBMB1('FBMB', 4, 350.0 / 35.0, S_ARTI_FBMB1) { }
}

defaultproperties
{
	ArtifactType = arti_firebomb;
	IdleState = S_ARTI_FBMB1;
}

}

//**************************************************************************
//
//	ArtifactTeleport
//
//**************************************************************************

class ArtifactTeleport:Artifact
	__mobjinfo__(36)
{

__states__
{
	S_ARTI_ATLP1('ATLP', 0, 'artifact/teleport.md2', 0, 4.0 / 35.0, S_ARTI_ATLP2) { }
	S_ARTI_ATLP2('ATLP', 1, 'artifact/teleport.md2', 0, 4.0 / 35.0, S_ARTI_ATLP3) { }
	S_ARTI_ATLP3('ATLP', 2, 'artifact/teleport.md2', 0, 4.0 / 35.0, S_ARTI_ATLP4) { }
	S_ARTI_ATLP4('ATLP', 1, 'artifact/teleport.md2', 0, 4.0 / 35.0, S_ARTI_ATLP1) { }
}

defaultproperties
{
	ArtifactType = arti_teleport;
	IdleState = S_ARTI_ATLP1;
}

}

//**************************************************************************
//
//	ItemWeaponGauntlets
//
//**************************************************************************

class ItemWeaponGauntlets:WeaponPickup
	__mobjinfo__(2005)
{

__states__
{
	S_WGNT('WGNT', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	WeaponType = wp_gauntlets;
	IdleState = S_WGNT;
}

}

//**************************************************************************
//
//	ItemWeaponBlaster
//
//**************************************************************************

class ItemWeaponBlaster:WeaponPickup
	__mobjinfo__(53)
{

__states__
{
	S_BLSR('WBLS', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	WeaponType = wp_blaster;
	IdleState = S_BLSR;
}

}

//**************************************************************************
//
//	ItemWeaponMace
//
//**************************************************************************

class ItemWeaponMace:WeaponPickup
	__mobjinfo__(2002)
{

//==========================================================================
//
//  A_RestoreSpecialThing1
//
//  Chooses the next spot to place the mace.
//
//==========================================================================

void A_RestoreSpecialThing1(void)
{
	int spot;

	// Do random mace placement
	spot = P_Random() % MaceSpotCount;
	P_UnsetThingPosition(self);
	Origin.x = MaceSpot_x[spot];
	Origin.y = MaceSpot_y[spot];
	P_SetThingPosition(self);
	Origin.z = FloorZ;

	::A_RestoreSpecialThing1();
}

__states__
{
	S_WMCE('WMCE', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	WeaponType = wp_mace;
	IdleState = S_WMCE;
}

}

//**************************************************************************
//
//	ItemWeaponSkullRod
//
//**************************************************************************

class ItemWeaponSkullRod:WeaponPickup
	__mobjinfo__(2004)
{

__states__
{
	S_WSKL('WSKL', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	WeaponType = wp_skullrod;
	IdleState = S_WSKL;
}

}

//**************************************************************************
//
//	ItemWeaponPhoenixRod
//
//**************************************************************************

class ItemWeaponPhoenixRod:WeaponPickup
	__mobjinfo__(2003)
{

__states__
{
	S_WPHX('WPHX', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	WeaponType = wp_phoenixrod;
	IdleState = S_WPHX;
}

}

//**************************************************************************
//
//	ItemWeaponCrossbow
//
//**************************************************************************

class ItemWeaponCrossbow:WeaponPickup
	__mobjinfo__(2001)
{

__states__
{
	S_WBOW('WBOW', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	WeaponType = wp_crossbow;
	IdleState = S_WBOW;
}

}

//**************************************************************************
//
//	ItemKeyGreen
//
//**************************************************************************

class ItemKeyGreen:Key
	__mobjinfo__(73)
{

__states__
{
	S_AKYY1('AKYY', 0 | FF_FULLBRIGHT, 3.0 / 35.0, S_AKYY2) { }
	S_AKYY2('AKYY', 1 | FF_FULLBRIGHT, 3.0 / 35.0, S_AKYY3) { }
	S_AKYY3('AKYY', 2 | FF_FULLBRIGHT, 3.0 / 35.0, S_AKYY4) { }
	S_AKYY4('AKYY', 3 | FF_FULLBRIGHT, 3.0 / 35.0, S_AKYY5) { }
	S_AKYY5('AKYY', 4 | FF_FULLBRIGHT, 3.0 / 35.0, S_AKYY6) { }
	S_AKYY6('AKYY', 5 | FF_FULLBRIGHT, 3.0 / 35.0, S_AKYY7) { }
	S_AKYY7('AKYY', 6 | FF_FULLBRIGHT, 3.0 / 35.0, S_AKYY8) { }
	S_AKYY8('AKYY', 7 | FF_FULLBRIGHT, 3.0 / 35.0, S_AKYY9) { }
	S_AKYY9('AKYY', 8 | FF_FULLBRIGHT, 3.0 / 35.0, S_AKYY10) { }
	S_AKYY10('AKYY', 9 | FF_FULLBRIGHT, 3.0 / 35.0, S_AKYY1) { }
}

defaultproperties
{
	KeyType = key_green;
	IdleState = S_AKYY1;
}

}

//**************************************************************************
//
//	ItemKeyBlue
//
//**************************************************************************

class ItemKeyBlue:Key
	__mobjinfo__(79)
{

__states__
{
	S_BKYY1('BKYY', 0 | FF_FULLBRIGHT, 3.0 / 35.0, S_BKYY2) { }
	S_BKYY2('BKYY', 1 | FF_FULLBRIGHT, 3.0 / 35.0, S_BKYY3) { }
	S_BKYY3('BKYY', 2 | FF_FULLBRIGHT, 3.0 / 35.0, S_BKYY4) { }
	S_BKYY4('BKYY', 3 | FF_FULLBRIGHT, 3.0 / 35.0, S_BKYY5) { }
	S_BKYY5('BKYY', 4 | FF_FULLBRIGHT, 3.0 / 35.0, S_BKYY6) { }
	S_BKYY6('BKYY', 5 | FF_FULLBRIGHT, 3.0 / 35.0, S_BKYY7) { }
	S_BKYY7('BKYY', 6 | FF_FULLBRIGHT, 3.0 / 35.0, S_BKYY8) { }
	S_BKYY8('BKYY', 7 | FF_FULLBRIGHT, 3.0 / 35.0, S_BKYY9) { }
	S_BKYY9('BKYY', 8 | FF_FULLBRIGHT, 3.0 / 35.0, S_BKYY10) { }
	S_BKYY10('BKYY', 9 | FF_FULLBRIGHT, 3.0 / 35.0, S_BKYY1) { }
}

defaultproperties
{
	KeyType = key_blue;
	IdleState = S_BKYY1;
}

}

//**************************************************************************
//
//	ItemKeyYellow
//
//**************************************************************************

class ItemKeyYellow:Key
	__mobjinfo__(80)
{

__states__
{
	S_CKYY1('CKYY', 0 | FF_FULLBRIGHT, 3.0 / 35.0, S_CKYY2) { }
	S_CKYY2('CKYY', 1 | FF_FULLBRIGHT, 3.0 / 35.0, S_CKYY3) { }
	S_CKYY3('CKYY', 2 | FF_FULLBRIGHT, 3.0 / 35.0, S_CKYY4) { }
	S_CKYY4('CKYY', 3 | FF_FULLBRIGHT, 3.0 / 35.0, S_CKYY5) { }
	S_CKYY5('CKYY', 4 | FF_FULLBRIGHT, 3.0 / 35.0, S_CKYY6) { }
	S_CKYY6('CKYY', 5 | FF_FULLBRIGHT, 3.0 / 35.0, S_CKYY7) { }
	S_CKYY7('CKYY', 6 | FF_FULLBRIGHT, 3.0 / 35.0, S_CKYY8) { }
	S_CKYY8('CKYY', 7 | FF_FULLBRIGHT, 3.0 / 35.0, S_CKYY9) { }
	S_CKYY9('CKYY', 8 | FF_FULLBRIGHT, 3.0 / 35.0, S_CKYY1) { }
}

defaultproperties
{
	KeyType = key_yellow;
	IdleState = S_CKYY1;
}

}

//**************************************************************************
//
//	ItemAmmoGoldWandWimpy
//
//**************************************************************************

class ItemAmmoGoldWandWimpy:Ammo
	__mobjinfo__(10)
{

__states__
{
	S_AMG1('AMG1', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	AmmoType = am_goldwand;
	AmmoCount = 10;
	StringIndex = 0;
	IdleState = S_AMG1;
}

}

//**************************************************************************
//
//	ItemAmmoGoldWandHefty
//
//**************************************************************************

class ItemAmmoGoldWandHefty:Ammo
	__mobjinfo__(12)
{

__states__
{
	S_AMG2_1('AMG2', 0, 4.0 / 35.0, S_AMG2_2) { }
	S_AMG2_2('AMG2', 1, 4.0 / 35.0, S_AMG2_3) { }
	S_AMG2_3('AMG2', 2, 4.0 / 35.0, S_AMG2_1) { }
}

defaultproperties
{
	AmmoType = am_goldwand;
	AmmoCount = 50;
	StringIndex = 1;
	IdleState = S_AMG2_1;
}

}

//**************************************************************************
//
//	ItemAmmoMaceWimpy
//
//**************************************************************************

class ItemAmmoMaceWimpy:Ammo
	__mobjinfo__(13)
{

__states__
{
	S_AMM1('AMM1', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	AmmoType = am_mace;
	AmmoCount = 20;
	StringIndex = 2;
	IdleState = S_AMM1;
}

}

//**************************************************************************
//
//	ItemAmmoMaceHefty
//
//**************************************************************************

class ItemAmmoMaceHefty:Ammo
	__mobjinfo__(16)
{

__states__
{
	S_AMM2('AMM2', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	AmmoType = am_mace;
	AmmoCount = 100;
	StringIndex = 3;
	IdleState = S_AMM2;
}

}

//**************************************************************************
//
//	ItemAmmoCrossbowWimpy
//
//**************************************************************************

class ItemAmmoCrossbowWimpy:Ammo
	__mobjinfo__(18)
{

__states__
{
	S_AMC1('AMC1', 0, -1.0, S_NULL) { }
}

defaultproperties
{
	AmmoType = am_crossbow;
	AmmoCount = 5;
	StringIndex = 4;
	IdleState = S_AMC1;
}

}

//**************************************************************************
//
//	ItemAmmoCrossbowHefty
//
//**************************************************************************

class ItemAmmoCrossbowHefty:Ammo
	__mobjinfo__(19)
{

__states__
{
	S_AMC2_1('AMC2', 0, 5.0 / 35.0, S_AMC2_2) { }
	S_AMC2_2('AMC2', 1, 5.0 / 35.0, S_AMC2_3) { }
	S_AMC2_3('AMC2', 2, 5.0 / 35.0, S_AMC2_1) { }
}

defaultproperties
{
	AmmoType = am_crossbow;
	AmmoCount = 20;
	StringIndex = 5;
	IdleState = S_AMC2_1;
}

}

//**************************************************************************
//
//	ItemAmmoSkullRodWimpy
//
//**************************************************************************

class ItemAmmoSkullRodWimpy:Ammo
	__mobjinfo__(20)
{

__states__
{
	S_AMS1_1('AMS1', 0, 5.0 / 35.0, S_AMS1_2) { }
	S_AMS1_2('AMS1', 1, 5.0 / 35.0, S_AMS1_1) { }
}

defaultproperties
{
	AmmoType = am_skullrod;
	AmmoCount = 20;
	StringIndex = 8;
	IdleState = S_AMS1_1;
}

}

//**************************************************************************
//
//	ItemAmmoSkullRodHefty
//
//**************************************************************************

class ItemAmmoSkullRodHefty:Ammo
	__mobjinfo__(21)
{

__states__
{
	S_AMS2_1('AMS2', 0, 5.0 / 35.0, S_AMS2_2) { }
	S_AMS2_2('AMS2', 1, 5.0 / 35.0, S_AMS2_1) { }
}

defaultproperties
{
	AmmoType = am_skullrod;
	AmmoCount = 100;
	StringIndex = 9;
	IdleState = S_AMS2_1;
}

}

//**************************************************************************
//
//	ItemAmmoPhoenixWimpy
//
//**************************************************************************

class ItemAmmoPhoenixWimpy:Ammo
	__mobjinfo__(22)
{

__states__
{
	S_AMP1_1('AMP1', 0, 4.0 / 35.0, S_AMP1_2) { }
	S_AMP1_2('AMP1', 1, 4.0 / 35.0, S_AMP1_3) { }
	S_AMP1_3('AMP1', 2, 4.0 / 35.0, S_AMP1_1) { }
}

defaultproperties
{
	AmmoType = am_phoenixrod;
	AmmoCount = 1;
	StringIndex = 10;
	IdleState = S_AMP1_1;
}

}

//**************************************************************************
//
//	ItemAmmoPhoenixHefty
//
//**************************************************************************

class ItemAmmoPhoenixHefty:Ammo
	__mobjinfo__(23)
{

__states__
{
	S_AMP2_1('AMP2', 0, 4.0 / 35.0, S_AMP2_2) { }
	S_AMP2_2('AMP2', 1, 4.0 / 35.0, S_AMP2_3) { }
	S_AMP2_3('AMP2', 2, 4.0 / 35.0, S_AMP2_1) { }
}

defaultproperties
{
	AmmoType = am_phoenixrod;
	AmmoCount = 10;
	StringIndex = 11;
	IdleState = S_AMP2_1;
}

}

//**************************************************************************
//
//	ItemAmmoBlasterWimpy
//
//**************************************************************************

class ItemAmmoBlasterWimpy:Ammo
	__mobjinfo__(54)
{

__states__
{
	S_AMB1_1('AMB1', 0, 4.0 / 35.0, S_AMB1_2) { }
	S_AMB1_2('AMB1', 1, 4.0 / 35.0, S_AMB1_3) { }
	S_AMB1_3('AMB1', 2, 4.0 / 35.0, S_AMB1_1) { }
}

defaultproperties
{
	AmmoType = am_blaster;
	AmmoCount = 10;
	StringIndex = 6;
	IdleState = S_AMB1_1;
}

}

//**************************************************************************
//
//	ItemAmmoBlasterHefty
//
//**************************************************************************

class ItemAmmoBlasterHefty:Ammo
	__mobjinfo__(55)
{

__states__
{
	S_AMB2_1('AMB2', 0, 4.0 / 35.0, S_AMB2_2) { }
	S_AMB2_2('AMB2', 1, 4.0 / 35.0, S_AMB2_3) { }
	S_AMB2_3('AMB2', 2, 4.0 / 35.0, S_AMB2_1) { }
}

defaultproperties
{
	AmmoType = am_blaster;
	AmmoCount = 25;
	StringIndex = 7;
	IdleState = S_AMB2_1;
}

}

//**************************************************************************
//
//  $Log$
//  Revision 1.1  2002/06/22 07:16:00  dj_jl
//  Added base classes for objects, split them into corresponding files.
//
//**************************************************************************
