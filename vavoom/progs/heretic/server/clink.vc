//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//**************************************************************************
//**************************************************************************
//
//	Clink
//
//**************************************************************************
//**************************************************************************

class Clink:Pawn
	__mobjinfo__(90)
{

//==========================================================================
//
//  A_ClinkAttack
//
//==========================================================================

void A_ClinkAttack(void)
{
	int damage;

	if (!Target)
	{
		return;
	}
	PlaySound(AttackSound, CHAN_WEAPON);
	if (CheckMeleeRange())
	{
		damage = ((P_Random() % 7) + 3);
		Target.Damage(self, self, damage);
	}
}

__states__
{
	S_CLINK_LOOK1('CLNK', 0, 10.0 / 35.0, S_CLINK_LOOK2) { A_Look(); }
	S_CLINK_LOOK2('CLNK', 1, 10.0 / 35.0, S_CLINK_LOOK1) { A_Look(); }
	S_CLINK_WALK1('CLNK', 0, 3.0 / 35.0, S_CLINK_WALK2) { A_Chase(); }
	S_CLINK_WALK2('CLNK', 1, 3.0 / 35.0, S_CLINK_WALK3) { A_Chase(); }
	S_CLINK_WALK3('CLNK', 2, 3.0 / 35.0, S_CLINK_WALK4) { A_Chase(); }
	S_CLINK_WALK4('CLNK', 3, 3.0 / 35.0, S_CLINK_WALK1) { A_Chase(); }
	S_CLINK_ATK1('CLNK', 4, 5.0 / 35.0, S_CLINK_ATK2) { A_FaceTarget(); }
	S_CLINK_ATK2('CLNK', 5, 4.0 / 35.0, S_CLINK_ATK3) { A_FaceTarget(); }
	S_CLINK_ATK3('CLNK', 6, 7.0 / 35.0, S_CLINK_WALK1) { A_ClinkAttack(); }
	S_CLINK_PAIN1('CLNK', 7, 3.0 / 35.0, S_CLINK_PAIN2) { }
	S_CLINK_PAIN2('CLNK', 7, 3.0 / 35.0, S_CLINK_WALK1) { A_Pain(); }
	S_CLINK_DIE1('CLNK', 8, 6.0 / 35.0, S_CLINK_DIE2) { }
	S_CLINK_DIE2('CLNK', 9, 6.0 / 35.0, S_CLINK_DIE3) { }
	S_CLINK_DIE3('CLNK', 10, 5.0 / 35.0, S_CLINK_DIE4) { A_Scream(); }
	S_CLINK_DIE4('CLNK', 11, 5.0 / 35.0, S_CLINK_DIE5) { A_NoBlocking(); }
	S_CLINK_DIE5('CLNK', 12, 5.0 / 35.0, S_CLINK_DIE6) { }
	S_CLINK_DIE6('CLNK', 13, 5.0 / 35.0, S_CLINK_DIE7) { }
	S_CLINK_DIE7('CLNK', 14, -1.0, S_NULL) { }
}

defaultproperties
{
	Health = 150;
	Radius = 20.0;
	Height = 64.0;
	Mass = 75.0;
	StepSpeed = 14.0;
	PainChance = 32;
	bNoBlood = true;
	SpawnState = S_CLINK_LOOK1;
	SeeState = S_CLINK_WALK1;
	MeleeState = S_CLINK_ATK1;
	PainState = S_CLINK_PAIN1;
	DeathState = S_CLINK_DIE1;
	SightSound = 'ClinkSight';
	ActiveSound = 'ClinkActive';
	AttackSound = 'ClinkAttack';
	PainSound = 'ClinkPain';
	DeathSound = 'ClinkDeath';
}

}

//**************************************************************************
//
//  $Log$
//  Revision 1.15  2002/03/16 17:45:12  dj_jl
//  Added Pawn and PlayerPawn classes, beautification.
//
//  Revision 1.14  2002/03/02 17:41:12  dj_jl
//  Renamed Enemy to Target. Beautification.
//
//  Revision 1.13  2002/02/26 17:49:48  dj_jl
//  no message
//
//  Revision 1.12  2002/02/22 18:00:16  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.11  2002/02/16 16:26:55  dj_jl
//  Removed precalculated sound IDs
//
//  Revision 1.10  2002/01/28 18:50:18  dj_jl
//  Made some functions Actor members.
//  Replaced some pointers with references.
//
//  Revision 1.9  2002/01/25 18:04:35  dj_jl
//  Many global functions made Actor functions
//
//  Revision 1.8  2002/01/24 18:19:25  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//  Revision 1.7  2002/01/07 12:23:17  dj_jl
//  Changed copyright year
//
//  Revision 1.6  2001/12/12 18:57:41  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.5  2001/11/02 18:42:08  dj_jl
//  Damage method
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/08/29 17:42:13  dj_jl
//  Added sound channel
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
