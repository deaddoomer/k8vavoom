//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//**************************************************************************
//
//	Clink
//
//**************************************************************************

class Clink:Pawn
	__mobjinfo__(90)
{

//==========================================================================
//
//	DropStuff
//
//==========================================================================

void DropStuff(void)
{
	DropItem(ItemAmmoSkullRodWimpy, 20, 0.328125);
}

//==========================================================================
//
//  A_ClinkAttack
//
//==========================================================================

void A_ClinkAttack(void)
{
	int damage;

	if (!Enemy)
	{
		return;
	}
	PlaySound(AttackSound, CHAN_WEAPON);
	if (CheckMeleeRange())
	{
		damage = ((P_Random() % 7) + 3);
		Enemy.Damage(self, self, damage);
	}
}

__states__
{
	S_CLINK_LOOK1('CLNK', 0, 'monsters/clink.md2', 0, 2.5 / 35.0, S_CLINK_LOOK2) { A_Look(); }
	S_CLINK_LOOK2('CLNK', 0, 'monsters/clink.md2', 1, 2.5 / 35.0, S_CLINK_LOOK3) { }
	S_CLINK_LOOK3('CLNK', 0, 'monsters/clink.md2', 2, 2.5 / 35.0, S_CLINK_LOOK4) { }
	S_CLINK_LOOK4('CLNK', 0, 'monsters/clink.md2', 3, 2.5 / 35.0, S_CLINK_LOOK5) { }
	S_CLINK_LOOK5('CLNK', 1, 'monsters/clink.md2', 4, 2.5 / 35.0, S_CLINK_LOOK6) { A_Look(); }
	S_CLINK_LOOK6('CLNK', 1, 'monsters/clink.md2', 5, 2.5 / 35.0, S_CLINK_LOOK7) { }
	S_CLINK_LOOK7('CLNK', 1, 'monsters/clink.md2', 6, 2.5 / 35.0, S_CLINK_LOOK8) { }
	S_CLINK_LOOK8('CLNK', 1, 'monsters/clink.md2', 7, 2.5 / 35.0, S_CLINK_LOOK1) { }
	S_CLINK_WALK1('CLNK', 0, 'monsters/clink.md2', 8, 0.75 / 35.0, S_CLINK_WALK2) { A_Chase(); }
	S_CLINK_WALK2('CLNK', 0, 'monsters/clink.md2', 9, 0.75/ 35.0, S_CLINK_WALK3) { }
	S_CLINK_WALK3('CLNK', 0, 'monsters/clink.md2', 10, 0.75 / 35.0, S_CLINK_WALK4) { }
	S_CLINK_WALK4('CLNK', 0, 'monsters/clink.md2', 11, 0.75 / 35.0, S_CLINK_WALK5) { }
	S_CLINK_WALK5('CLNK', 1, 'monsters/clink.md2', 12, 0.75 / 35.0, S_CLINK_WALK6) { A_Chase(); }
	S_CLINK_WALK6('CLNK', 1, 'monsters/clink.md2', 13, 0.75 / 35.0, S_CLINK_WALK7) { }
	S_CLINK_WALK7('CLNK', 1, 'monsters/clink.md2', 14, 0.75 / 35.0, S_CLINK_WALK8) { }
	S_CLINK_WALK8('CLNK', 1, 'monsters/clink.md2', 15, 0.75 / 35.0, S_CLINK_WALK9) { }
	S_CLINK_WALK9('CLNK', 2, 'monsters/clink.md2', 16, 0.75 / 35.0, S_CLINK_WALK10) { A_Chase(); }
	S_CLINK_WALK10('CLNK', 2, 'monsters/clink.md2', 17, 0.75 / 35.0, S_CLINK_WALK11) { }
	S_CLINK_WALK11('CLNK', 2, 'monsters/clink.md2', 18, 0.75 / 35.0, S_CLINK_WALK12) { }
	S_CLINK_WALK12('CLNK', 2, 'monsters/clink.md2', 19, 0.75 / 35.0, S_CLINK_WALK13) { }
	S_CLINK_WALK13('CLNK', 3, 'monsters/clink.md2', 20, 0.75 / 35.0, S_CLINK_WALK14) { A_Chase(); }
	S_CLINK_WALK14('CLNK', 3, 'monsters/clink.md2', 21, 0.75 / 35.0, S_CLINK_WALK15) { }
	S_CLINK_WALK15('CLNK', 3, 'monsters/clink.md2', 22, 0.75 / 35.0, S_CLINK_WALK16) { }
	S_CLINK_WALK16('CLNK', 3, 'monsters/clink.md2', 23, 0.75 / 35.0, S_CLINK_WALK1) { }
	S_CLINK_ATK1('CLNK', 4, 'monsters/clink.md2', 24, 1.0 / 35.0, S_CLINK_ATK2) { A_FaceTarget(); }
	S_CLINK_ATK2('CLNK', 4, 'monsters/clink.md2', 25, 2.0 / 35.0, S_CLINK_ATK3) { }
	S_CLINK_ATK3('CLNK', 4, 'monsters/clink.md2', 26, 2.0 / 35.0, S_CLINK_ATK4) { }
	S_CLINK_ATK4('CLNK', 5, 'monsters/clink.md2', 27, 2.0 / 35.0, S_CLINK_ATK5) { A_FaceTarget(); }
	S_CLINK_ATK5('CLNK', 5, 'monsters/clink.md2', 28, 2.0 / 35.0, S_CLINK_ATK6) { }
	S_CLINK_ATK6('CLNK', 6, 'monsters/clink.md2', 29, 2.0 / 35.0, S_CLINK_ATK7) { A_ClinkAttack(); }
	S_CLINK_ATK7('CLNK', 6, 'monsters/clink.md2', 30, 2.0 / 35.0, S_CLINK_ATK8) { }
	S_CLINK_ATK8('CLNK', 6, 'monsters/clink.md2', 31, 3.0 / 35.0, S_CLINK_WALK1) { }
	S_CLINK_PAIN1('CLNK', 7, 'monsters/clink.md2', 32, 3.0 / 35.0, S_CLINK_PAIN2) { }
	S_CLINK_PAIN2('CLNK', 7, 'monsters/clink.md2', 33, 3.0 / 35.0, S_CLINK_WALK1) { A_Pain(); }
	S_CLINK_DIE1('CLNK', 8, 'monsters/clink.md2', 34, 3.0 / 35.0, S_CLINK_DIE2) { }
	S_CLINK_DIE2('CLNK', 8, 'monsters/clink.md2', 35, 3.0 / 35.0, S_CLINK_DIE3) { }
	S_CLINK_DIE3('CLNK', 9, 'monsters/clink.md2', 36, 3.0 / 35.0, S_CLINK_DIE4) { }
	S_CLINK_DIE4('CLNK', 9, 'monsters/clink.md2', 37, 3.0 / 35.0, S_CLINK_DIE5) { }
	S_CLINK_DIE5('CLNK', 10, 'monsters/clinkdie.md2', 0, 2.5 / 35.0, S_CLINK_DIE6) { A_Scream(); }
	S_CLINK_DIE6('CLNK', 10, 'monsters/clinkdie.md2', 1, 2.5 / 35.0, S_CLINK_DIE7) { }
	S_CLINK_DIE7('CLNK', 11, 'monsters/clinkdie.md2', 2, 2.5 / 35.0, S_CLINK_DIE8) { A_NoBlocking(); }
	S_CLINK_DIE8('CLNK', 11, 'monsters/clinkdie.md2', 3, 2.5 / 35.0, S_CLINK_DIE9) { }
	S_CLINK_DIE9('CLNK', 12, 'monsters/clinkdie.md2', 4, 2.5 / 35.0, S_CLINK_DIE10) { }
	S_CLINK_DIE10('CLNK', 12, 'monsters/clinkdie.md2', 5, 2.5 / 35.0, S_CLINK_DIE11) { }
	S_CLINK_DIE11('CLNK', 13, 'monsters/clinkdie.md2', 6, 2.5 / 35.0, S_CLINK_DIE12) { }
	S_CLINK_DIE12('CLNK', 13, 'monsters/clinkdie.md2', 7, 2.5 / 35.0, S_CLINK_DIE12) { }
	S_CLINK_DIE13('CLNK', 14, 'monsters/clinkdie.md2', 8, 2.5 / 35.0, S_CLINK_DIE13) { }
	S_CLINK_DIE14('CLNK', 14, 'monsters/clinkdie.md2', 9, -1.0, S_NULL) { }
}

defaultproperties
{
	Health = 150;
	Radius = 20.0;
	Height = 64.0;
	Mass = 75.0;
	StepSpeed = 14.0;
	PainChance = 0.125;
	bNoBlood = true;
	IdleState = S_CLINK_LOOK1;
	SeeState = S_CLINK_WALK1;
	MeleeState = S_CLINK_ATK1;
	PainState = S_CLINK_PAIN1;
	DeathState = S_CLINK_DIE1;
	SightSound = 'ClinkSight';
	ActiveSound = 'ClinkActive';
	AttackSound = 'ClinkAttack';
	PainSound = 'ClinkPain';
	DeathSound = 'ClinkDeath';
}

}

//**************************************************************************
//
//  $Log$
//  Revision 1.19  2002/07/13 07:58:51  dj_jl
//  Added new models, updated existing ones.
//
//  Revision 1.18  2002/06/22 07:16:00  dj_jl
//  Added base classes for objects, split them into corresponding files.
//
//  Revision 1.17  2002/05/18 16:59:59  dj_jl
//  Renamed SpawnState to IdleState, other changes.
//
//  Revision 1.16  2002/03/20 19:07:46  dj_jl
//  Got rid of a lots of legacy, beautification.
//
//  Revision 1.15  2002/03/16 17:45:12  dj_jl
//  Added Pawn and PlayerPawn classes, beautification.
//
//  Revision 1.14  2002/03/02 17:41:12  dj_jl
//  Renamed Enemy to Target. Beautification.
//
//  Revision 1.13  2002/02/26 17:49:48  dj_jl
//  no message
//
//  Revision 1.12  2002/02/22 18:00:16  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.11  2002/02/16 16:26:55  dj_jl
//  Removed precalculated sound IDs
//
//  Revision 1.10  2002/01/28 18:50:18  dj_jl
//  Made some functions Actor members.
//  Replaced some pointers with references.
//
//  Revision 1.9  2002/01/25 18:04:35  dj_jl
//  Many global functions made Actor functions
//
//  Revision 1.8  2002/01/24 18:19:25  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//  Revision 1.7  2002/01/07 12:23:17  dj_jl
//  Changed copyright year
//
//  Revision 1.6  2001/12/12 18:57:41  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.5  2001/11/02 18:42:08  dj_jl
//  Damage method
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/08/29 17:42:13  dj_jl
//  Added sound channel
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
