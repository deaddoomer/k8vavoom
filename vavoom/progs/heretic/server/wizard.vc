//**************************************************************************
//**
//**	##   ##    ##    ##   ##   ####     ####   ###     ###
//**	##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**	 ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**	 ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**	  ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**	   #    ##    ##    #      ####     ####   ##       ##
//**
//**	Copyright (C) 1999-2000 JÆnis Legzdi·ý
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**	
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//==========================================================================
//
//	A_WizAtk1
//
//==========================================================================

void A_WizAtk1(mobj_t* actor)
{
	A_FaceTarget(actor);
	actor->translucency = 0;
}

//==========================================================================
//
//	A_WizAtk2
//
//==========================================================================

void A_WizAtk2(mobj_t* actor)
{
	A_FaceTarget(actor);
	actor->translucency = 33;
}

//==========================================================================
//
//	A_WizAtk3
//
//==========================================================================

void A_WizAtk3(mobj_t* actor)
{
	mobj_t*	mo;
	angle_t	angle;
	TAVec	angles;

	actor->translucency = 0;
	if(!actor->target)
	{
		return;
	}
	StartSound(actor, actor->sound_attack);
	if(P_CheckMeleeRange(actor))
	{
		DamageMobj(actor->target, actor, actor, HITDICE(4));
		return;
	}
	mo = SpawnMissile(actor, actor->target, MT_WIZFX1);
	if (mo)
	{
		VectorAngles(&mo->velocity, &angles);
		angle = mo->angles.yaw;
		SpawnMissileAngles(actor, MT_WIZFX1, angle-(ANG45/8), angles.pitch);
		SpawnMissileAngles(actor, MT_WIZFX1, angle+(ANG45/8), angles.pitch);
	}
}

//==========================================================================
//
//	A_GhostOff
//
//==========================================================================

void A_GhostOff(mobj_t* actor)
{
	actor->translucency = 0;
}

