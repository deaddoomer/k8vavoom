//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponPiece : Pickup
	abstract;

const int
	WPIECE1			= 1,
	WPIECE2			= 2,
	WPIECE3			= 4;

int PieceClass;
int PieceValue;

bool gaveWeapon;
bool remove;

//==========================================================================
//
//  HandlePickup
//
//==========================================================================

bool HandlePickup(EntityEx Toucher)
{
	bool checkAssembled;
	int gaveMana;

	remove = true;
	checkAssembled = true;
	gaveWeapon = false;
	if (Toucher.Player.PClass != PieceClass)
	{
		// Wrong class, but try to pick up for mana
		if (Level.Game.netgame && !Level.Game.deathmatch)
		{
			// Can't pick up wrong-class weapons in coop netplay
			return false;
		}
		checkAssembled = false;
		gaveMana = Player(Toucher.Player).GiveMana(HexenDefs::MANA_BOTH, 20);
		if (!gaveMana)
		{
			// Didn't need the mana, so don't pick it up
			return false;
		}
	}
	else if (Level.Game.netgame && !Level.Game.deathmatch)
	{
		// Cooperative net-game
		if (Player(Toucher.Player).Pieces & PieceValue)
		{
			// Already has the piece
			return false;
		}
		PieceValue = MainGameInfo(Level.Game).pieceValueTrans[PieceValue];
		Player(Toucher.Player).GiveMana(HexenDefs::MANA_BOTH, 20);
		remove = false;
	}
	else
	{
		// Deathmatch or single player game
		gaveMana = Player(Toucher.Player).GiveMana(HexenDefs::MANA_BOTH, 20);
		if (Player(Toucher.Player).Pieces & PieceValue)
		{
			// Already has the piece, check if mana needed
			if (!gaveMana)
			{
				// Didn't need the mana, so don't pick it up
				return false;
			}
			checkAssembled = false;
		}
	}

	// Pick up the weapon piece

	// Check if fourth weapon assembled
	if (checkAssembled)
	{
		Player(Toucher.Player).Pieces |= PieceValue;
		if (Player(Toucher.Player).Pieces == (WPIECE1 | WPIECE2 | WPIECE3))
		{
			gaveWeapon = true;
			Player(Toucher.Player).WeaponOwned[HexenDefs::WP_FOURTH] = true;
			Player(Toucher.Player).PendingWeapon = HexenDefs::WP_FOURTH;
		}
	}
	return true;
}

//==========================================================================
//
//	GetPickupMessage
//
//==========================================================================

string GetPickupMessage()
{
	if (gaveWeapon)
	{
		return MainGameInfo(Level.Game).fourthWeaponText[PieceClass];
	}
	else
	{
		return ::GetPickupMessage();
	}
}

//==========================================================================
//
//	HidePickup
//
//==========================================================================

void HidePickup()
{
	if (remove)
	{
		if (Level.Game.deathmatch && !bDropped)
		{
			HideSpecial();
		}
		else
		{
			Destroy();
		}
	}
}

//==========================================================================
//
//	PlayPickupSound
//
//==========================================================================

void PlayPickupSound(EntityEx Toucher)
{
	if (gaveWeapon)
	{
		// Play the build-sound full volume for all players
		Toucher.PlaySound('WeaponBuild', CHAN_ITEM, 1.0, ATTN_NONE);
	}
	else
	{
		::PlayPickupSound(Toucher);
	}
}

defaultproperties
{
	bFloatBob = true;
	PickupSound = 'PickupWeapon';
	bFullVolPickupSound = true;
}
