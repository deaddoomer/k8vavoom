//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class ArtiInvulnerability : Inventory
	__mobjinfo__(84);

//==========================================================================
//
//	Use
//
//==========================================================================

bool Use(bool Pickup)
{
	Powerup Pw = Powerup(EntityEx(Owner).FindInventory(PowerInvulnerable));
	if (Pw)
	{
		if (Pw.DurationTime > Player::BLINKTHRESHOLD)
		{
			// Already have it
			return false;
		}
		Pw.DurationTime = Player::INVULNTIME;
		return true;
	}
	else
	{
		Pw = Spawn(PowerInvulnerable);
		Pw.DurationTime = Player::INVULNTIME;
		if (!Pw.TryPickup(EntityEx(Owner)))
		{
			Pw.Destroy();
			return false;
		}
		Actor(Owner).bInvulnerable = true;
		if (Owner.Player.PClass == HexenDefs::PCLASS_MAGE)
		{
			Actor(Owner).bReflective = true;
		}
		return true;
	}
}

__states__
{
	S_ARTI_INVU1('INVU', 0, 3.0 / 35.0, S_ARTI_INVU2) = none
	S_ARTI_INVU2('INVU', 1, 3.0 / 35.0, S_ARTI_INVU3) = none
	S_ARTI_INVU3('INVU', 2, 3.0 / 35.0, S_ARTI_INVU4) = none
	S_ARTI_INVU4('INVU', 3, 3.0 / 35.0, S_ARTI_INVU1) = none
}

defaultproperties
{
	MaxAmount = DefMaxAmount;
	PickupSound = 'PickupArtifact';
	PickupMessage = "$txt_artiinvulnerability2";
	RespawnTime = 600.0 + 30.0 / 35.0;
	IconName = 'artiinvu';
	bFloatBob = true;
	bPickupFlash = true;
	bInvBar = true;
	IdleState = S_ARTI_INVU1;
}
