//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class ArmorPickup : HexenArmor;

//==========================================================================
//
//  GiveArmor
//
//  Returns false if the armor is worse than the current armor.
//
//==========================================================================

bool GiveArmor(EntityEx Toucher, int armortype, int amount)
{
	float hits;
	float totalArmor;

	HexenArmor HArmor = HexenArmor(Toucher.FindInventory(HexenArmor));
	if (amount <= 0)
	{
		hits = HArmor.SlotsIncrement[armortype];
		if (HArmor.Slots[armortype] >= hits)
		{
			return false;
		}
		else
		{
			HArmor.Slots[armortype] = hits;
		}
	}
	else
	{
		hits = itof(amount) * 5.0;
		totalArmor = HArmor.Slots[0] + HArmor.Slots[1] +
			HArmor.Slots[2] + HArmor.Slots[3] + HArmor.Slots[4];
		if (totalArmor < MainGameInfo(Level.Game).ArmorMax[Toucher.Player.PClass] * 5.0)
		{
			HArmor.Slots[armortype] += hits;
		}
		else
		{
			return false;
		}
	}
	return true;
}

//==========================================================================
//
//  TryPickup
//
//==========================================================================

bool TryPickup(EntityEx Toucher)
{
	if (GiveArmor(Toucher, Health, Amount))
	{
		GoAwayAndDie();
		return true;
	}
	return false;
}

defaultproperties
{
	Height = 32.0;
	bNoGravity = true;
}
