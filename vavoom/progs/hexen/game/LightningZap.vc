//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class LightningZap:Projectile;

//==========================================================================
//
//  A_ZapMimic
//
//==========================================================================

void A_ZapMimic(void)
{
	Actor A;

	A = *SpecialMobj2;
	if (A)
	{
		if (A.StateNum >= A.DeathState || A.StateNum == S_FREETARGMOBJ)
		{
			ExplodeMissile();
		}
		else
		{
			Velocity.x = A.Velocity.x;
			Velocity.y = A.Velocity.y;
		}
	}
}

__states__
{
	S_LIGHTNING_ZAP1('MLFX', 8 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_ZAP2) { A_ZapMimic(); }
	S_LIGHTNING_ZAP2('MLFX', 9 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_ZAP3) { A_ZapMimic(); }
	S_LIGHTNING_ZAP3('MLFX', 10 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_ZAP4) { A_ZapMimic(); }
	S_LIGHTNING_ZAP4('MLFX', 11 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_ZAP5) { A_ZapMimic(); }
	S_LIGHTNING_ZAP5('MLFX', 12 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_ZAP1) { A_ZapMimic(); }
	S_LIGHTNING_ZAP_X1('MLFX', 13 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_ZAP_X2) { }
	S_LIGHTNING_ZAP_X2('MLFX', 14 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_ZAP_X3) { }
	S_LIGHTNING_ZAP_X3('MLFX', 15 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_ZAP_X4) { }
	S_LIGHTNING_ZAP_X4('MLFX', 16 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_ZAP_X5) { }
	S_LIGHTNING_ZAP_X5('MLFX', 17 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_ZAP_X6) { }
	S_LIGHTNING_ZAP_X6('MLFX', 18 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_ZAP_X7) { }
	S_LIGHTNING_ZAP_X7('MLFX', 19 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_ZAP_X8) { }
	S_LIGHTNING_ZAP_X8('MLFX', 20 | FF_FULLBRIGHT, 2.0 / 35.0, S_NULL) { }
}

defaultproperties
{
	Radius = 15.0;
	Height = 35.0;
	MissileDamage = 2;
	bNoTeleport = false;
	bActivateImpact = false;
	bActivatePCross = false;
	IdleState = S_LIGHTNING_ZAP1;
	DeathState = S_LIGHTNING_ZAP_X8;
	Effects = EF_DL_BLUE;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.1  2002/10/26 16:32:26  dj_jl
//  New style of defining classes.
//
//**************************************************************************
