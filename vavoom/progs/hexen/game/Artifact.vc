//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Artifact : Inventory
	abstract;

int ArtifactType;

//==========================================================================
//
//	CreateCopy
//
//==========================================================================

Inventory CreateCopy(EntityEx Toucher)
{
	Inventory Item = ::CreateCopy(Toucher);
	Player(Toucher.Player).Inventory[Player(Toucher.Player).InventorySlotNum] = Artifact(Item);
	Player(Toucher.Player).InventorySlotNum++;
	if (!Player(Toucher.Player).InvPtr)
	{
		Player(Toucher.Player).InvPtr = Item;
		Player(Toucher.Player).InvFirst = Item;
	}
	return Item;
}

defaultproperties
{
	Height = 32.0;
	MaxAmount = DefMaxAmount;
	bFloatBob = true;
	bPickupFlash = true;
	bInvBar = true;
	PickupSound = 'PickupArtifact';
}
