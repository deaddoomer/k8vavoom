//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**    Load menu
//**
//**    Selected from Single Player menu
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

#define NUMSLOTS	8

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

class MenuScreenLoadGame:MenuScreen
{
	menusaveslot_t slot[NUMSLOTS];
	menutext_t title;

	defaultproperties
	{
		SelectorType = MenuSelector_BigArrow;
	}
}

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

MenuScreenLoadGame LoadMenu;

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  load_func
//
//==========================================================================

void load_func(menucommon_t * aitem, int msg)
{
	menusaveslot_t *item = (menusaveslot_t *) aitem;

	if (msg != MMSG_ACTIVATE)
	{
		return;
	}

	if (!item->status)
	{
		// Don't try to load from an empty slot
		return;
	}

	CmdBuf_AddText("Load %d\n", item->id);
	ForceMenuOff();
	LocalSound('MenuSelect');
}

//==========================================================================
//
//  menu_load
//
//==========================================================================

void menu_load(void)
{
	int x = 80;
	int y = 40;
	int i;

	enteringText = false;

	LoadMenu = MenuScreenLoadGame(SpawnMenu(MenuScreenLoadGame));

	for (i = 0; i < NUMSLOTS; i++)
	{
		MenuSaveSlot_Init(&LoadMenu.slot[i], x, y);
		LoadMenu.slot[i].callback = load_func;
		LoadMenu.slot[i].id = i;
		LoadMenu.slot[i].status =
			SV_GetSaveString(i, ARR2STR(LoadMenu.slot[i].text));
		MenuItemWrapper(LoadMenu.AddItem(MenuItemWrapper)).item = &LoadMenu.slot[i];
		y += 18;
	}

	MenuText_InitTitle(&LoadMenu.title, 160, 24, "LOAD GAME", TEXT_BIGC);
	MenuItemWrapper(LoadMenu.AddItem(MenuItemWrapper)).item = &LoadMenu.title;

	PushMenuScreen(LoadMenu);
}

//**************************************************************************
//
//  $Log$
//  Revision 1.9  2002/01/21 18:21:33  dj_jl
//  Working on object-oriented menus
//
//  Revision 1.8  2002/01/11 18:19:41  dj_jl
//  Started to use names in progs
//
//  Revision 1.7  2002/01/07 12:25:57  dj_jl
//  Changed copyright year
//
//  Revision 1.6  2001/11/02 18:40:13  dj_jl
//  Beautification
//
//  Revision 1.5  2001/09/25 17:11:04  dj_jl
//  Seperated menu API
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
