//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**    Load menu
//**
//**    Selected from Single Player menu
//**
//**************************************************************************

//==========================================================================
//
//	MenuChoice_LoadSlot
//
//==========================================================================

class MenuChoice_LoadSlot:MenuSaveSlot
{
	void ActivateSlot(void)
	{
		if (!Status)
		{
			// Don't try to load from an empty slot
			return;
		}

		CmdBuf_AddText("Load %d\n", SlotNum);
		ForceMenuOff();
		LocalSound('MenuSelect');
	}

	defaultproperties
	{
	}
}

//==========================================================================
//
//	MenuScreenLoadGame
//
//==========================================================================

class MenuScreenLoadGame:MenuScreen
{
	void CreateChoices(void)
	{
		MenuChoice_LoadSlot newChoice;
		int i;

		enteringText = false;

		for (i = 0; i < 8; i++)
		{
			newChoice = MenuChoice_LoadSlot(AddItem(MenuChoice_LoadSlot));
			newChoice.SetPos(ChoicesStartX, ChoicesStartY + i * 18);
			newChoice.SlotNum = i;
			newChoice.Status = SV_GetSaveString(i, ARR2STR(newChoice.Text));
		}
	}

	defaultproperties
	{
		ChoicesStartX = 80;
		ChoicesStartY = 40;
		SelectorType = MenuSelector_BigArrow;
		Title = "LOAD GAME";
	}
}

void menu_load(void)
{
	PushMenuScreen(SpawnMenu(MenuScreenLoadGame));
}

//**************************************************************************
//
//  $Log$
//  Revision 1.10  2002/01/23 17:54:23  dj_jl
//  Object-oriented menus, got rid of C-style type casting.
//
//  Revision 1.9  2002/01/21 18:21:33  dj_jl
//  Working on object-oriented menus
//
//  Revision 1.8  2002/01/11 18:19:41  dj_jl
//  Started to use names in progs
//
//  Revision 1.7  2002/01/07 12:25:57  dj_jl
//  Changed copyright year
//
//  Revision 1.6  2001/11/02 18:40:13  dj_jl
//  Beautification
//
//  Revision 1.5  2001/09/25 17:11:04  dj_jl
//  Seperated menu API
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
