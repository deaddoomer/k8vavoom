//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**    Player setup
//**
//**************************************************************************

class MenuChoice_Color;
class MenuChoice_PClass;

//==========================================================================
//
//	MenuChoice_PlayerName
//
//==========================================================================

class MenuChoice_PlayerName:MenuInputLine
{
	void Init(void)
	{
		::Init();
		strcpy(ARR2STR(Value), GetCvarS("Name"));
	}

	void ValueChanged(void)
	{
		::ValueChanged();
		SetCvarS("Name", ARR2STR(Value));
	}

	defaultproperties
	{
		Text = "Name";
	}
}

//==========================================================================
//
//	MenuScreenPlayerSetup
//
//==========================================================================

class MenuScreenPlayerSetup:MenuScreen
{
	MenuSpriteAnim Anim;
	int Color;
	int PClass;

	void SetColor(void)
	{
		Anim.SprDef = 500 + PClass;
		Anim.Translation = 0;
		if (PClass == PCLASS_FIGHTER)
		{
			if (Color == 0)
				Anim.Translation = 2;
			else if (Color != 2)
				Anim.Translation = Color;
		}
		else
		{
			if (Color)
				Anim.Translation = PClass * (MAXPLAYERS - 1) + Color;
		}
	}

	void SetSpriteColor(int newColor)
	{
		Color = newColor;
		SetColor();
	}

	void SetPClass(int newPClass)
	{
		PClass = newPClass;
		SetColor();
	}

	void CreateChoices(void)
	{
		R_InstallSprite("PLAY", 500);
		R_InstallSprite("CLER", 501);
		R_InstallSprite("MAGE", 502);

		Anim = MenuSpriteAnim(AddItem(MenuSpriteAnim));
		Anim.SetPos(260, 120);
		Anim.SprDef = 500;
		Anim.Speed = 8;
		Anim.NumFrames = 4;

		::CreateChoices();
	}

	defaultproperties
	{
		Choices[0] = MenuChoice_PlayerName;
		Choices[1] = MenuChoice_Color;
		Choices[2] = MenuChoice_PClass;
		ChoicesStartX = 16;
		ChoicesStartY = 40;
		SelectorType = MenuSelector_SmallLeft;
		Title = "PLAYER SETUP";
	}
}

//==========================================================================
//
//	MenuChoice_Color
//
//==========================================================================

class MenuChoice_Color:MenuChoiceEnum
{
	int GetInitialValue(void)
	{
		return GetCvar("color");
	}

	boolean SetNewValue(int newValue)
	{
		SetCvar("color", newValue);
		MenuScreenPlayerSetup(Parent).SetSpriteColor(newValue);
		return true;
	}

	void Init(void)
	{
		::Init();
		MenuScreenPlayerSetup(Parent).SetSpriteColor(Value);
	}

	defaultproperties
	{
		Text = "Color";
		bLeftAlign = true;
		EnumNames[0] = "blue";
		EnumNames[1] = "red";
		EnumNames[2] = "gold";
		EnumNames[3] = "light green";
		EnumNames[4] = "green";
		EnumNames[5] = "gray";
		EnumNames[6] = "brown";
		EnumNames[7] = "magenta";
	}
}

//==========================================================================
//
//	MenuChoice_PClass
//
//==========================================================================

class MenuChoice_PClass:MenuChoiceEnum
{
	int GetInitialValue(void)
	{
		return GetCvar("class");
	}

	boolean SetNewValue(int newValue)
	{
		SetCvar("class", newValue);
		MenuScreenPlayerSetup(Parent).SetPClass(newValue);
		return true;
	}

	void Init(void)
	{
		::Init();
		MenuScreenPlayerSetup(Parent).SetPClass(Value);
	}

	defaultproperties
	{
		Text = "Class";
		bLeftAlign = true;
		EnumNames[0] = "fighter";
		EnumNames[1] = "cleric";
		EnumNames[2] = "mage";
	}
}

void menu_psetup(void)
{
	PushMenuScreen(SpawnMenu(MenuScreenPlayerSetup));
}

//**************************************************************************
//
//  $Log$
//  Revision 1.9  2002/02/26 17:46:50  dj_jl
//  Fixes for menus.
//
//  Revision 1.8  2002/01/23 17:54:23  dj_jl
//  Object-oriented menus, got rid of C-style type casting.
//
//  Revision 1.7  2002/01/21 18:21:33  dj_jl
//  Working on object-oriented menus
//
//  Revision 1.6  2002/01/11 08:03:13  dj_jl
//  Renamed 'name' to "Name'
//
//  Revision 1.5  2002/01/07 12:25:57  dj_jl
//  Changed copyright year
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
