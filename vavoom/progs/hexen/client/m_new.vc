//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**    New game menu
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

class MenuScreenNewNetGame:MenuScreen
{
	menutext_t start;
	menuswitch_t players;
	menuswitch_t monsters;
	menuswitch_t deathmatch;
	menuswitch_t skill;
	menuswitch_t timelimit;
	menuswitch_t level;
	menutext_t title;

	defaultproperties
	{
	}
}

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

MenuScreenNewNetGame NewGameMenu;

string sw_mapnames[99];

string sw_players[7] = { "2", "3", "4", "5", "6", "7", "8" };
string sw_deathmatch[2] = { "Cooperative", "Deathmatch" };
string sw_skill[5] = { "Baby", "Easy", "Normal", "Hard", "Nightmare" };
string sw_cnt5[13] =
	{ "0", "5", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55",
	"60"
};

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  StartNewGame
//
//==========================================================================

void StartNewGame(void)
{
	int buf[16];
	string str = ARR2STR(buf);

	CmdBuf_AddText("Disconnect\n");
	CmdBuf_AddText("MaxPlayers %d\n", NewGameMenu.players.value + 2);
	CmdBuf_AddText("NoMonsters %d\n", !NewGameMenu.monsters.value);
	CmdBuf_AddText("DeathMatch %d\n", NewGameMenu.deathmatch.value);
	CmdBuf_AddText("TimeLimit %d\n", NewGameMenu.timelimit.value * 5);
	CmdBuf_AddText("Skill %d\n", NewGameMenu.skill.value);
	if (NewGameMenu.level.value + 1 < 10)
		CmdBuf_AddText("Map MAP0%d\n", NewGameMenu.level.value + 1);
	else
		CmdBuf_AddText("Map MAP%d\n", NewGameMenu.level.value + 1);
}

//==========================================================================
//
//  menu_new_game
//
//==========================================================================

void menu_new_game(void)
{
	int x = 128;
	int y = 40;
	int i;
	int count = 0;

	NewGameMenu = MenuScreenNewNetGame(SpawnMenu(MenuScreenNewNetGame));

	MenuText_InitFunc(&NewGameMenu.start, x, y, "Start Game", TEXT_SMALLR,
		StartNewGame);
	MenuItemWrapper(NewGameMenu.AddItem(MenuItemWrapper)).item = &NewGameMenu.start;
	y += 10;

	MenuSwitch_Init(&NewGameMenu.players, x, y, "Max players", TEXT_SMALLR, 2,
		6, &sw_players[0]);
	MenuItemWrapper(NewGameMenu.AddItem(MenuItemWrapper)).item = &NewGameMenu.players;
	y += 10;

	MenuSwitch_Init(&NewGameMenu.monsters, x, y, "Monsters", TEXT_SMALLR, 0,
		2, &sw_offon[0]);
	MenuItemWrapper(NewGameMenu.AddItem(MenuItemWrapper)).item = &NewGameMenu.monsters;
	y += 10;

	MenuSwitch_Init(&NewGameMenu.deathmatch, x, y, "Game type", TEXT_SMALLR,
		1, 2, &sw_deathmatch[0]);
	MenuItemWrapper(NewGameMenu.AddItem(MenuItemWrapper)).item = &NewGameMenu.deathmatch;
	y += 10;

	MenuSwitch_Init(&NewGameMenu.skill, x, y, "Skill", TEXT_SMALLR, 2, 5,
		&sw_skill[0]);
	MenuItemWrapper(NewGameMenu.AddItem(MenuItemWrapper)).item = &NewGameMenu.skill;
	y += 10;

	MenuSwitch_Init(&NewGameMenu.timelimit, x, y, "Time limit", TEXT_SMALLR,
		0, 13, &sw_cnt5[0]);
	MenuItemWrapper(NewGameMenu.AddItem(MenuItemWrapper)).item = &NewGameMenu.timelimit;
	y += 10;

#ifdef FIXME
	for (i = 1; i <= 99; i++)
	{
		int map = P_TranslateMap(i);

		if (map != -1)
		{
			sw_mapnames[count] = P_GetMapName(map);
			count++;
		}
	}
#else
	for (i = 1; i <= 32; i++)
	{
		sw_mapnames[count] = P_GetMapName(i);
		count++;
	}
#endif

	MenuSwitch_Init(&NewGameMenu.level, x, y, "Level", TEXT_SMALLR, 0, count,
		&sw_mapnames[0]);
	MenuItemWrapper(NewGameMenu.AddItem(MenuItemWrapper)).item = &NewGameMenu.level;

	MenuText_InitTitle(&NewGameMenu.title, 160, 24, "NEW GAME", TEXT_BIGC);
	MenuItemWrapper(NewGameMenu.AddItem(MenuItemWrapper)).item = &NewGameMenu.title;

	PushMenuScreen(NewGameMenu);
}

//**************************************************************************
//
//  $Log$
//  Revision 1.6  2002/01/21 18:21:33  dj_jl
//  Working on object-oriented menus
//
//  Revision 1.5  2002/01/07 12:25:57  dj_jl
//  Changed copyright year
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
