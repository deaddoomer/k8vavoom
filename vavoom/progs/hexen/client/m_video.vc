//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**    Video options menu
//**
//**************************************************************************

enum
{
	DRV_SOFTWARE,
	DRV_OPENGL,
	DRV_DIRECT3D
};

//==========================================================================
//
//	MenuChoice_ScreenSize
//
//==========================================================================

class MenuChoice_ScreenSize:MenuChoiceSlider
{
	float GetInitialValue(void)
	{
		return itof(GetCvar("screen_size"));
	}

	boolean SetNewValue(float newValue)
	{
		SetCvar("screen_size", ftoi(newValue));
		return true;
	}

	defaultproperties
	{
		Text = "Screen size";
		MinValue = 3.0;
		MaxValue = 11.0;
	}
}

//==========================================================================
//
//	MenuChoice_Brightness
//
//==========================================================================

class MenuChoice_Brightness:MenuChoiceSlider
{
	float GetInitialValue(void)
	{
		return itof(GetCvar("brightness"));
	}

	boolean SetNewValue(float newValue)
	{
		SetCvar("brightness", ftoi(newValue));
		return true;
	}

	defaultproperties
	{
		Text = "Brightness";
		MaxValue = 4.0;
	}
}

//==========================================================================
//
//	MenuChoice_Darkening
//
//==========================================================================

class MenuChoice_Darkening:MenuChoiceSlider
{
	float GetInitialValue(void)
	{
		return itof(GetCvar("menu_darkening"));
	}

	boolean SetNewValue(float newValue)
	{
		SetCvar("menu_darkening", ftoi(newValue));
		return true;
	}

	defaultproperties
	{
		Text = "Menu darkness";
		MaxValue = 31.0;
	}
}

//==========================================================================
//
//	MenuChoice_Croshair
//
//==========================================================================

class MenuChoice_Croshair:MenuChoiceEnum
{
	int GetInitialValue(void)
	{
		return GetCvar("croshair");
	}

	boolean SetNewValue(int newValue)
	{
		SetCvar("croshair", newValue);
		return true;
	}

	defaultproperties
	{
		Text = "Croshair";
		EnumNames[0] = "None";
		EnumNames[1] = "Cross";
		EnumNames[2] = "Angle";
		EnumNames[3] = "Dot";
	}
}

//==========================================================================
//
//	MenuChoice_DarkenLights
//
//==========================================================================

class MenuChoice_DarkenLights:MenuChoice_OnOff
{
	int GetInitialValue(void)
	{
		return GetCvar("r_darken");
	}

	boolean SetNewValue(int newValue)
	{
		SetCvar("r_darken", newValue);
		return true;
	}

	defaultproperties
	{
		Text = "Darken lights";
	}
}

//==========================================================================
//
//	MenuChoice_ExtraSamples
//
//==========================================================================

class MenuChoice_ExtraSamples:MenuChoice_OnOff
{
	int GetInitialValue(void)
	{
		return GetCvar("r_extrasamples");
	}

	boolean SetNewValue(int newValue)
	{
		SetCvar("r_extrasamples", newValue);
		return true;
	}

	defaultproperties
	{
		Text = "Extra samples";
	}
}

//==========================================================================
//
//	MenuChoice_DynamicLights
//
//==========================================================================

class MenuChoice_DynamicLights:MenuChoice_OnOff
{
	int GetInitialValue(void)
	{
		return GetCvar("r_dynamic");
	}

	boolean SetNewValue(int newValue)
	{
		SetCvar("r_dynamic", newValue);
		return true;
	}

	defaultproperties
	{
		Text = "Dynamic lights";
	}
}

//==========================================================================
//
//	MenuChoice_ColoredLights
//
//==========================================================================

class MenuChoice_ColoredLights:MenuChoice_OnOff
{
	int GetInitialValue(void)
	{
		return GetCvar("d_colored_lights");
	}

	boolean SetNewValue(int newValue)
	{
		SetCvar("d_colored_lights", newValue);
		return true;
	}

	defaultproperties
	{
		Text = "Colored lights";
	}
}

//==========================================================================
//
//	MenuChoice_SpanDrawing
//
//==========================================================================

class MenuChoice_SpanDrawing:MenuChoiceEnum
{
	int GetInitialValue(void)
	{
		return GetCvar("d_subdiv") - 1;
	}

	boolean SetNewValue(int newValue)
	{
		SetCvar("d_subdiv", newValue + 1);
		return true;
	}

	defaultproperties
	{
		Text = "Span drawing";
		EnumNames[0] = "Subdivision 8";
		EnumNames[1] = "Subdivision 16";
	}
}

//==========================================================================
//
//	MenuChoice_GLBlendSprites
//
//==========================================================================

class MenuChoice_GLBlendSprites:MenuChoice_OnOff
{
	int GetInitialValue(void)
	{
		return GetCvar("gl_blend_sprites");
	}

	boolean SetNewValue(int newValue)
	{
		SetCvar("gl_blend_sprites", newValue);
		return true;
	}

	defaultproperties
	{
		Text = "Blend sprite borders";
	}
}

//==========================================================================
//
//	MenuChoice_D3DBlendSprites
//
//==========================================================================

class MenuChoice_D3DBlendSprites:MenuChoice_GLBlendSprites
{
	int GetInitialValue(void)
	{
		return GetCvar("d3d_blend_sprites");
	}

	boolean SetNewValue(int newValue)
	{
		SetCvar("d3d_blend_sprites", newValue);
		return true;
	}

	defaultproperties
	{
	}
}

//==========================================================================
//
//	MenuScreenVideoOptions
//
//==========================================================================

class MenuScreenVideoOptions:MenuScreen
{
	void InitWindow(void)
	{
		switch (GetCvar("_driver"))
		{
		case DRV_SOFTWARE:
			Choices[7] = MenuChoice_ColoredLights;
			Choices[8] = MenuChoice_SpanDrawing;
			break;

		case DRV_OPENGL:
			Choices[7] = MenuChoice_GLBlendSprites;
			break;

		case DRV_DIRECT3D:
			Choices[7] = MenuChoice_D3DBlendSprites;
			break;
		}
		::InitWindow();
	}

	defaultproperties
	{
		Choices[0] = MenuChoice_ScreenSize;
		Choices[1] = MenuChoice_Brightness;
		Choices[2] = MenuChoice_Darkening;
		Choices[3] = MenuChoice_Croshair;
		Choices[4] = MenuChoice_DarkenLights;
		Choices[5] = MenuChoice_ExtraSamples;
		Choices[6] = MenuChoice_DynamicLights;
		ChoicesStartX = 160;
		ChoicesStartY = 26;
		SelectorType = MenuSelector_SmallRight;
		Title = "VIDEO OPTIONS";
	}
}

void menu_video(void)
{
	PushMenuScreen(SpawnMenu(MenuScreenVideoOptions));
}

//**************************************************************************
//
//  $Log$
//  Revision 1.9  2002/05/29 16:50:26  dj_jl
//  Started a work on native Window classes.
//
//  Revision 1.8  2002/01/23 17:54:23  dj_jl
//  Object-oriented menus, got rid of C-style type casting.
//
//  Revision 1.7  2002/01/21 18:21:33  dj_jl
//  Working on object-oriented menus
//
//  Revision 1.6  2002/01/07 12:25:57  dj_jl
//  Changed copyright year
//
//  Revision 1.5  2001/10/27 07:37:02  dj_jl
//  Gamma controls for all drivers
//
//  Revision 1.4  2001/10/18 17:39:34  dj_jl
//  A lots of changes for Alpha 2
//
//  Revision 1.3  2001/09/24 17:24:09  dj_jl
//  Beautification
//
//  Revision 1.2  2001/08/24 17:06:40  dj_jl
//  Added extra sampling
//  
//  Revision 1.1  2001/08/23 17:38:15  dj_jl
//  Added video options menu
//  
//**************************************************************************
