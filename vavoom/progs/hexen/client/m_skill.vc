//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**    Skill menu
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

int MenuSkill;

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  SkillCallback
//
//==========================================================================

void SkillCallback(menucommon_t * item, int msg)
{
	if (msg == MMSG_ACTIVATE)
	{
		MenuSkill = item->id;
	}
}

//==========================================================================
//
//  skill_func
//
//  Let's play
//
//==========================================================================

void skill_func(void)
{
	SetCvar("Skill", MenuSkill);
	SetCvar("Class", MenuPClass);

	CmdBuf_AddText("Disconnect\n");
	CmdBuf_AddText("MaxPlayers 1\n");
	CmdBuf_AddText("Map %s\n", P_TranslateMap(1));

	ForceMenuOff();
}

//==========================================================================
//
//	MenuScreenSkill
//
//==========================================================================

class MenuScreenSkill:MenuScreen
{
	menutext_t skill[5];
	menutext_t title;

	defaultproperties
	{
		SelectorType = MenuSelector_BigArrow;
	}
};

void menu_skill(void)
{
	MenuScreenSkill SkillMenu;
	int x;
	int y;
	int i;

	SkillMenu = MenuScreenSkill(SpawnMenu(MenuScreenSkill));

	switch (MenuPClass)
	{
	case PCLASS_FIGHTER:
		x = 120;
		break;
	case PCLASS_CLERIC:
		x = 116;
		break;
	case PCLASS_MAGE:
		x = 112;
		break;
	}
	y = 44;

	for (i = 0; i < 5; i++)
	{
		MenuText_InitFunc(&SkillMenu.skill[i], x, y, "", TEXT_BIG,
			skill_func);
		SkillMenu.skill[i].callback = SkillCallback;
		SkillMenu.skill[i].id = i;
		MenuItemWrapper(SkillMenu.AddItem(MenuItemWrapper)).item = &SkillMenu.skill[i];
		y += 18;
	}

	switch (MenuPClass)
	{
	case PCLASS_FIGHTER:
		SkillMenu.skill[0].text = "SQUIRE";
		SkillMenu.skill[1].text = "KNIGHT";
		SkillMenu.skill[2].text = "WARRIOR";
		SkillMenu.skill[3].text = "BERSERKER";
		SkillMenu.skill[4].text = "TITAN";
		break;
	case PCLASS_CLERIC:
		SkillMenu.skill[0].text = "ALTAR BOY";
		SkillMenu.skill[1].text = "ACOLYTE";
		SkillMenu.skill[2].text = "PRIEST";
		SkillMenu.skill[3].text = "CARDINAL";
		SkillMenu.skill[4].text = "POPE";
		break;
	case PCLASS_MAGE:
		SkillMenu.skill[0].text = "APPRENTICE";
		SkillMenu.skill[1].text = "ENCHANTER";
		SkillMenu.skill[2].text = "SORCERER";
		SkillMenu.skill[3].text = "WARLOCK";
		SkillMenu.skill[4].text = "ARCHIMAGE";
		break;
	}

	MenuText_InitTitle(&SkillMenu.title, 160, 24, "CHOOSE SKILL LEVEL:",
		TEXT_BIGC);
	MenuItemWrapper(SkillMenu.AddItem(MenuItemWrapper)).item = &SkillMenu.title;

	PushMenuScreen(SkillMenu);
	SkillMenu.SetCursor(2);
}

//**************************************************************************
//
//  $Log$
//  Revision 1.9  2002/01/21 18:21:33  dj_jl
//  Working on object-oriented menus
//
//  Revision 1.8  2002/01/07 12:25:57  dj_jl
//  Changed copyright year
//
//  Revision 1.7  2001/12/01 18:04:24  dj_jl
//  Started reworking menus
//
//  Revision 1.6  2001/10/12 17:23:35  dj_jl
//  Start on first map in MAPINFO script
//
//  Revision 1.5  2001/09/25 17:11:04  dj_jl
//  Seperated menu API
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
