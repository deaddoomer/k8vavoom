//**************************************************************************
//**
//**	##   ##    ##    ##   ##   ####     ####   ###     ###
//**	##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**	 ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**	 ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**	  ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**	   #    ##    ##    #      ####     ####   ##       ##
//**
//**	$Id$
//**
//**	Copyright (C) 1999-2001 JÆnis Legzdi·ý
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//===========================================================================
// Quake variables
//
//		args[0]		Intensity on richter scale (2..9)
//		args[1]		Duration in tics
//		args[2]		Radius for damage
//		args[3]		Radius for tremor
//		args[4]		TID of map thing for focus of quake
//
//===========================================================================

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//===========================================================================
//
// A_LocalQuake
//
//===========================================================================

boolean A_LocalQuake(int *args, mobj_t *actor)
{
	mobj_t	*focus;
	mobj_t	*target;
	int 	lastfound=0;
	int 	success=false;

	// Find all quake foci
	do
	{
		target = P_FindMobjFromTID(args[4], &lastfound);
		if (target)
		{
			focus = P_SpawnMobj(target->origin.x,
								target->origin.y,
								target->origin.z, MT_QUAKE_FOCUS);
			if (focus)
			{
				focus->args[0] = args[0];
				focus->args[1] = args[1]>>1;	// decremented every 2 tics
				focus->args[2] = args[2];
				focus->args[3] = args[3];
				focus->args[4] = args[4];
				success = true;
			}
		}
	} while (target);

	return success;
}

//===========================================================================
//
// A_Quake
//
//===========================================================================

void A_Quake(mobj_t* actor)
{
	angle_t	 	an;
	player_t*	player;
	mobj_t*		victim;
	int 		richters = actor->args[0];
	int 		playnum;
	int 		dist;

	if (actor->args[1]-- > 0)
	{
		for (playnum = 0; playnum < MAXPLAYERS; playnum++)
		{
			player = &players[playnum];
			if (!player->active || !player->spawned)
				continue;

			victim = player->mo;
			dist = ftoi(MobjDist(actor, victim)) >> 6;
			// Tested in tile units (64 pixels)
			if (dist < actor->args[3])		// In tremor radius
			{
				player->localQuakeHappening = richters;
			}
			// Check if in damage radius
			if ((dist < actor->args[2]) &&
				(victim->origin.z <= victim->floorz))
			{
				if (P_Random() < 50)
				{
					DamageMobj(victim, NULL, NULL, HITDICE(1));
				}
				// Thrust player around
				an = victim->angles.yaw + ANGLE_1 * P_Random();
				P_ThrustMobj(victim, an, itof(richters) / 2.0);
			}
		}
	}
	else
	{
		for (playnum = 0; playnum < MAXPLAYERS; playnum++)
		{
			players[playnum].localQuakeHappening = false;
		}
		SetMobjState(actor, S_NULL);
	}
}

//**************************************************************************
//
//	$Log$
//	Revision 1.3  2001/09/20 16:20:00  dj_jl
//	Start using object-oriented stuff, beautification
//
//	Revision 1.2  2001/07/27 14:27:52  dj_jl
//	Update with Id-s and Log-s, some fixes
//
//**************************************************************************
