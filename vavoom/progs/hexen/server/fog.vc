//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2001 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//==========================================================================
// Fog Variables:
//
//      args[0]     Speed (0..10) of fog
//      args[1]     Angle of spread (0..128)
//      args[2]     Frequency of spawn (1..10)
//      args[3]     Lifetime countdown
//      args[4]     Boolean: fog moving?
//      special1        Internal:  Counter for spawn frequency
//      special2        Internal:  Index into floatbob table
//
//==========================================================================

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  Actor::A_FogSpawn
//
//==========================================================================

void Actor::A_FogSpawn(void)
{
	mobj_t *mo = NULL;
	float delta;

	if (special1-- > 0)
		return;

	special1 = args[2];	// Reset frequency count

	switch (P_Random() % 3)
	{
	case 0:
		mo = P_SpawnMobj(origin.x, origin.y, origin.z, MT_FOGPATCHS);
		break;
	case 1:
		mo = P_SpawnMobj(origin.x, origin.y, origin.z, MT_FOGPATCHM);
		break;
	case 2:
		mo = P_SpawnMobj(origin.x, origin.y, origin.z, MT_FOGPATCHL);
		break;
	}

	if (mo)
	{
		delta = itof(args[1]);
		if (delta == 0.0)
			delta = 1.0;
		mo->angles.yaw = AngleMod360(angles.yaw +
			((Random() * delta) - (delta * 0.5)) * 360.0 / 256.0);
		mo->target = this;
		if (args[0] < 1)
			args[0] = 1;
		mo->args[0] = (P_Random() % (args[0])) + 1;	// P_Random speed
		mo->args[3] = args[3];	// Set lifetime
		mo->args[4] = 1;	// Set to moving
		mo->special2 = P_Random() & 63;
	}
}

//==========================================================================
//
//	Actor::A_FogMove
//
//==========================================================================

void Actor::A_FogMove(void)
{
	float speed = itof(args[0]);
	float angle;
	int weaveindex;

	if (!args[4])
		return;

	if (args[3]-- <= 0)
	{
		SetMobjStateNF(this, deathstate);
		return;
	}

	if ((args[3] % 4) == 0)
	{
		weaveindex = special2;
		origin.z += FloatBobOffsets[weaveindex] / 2.0;
		special2 = (weaveindex + 1) & 63;
	}

	angle = angles.yaw;
	velocity.x = speed * cos(angle) * 35.0;
	velocity.y = speed * sin(angle) * 35.0;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.6  2001/12/12 18:57:42  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.5  2001/10/22 17:23:13  dj_jl
//  Floatification of angles
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
