//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//==========================================================================
// Fog Variables:
//
//      args[0]     Speed (0..10) of fog
//      args[1]     Angle of spread (0..128)
//      args[2]     Frequency of spawn (1..10)
//      args[3]     Lifetime countdown
//      args[4]     Boolean: fog moving?
//      special1        Internal:  Counter for spawn frequency
//      special2        Internal:  Index into floatbob table
//
//==========================================================================

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  Actor::A_FogSpawn
//
//==========================================================================

void Actor::A_FogSpawn(void)
{
	Actor A;
	float delta;

	if (_Special1-- > 0)
		return;

	_Special1 = Args[2];	// Reset frequency count

	switch (P_Random() % 3)
	{
	case 0:
		A = Spawn(FogPatchSmall, Origin);
		break;
	case 1:
		A = Spawn(FogPatchMedium, Origin);
		break;
	case 2:
		A = Spawn(FogPatchLarge, Origin);
		break;
	}

	if (A)
	{
		delta = itof(Args[1]);
		if (delta == 0.0)
			delta = 1.0;
		A.Angles.yaw = AngleMod360(Angles.yaw +
			((Random() * delta) - (delta * 0.5)) * 360.0 / 256.0);
		A.Instigator = self;
		if (Args[0] < 1)
			Args[0] = 1;
		A.Args[0] = (P_Random() % (Args[0])) + 1;	// P_Random speed
		A.Args[3] = Args[3];	// Set lifetime
		A.Args[4] = 1;	// Set to moving
		A._Special2 = P_Random() & 63;
	}
}

//==========================================================================
//
//	Actor::A_FogMove
//
//==========================================================================

void Actor::A_FogMove(void)
{
	float speed = itof(Args[0]);
	float angle;
	int weaveindex;

	if (!Args[4])
		return;

	if (Args[3]-- <= 0)
	{
		SetState(DeathState);
		return;
	}

	if ((Args[3] % 4) == 0)
	{
		weaveindex = _Special2;
		Origin.z += FloatBobOffsets[weaveindex] / 2.0;
		_Special2 = (weaveindex + 1) & 63;
	}

	angle = Angles.yaw;
	Velocity.x = speed * cos(angle) * 35.0;
	Velocity.y = speed * sin(angle) * 35.0;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.15  2002/03/28 18:20:11  dj_jl
//  Got rid of SetStateNF.
//
//  Revision 1.14  2002/03/16 17:47:46  dj_jl
//  Got rid of mobj_t and some other legacy.
//
//  Revision 1.13  2002/03/02 18:00:15  dj_jl
//  Some smaller changes, beautification.
//
//  Revision 1.12  2002/02/22 18:00:21  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.11  2002/02/14 19:20:58  dj_jl
//  Renamed Entity properties to new naming style
//
//  Revision 1.10  2002/01/24 18:19:26  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//  Revision 1.9  2002/01/17 18:15:54  dj_jl
//  Renamed all map object classes
//
//  Revision 1.8  2002/01/15 18:27:00  dj_jl
//  Some property names with logical words starting with capital letter.
//  Moved everything from Entity class into Actor class.
//
//  Revision 1.7  2002/01/07 12:25:57  dj_jl
//  Changed copyright year
//
//  Revision 1.6  2001/12/12 18:57:42  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.5  2001/10/22 17:23:13  dj_jl
//  Floatification of angles
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
