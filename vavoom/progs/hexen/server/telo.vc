//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//===========================================================================
//
//  Teleport other stuff
//
//===========================================================================

//**************************************************************************
//
//	TeleportOtherFX1
//
//**************************************************************************

class TeleportOtherFX1:Projectile
{

//==========================================================================
//
//  A_TeloSpawnA
//
//==========================================================================

void A_TeloSpawnA(void)
{
	Actor A;

	A = Spawn(TeleportOtherFX2, Origin);
	if (A)
	{
		A.Angles.yaw = Angles.yaw;
		A.Instigator = Instigator;
		A.Velocity = Velocity / 2.0;
	}
}

//==========================================================================
//
//  A_TeloSpawnB
//
//==========================================================================

void A_TeloSpawnB(void)
{
	Actor A;

	A = Spawn(TeleportOtherFX3, Origin);
	if (A)
	{
		A.Angles.yaw = Angles.yaw;
		A.Instigator = Instigator;
		A.Velocity = Velocity / 2.0;
	}
}

//==========================================================================
//
//  A_TeloSpawnC
//
//==========================================================================

void A_TeloSpawnC(void)
{
	Actor A;

	A = Spawn(TeleportOtherFX4, Origin);
	if (A)
	{
		A.Angles.yaw = Angles.yaw;
		A.Instigator = Instigator;
		A.Velocity = Velocity / 2.0;
	}
}

//==========================================================================
//
//  A_TeloSpawnD
//
//==========================================================================

void A_TeloSpawnD(void)
{
	Actor A;

	A = Spawn(TeleportOtherFX5, Origin);
	if (A)
	{
		A.Angles.yaw = Angles.yaw;
		A.Instigator = Instigator;
		A.Velocity = Velocity / 2.0;
	}
}

__states__
{
	S_TELO_FX1('TRNG', 4 | FF_FULLBRIGHT, 5.0 / 35.0, S_TELO_FX2) { }
	S_TELO_FX2('TRNG', 3 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX3) { }
	S_TELO_FX3('TRNG', 2 | FF_FULLBRIGHT, 3.0 / 35.0, S_TELO_FX4) { A_TeloSpawnC(); }
	S_TELO_FX4('TRNG', 1 | FF_FULLBRIGHT, 3.0 / 35.0, S_TELO_FX5) { A_TeloSpawnB(); }
	S_TELO_FX5('TRNG', 0 | FF_FULLBRIGHT, 3.0 / 35.0, S_TELO_FX6) { A_TeloSpawnA(); }
	S_TELO_FX6('TRNG', 1 | FF_FULLBRIGHT, 3.0 / 35.0, S_TELO_FX7) { A_TeloSpawnB(); }
	S_TELO_FX7('TRNG', 2 | FF_FULLBRIGHT, 3.0 / 35.0, S_TELO_FX8) { A_TeloSpawnC(); }
	S_TELO_FX8('TRNG', 3 | FF_FULLBRIGHT, 3.0 / 35.0, S_TELO_FX3) { A_TeloSpawnD(); }
	S_TELO_FX9('TRNG', 4 | FF_FULLBRIGHT, 3.0 / 35.0, S_NULL) { }
}

defaultproperties
{
	Radius = 16.0;
	Height = 16.0;
	Speed = 700.0;
	MissileDamage = 10001;
	bActivateImpact = false;
	bActivatePCross = false;
	IdleState = S_TELO_FX1;
	DeathState = S_TELO_FX9;
}

}

//**************************************************************************
//
//	TeleportOtherFX2
//
//**************************************************************************

class TeleportOtherFX2:TeleportOtherFX1
{

int LifeCount;

//==========================================================================
//
//  A_CheckTeleRing
//
//==========================================================================

void A_CheckTeleRing(void)
{
	if (LifeCount-- <= 0)
	{
		SetState(DeathState);
	}
}

__states__
{
	S_TELO_FX2_1('TRNG', 1 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX2_2) { }
	S_TELO_FX2_2('TRNG', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX2_3) { }
	S_TELO_FX2_3('TRNG', 3 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX2_4) { }
	S_TELO_FX2_4('TRNG', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX2_5) { }
	S_TELO_FX2_5('TRNG', 1 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX2_6) { }
	S_TELO_FX2_6('TRNG', 0 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX2_1) { A_CheckTeleRing(); }
}

defaultproperties
{
	LifeCount = 1;	// Lifetime countdown
	Speed = 560.0;
	IdleState = S_TELO_FX2_1;
}

}

//**************************************************************************
//
//	TeleportOtherFX3
//
//**************************************************************************

class TeleportOtherFX3:TeleportOtherFX2
{

__states__
{
	S_TELO_FX3_1('TRNG', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX3_2) { }
	S_TELO_FX3_2('TRNG', 3 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX3_3) { }
	S_TELO_FX3_3('TRNG', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX3_4) { }
	S_TELO_FX3_4('TRNG', 1 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX3_5) { }
	S_TELO_FX3_5('TRNG', 0 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX3_6) { }
	S_TELO_FX3_6('TRNG', 1 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX3_1) { A_CheckTeleRing(); }
}

defaultproperties
{
	IdleState = S_TELO_FX3_1;
}

}

//**************************************************************************
//
//	TeleportOtherFX4
//
//**************************************************************************

class TeleportOtherFX4:TeleportOtherFX2
{

__states__
{
	S_TELO_FX4_1('TRNG', 3 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX4_2) { }
	S_TELO_FX4_2('TRNG', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX4_3) { }
	S_TELO_FX4_3('TRNG', 1 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX4_4) { }
	S_TELO_FX4_4('TRNG', 0 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX4_5) { }
	S_TELO_FX4_5('TRNG', 1 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX4_6) { }
	S_TELO_FX4_6('TRNG', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX4_1) { A_CheckTeleRing(); }
}

defaultproperties
{
	IdleState = S_TELO_FX4_1;
}

}

//**************************************************************************
//
//	TeleportOtherFX5
//
//**************************************************************************

class TeleportOtherFX5:TeleportOtherFX2
{

__states__
{
	S_TELO_FX5_1('TRNG', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX5_2) { }
	S_TELO_FX5_2('TRNG', 1 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX5_3) { }
	S_TELO_FX5_3('TRNG', 0 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX5_4) { }
	S_TELO_FX5_4('TRNG', 1 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX5_5) { }
	S_TELO_FX5_5('TRNG', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX5_6) { }
	S_TELO_FX5_6('TRNG', 3 | FF_FULLBRIGHT, 4.0 / 35.0, S_TELO_FX5_1) { A_CheckTeleRing(); }
}

defaultproperties
{
	IdleState = S_TELO_FX5_1;
}

}

//**************************************************************************
//
//  $Log$
//  Revision 1.15  2002/06/22 07:16:02  dj_jl
//  Added base classes for objects, split them into corresponding files.
//
//  Revision 1.14  2002/03/28 18:32:51  dj_jl
//  Little renaming, some bug fixes.
//
//  Revision 1.13  2002/03/16 17:47:47  dj_jl
//  Got rid of mobj_t and some other legacy.
//
//  Revision 1.12  2002/03/02 18:00:17  dj_jl
//  Some smaller changes, beautification.
//
//  Revision 1.11  2002/02/22 18:00:24  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.10  2002/02/14 19:20:59  dj_jl
//  Renamed Entity properties to new naming style
//
//  Revision 1.9  2002/01/24 18:19:27  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//  Revision 1.8  2002/01/17 18:15:55  dj_jl
//  Renamed all map object classes
//
//  Revision 1.7  2002/01/15 18:27:00  dj_jl
//  Some property names with logical words starting with capital letter.
//  Moved everything from Entity class into Actor class.
//
//  Revision 1.6  2002/01/07 12:25:58  dj_jl
//  Changed copyright year
//
//  Revision 1.5  2001/12/12 18:57:42  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.2  2001/07/27 14:27:53  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
