//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2001 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//===========================================================================
//
//  Teleport other stuff
//
//===========================================================================

// MACROS ------------------------------------------------------------------

#define TELEPORT_LIFE 1

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  A_TeloSpawnA
//
//==========================================================================

void A_TeloSpawnA(mobj_t * actor)
{
	mobj_t *mo;

	mo =
		P_SpawnMobj(actor->origin.x, actor->origin.y, actor->origin.z,
		MT_TELOTHER_FX2);
	if (mo)
	{
		mo->special1 = TELEPORT_LIFE;	// Lifetime countdown
		mo->angles.yaw = actor->angles.yaw;
		mo->target = actor->target;
		mo->velocity.x = actor->velocity.x / 2.0;
		mo->velocity.y = actor->velocity.y / 2.0;
		mo->velocity.z = actor->velocity.z / 2.0;
	}
}

//==========================================================================
//
//  A_TeloSpawnB
//
//==========================================================================

void A_TeloSpawnB(mobj_t * actor)
{
	mobj_t *mo;

	mo =
		P_SpawnMobj(actor->origin.x, actor->origin.y, actor->origin.z,
		MT_TELOTHER_FX3);
	if (mo)
	{
		mo->special1 = TELEPORT_LIFE;	// Lifetime countdown
		mo->angles.yaw = actor->angles.yaw;
		mo->target = actor->target;
		mo->velocity.x = actor->velocity.x / 2.0;
		mo->velocity.y = actor->velocity.y / 2.0;
		mo->velocity.z = actor->velocity.z / 2.0;
	}
}

//==========================================================================
//
//  A_TeloSpawnC
//
//==========================================================================

void A_TeloSpawnC(mobj_t * actor)
{
	mobj_t *mo;

	mo =
		P_SpawnMobj(actor->origin.x, actor->origin.y, actor->origin.z,
		MT_TELOTHER_FX4);
	if (mo)
	{
		mo->special1 = TELEPORT_LIFE;	// Lifetime countdown
		mo->angles.yaw = actor->angles.yaw;
		mo->target = actor->target;
		mo->velocity.x = actor->velocity.x / 2.0;
		mo->velocity.y = actor->velocity.y / 2.0;
		mo->velocity.z = actor->velocity.z / 2.0;
	}
}

//==========================================================================
//
//  A_TeloSpawnD
//
//==========================================================================

void A_TeloSpawnD(mobj_t * actor)
{
	mobj_t *mo;

	mo =
		P_SpawnMobj(actor->origin.x, actor->origin.y, actor->origin.z,
		MT_TELOTHER_FX5);
	if (mo)
	{
		mo->special1 = TELEPORT_LIFE;	// Lifetime countdown
		mo->angles.yaw = actor->angles.yaw;
		mo->target = actor->target;
		mo->velocity.x = actor->velocity.x / 2.0;
		mo->velocity.y = actor->velocity.y / 2.0;
		mo->velocity.z = actor->velocity.z / 2.0;
	}
}

//==========================================================================
//
//  A_CheckTeleRing
//
//==========================================================================

void A_CheckTeleRing(mobj_t * actor)
{
	if (actor->special1-- <= 0)
	{
		SetMobjState(actor, actor->deathstate);
	}
}

//**************************************************************************
//
//  $Log$
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.2  2001/07/27 14:27:53  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
