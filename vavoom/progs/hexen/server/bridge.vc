//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//==========================================================================
//
// New bridge stuff
//
//  Parent
//      special1    true == removing from world
//
//  Child
//      Owner       pointer to center mobj
//      args[0]     angle of ball
//
//==========================================================================

float orbitTableX[256] = {
	14.999771, 14.995193, 14.981461, 14.958801, 14.926987, 14.886475,
		14.836578, 14.777985,
	14.710464, 14.634247, 14.548874, 14.455032, 14.352264, 14.241028,
		14.121094, 13.992691,
	13.855820, 13.710709, 13.557358, 13.395767, 13.225937, 13.048325,
		12.862930, 12.669525,
	12.468796, 12.260284, 12.044678, 11.821518, 11.591492, 11.354370,
		11.110382, 10.859528,
	10.602493, 10.338821, 10.068970, 9.793167, 9.511414, 9.223938, 8.930740,
		8.632278,
	8.328552, 8.020020, 7.706451, 7.388306, 7.065811, 6.738968, 6.408005,
		6.073151,
	5.734863, 5.392914, 5.047760, 4.699631, 4.348755, 3.995132, 3.638992,
		3.280792,
	2.920532, 2.558670, 2.195206, 1.830368, 1.464386, 1.097717, 0.730133,
		0.362320,
	-0.005722, -0.373764, -0.741577, -1.109161, -1.475830, -1.841812,
		-2.206421, -2.569885,
	-2.931976, -3.292007, -3.650208, -4.006119, -4.359741, -4.710617,
		-5.058746, -5.403671,
	-5.745392, -6.083679, -6.418304, -6.749268, -7.075882, -7.398376,
		-7.716293, -8.029633,
	-8.338165, -8.641663, -8.939896, -9.232864, -9.520340, -9.801865,
		-10.077438, -10.347061,
	-10.610504, -10.867538, -11.117935, -11.361694, -11.598587, -11.828613,
		-12.051315, -12.266922,
	-12.475204, -12.675705, -12.868881, -13.054047, -13.231430, -13.400803,
		-13.562164, -13.715286,
	-13.860168, -13.996811, -14.124985, -14.244690, -14.355698, -14.458008,
		-14.551849, -14.636765,
	-14.712753, -14.780045, -14.838409, -14.887848, -14.928131, -14.959717,
		-14.982147, -14.995422,
	-14.999771, -14.995193, -14.981461, -14.958801, -14.926987, -14.886475,
		-14.836578, -14.777985,
	-14.710464, -14.634247, -14.548874, -14.455032, -14.352264, -14.241028,
		-14.121094, -13.992691,
	-13.855820, -13.710709, -13.557358, -13.395767, -13.225937, -13.048325,
		-12.862930, -12.669525,
	-12.468796, -12.260284, -12.044678, -11.821518, -11.591492, -11.354370,
		-11.110382, -10.859528,
	-10.602493, -10.338821, -10.068970, -9.793167, -9.511414, -9.223709,
		-8.930740, -8.632278,
	-8.328552, -8.020020, -7.706451, -7.388306, -7.065811, -6.738968,
		-6.408005, -6.073151,
	-5.734863, -5.392914, -5.047760, -4.699631, -4.348755, -3.995132,
		-3.638992, -3.280792,
	-2.920532, -2.558670, -2.195206, -1.830368, -1.464386, -1.097717,
		-0.730133, -0.362320,
	0.005722, 0.373764, 0.741577, 1.109161, 1.475830, 1.841812, 2.206421,
		2.569885,
	2.931976, 3.292007, 3.650208, 4.006119, 4.359741, 4.710617, 5.058746,
		5.403671,
	5.745392, 6.083679, 6.418304, 6.749268, 7.075882, 7.398376, 7.716293,
		8.029633,
	8.338165, 8.641663, 8.939896, 9.232864, 9.520340, 9.801865, 10.077438,
		10.347061,
	10.610504, 10.867538, 11.117935, 11.361694, 11.598587, 11.828613,
		12.051315, 12.266922,
	12.475204, 12.675705, 12.868881, 13.054047, 13.231430, 13.400803,
		13.562164, 13.715286,
	13.860168, 13.996811, 14.124985, 14.244690, 14.355698, 14.458008,
		14.551849, 14.636765,
	14.712753, 14.780045, 14.838409, 14.887848, 14.928131, 14.959717,
		14.982147, 14.995422
};

float orbitTableY[256] = {
	0.005722, 0.373764, 0.741577, 1.109161, 1.475830, 1.841812, 2.206421,
		2.569885,
	2.931976, 3.292007, 3.650208, 4.006119, 4.359741, 4.710617, 5.058746,
		5.403671,
	5.745392, 6.083679, 6.418304, 6.749268, 7.075882, 7.398376, 7.716293,
		8.029633,
	8.338165, 8.641663, 8.939896, 9.232864, 9.520340, 9.801865, 10.077438,
		10.347061,
	10.610504, 10.867538, 11.117935, 11.361694, 11.598587, 11.828613,
		12.051315, 12.266922,
	12.475204, 12.675705, 12.868881, 13.054047, 13.231430, 13.400803,
		13.562164, 13.715286,
	13.860168, 13.996811, 14.124985, 14.244690, 14.355698, 14.458008,
		14.551849, 14.636765,
	14.712753, 14.780045, 14.838409, 14.887848, 14.928131, 14.959717,
		14.982147, 14.995422,
	14.999771, 14.995193, 14.981461, 14.958801, 14.926987, 14.886475,
		14.836578, 14.777985,
	14.710464, 14.634247, 14.548874, 14.455032, 14.352264, 14.241028,
		14.121094, 13.992691,
	13.855820, 13.710709, 13.557358, 13.395767, 13.225937, 13.048325,
		12.862930, 12.669525,
	12.468796, 12.260284, 12.044678, 11.821518, 11.591492, 11.354370,
		11.110382, 10.859528,
	10.602493, 10.338821, 10.068970, 9.793167, 9.511414, 9.223938, 8.930740,
		8.632278,
	8.328552, 8.020020, 7.706451, 7.388306, 7.065811, 6.738968, 6.408005,
		6.073151,
	5.734863, 5.392914, 5.047760, 4.699631, 4.348755, 3.995132, 3.638992,
		3.280792,
	2.920532, 2.558670, 2.195206, 1.830368, 1.464386, 1.097717, 0.730133,
		0.362320,
	-0.005722, -0.373764, -0.741577, -1.109161, -1.475830, -1.841812,
		-2.206421, -2.569885,
	-2.931976, -3.292007, -3.650208, -4.006119, -4.359741, -4.710617,
		-5.058746, -5.403671,
	-5.745392, -6.083679, -6.418304, -6.749268, -7.075882, -7.398376,
		-7.716293, -8.029633,
	-8.338165, -8.641663, -8.939896, -9.232864, -9.520340, -9.801865,
		-10.077438, -10.347061,
	-10.610504, -10.867538, -11.117935, -11.361694, -11.598587, -11.828613,
		-12.051315, -12.266922,
	-12.475204, -12.675705, -12.868881, -13.054047, -13.231430, -13.400803,
		-13.562164, -13.715286,
	-13.860168, -13.996811, -14.124985, -14.244690, -14.355698, -14.458008,
		-14.551849, -14.636765,
	-14.712753, -14.780045, -14.838409, -14.887848, -14.928131, -14.959717,
		-14.982147, -14.995422,
	-14.999771, -14.995193, -14.981461, -14.958801, -14.926987, -14.886475,
		-14.836578, -14.777985,
	-14.710464, -14.634247, -14.548874, -14.455032, -14.352264, -14.241028,
		-14.121094, -13.992691,
	-13.855820, -13.710709, -13.557358, -13.395767, -13.225937, -13.048325,
		-12.862930, -12.669525,
	-12.468796, -12.260284, -12.044678, -11.821518, -11.591492, -11.354370,
		-11.110382, -10.859528,
	-10.602493, -10.338821, -10.068970, -9.793167, -9.511414, -9.223709,
		-8.930740, -8.632278,
	-8.328552, -8.020020, -7.706451, -7.388306, -7.065811, -6.738968,
		-6.408005, -6.073151,
	-5.734863, -5.392914, -5.047760, -4.699631, -4.348755, -3.995132,
		-3.638992, -3.280792,
	-2.920532, -2.558670, -2.195206, -1.830368, -1.464386, -1.097717,
		-0.730133, -0.362320
};

//==========================================================================
//
//  Actor::A_BridgeOrbit
//
//==========================================================================

void Actor::A_BridgeOrbit(void)
{
	if (Owner._Special1)
	{
		SetState(S_NULL);
	}
	Args[0] += 3;
	Origin.x = Owner.Origin.x + orbitTableX[Args[0] & 255];
	Origin.y = Owner.Origin.y + orbitTableY[Args[0] & 255];
	Origin.z = Owner.Origin.z;
}

//==========================================================================
//
//  Actor::A_BridgeInit
//
//==========================================================================

void Actor::A_BridgeInit(void)
{
	int startangle;
	Actor ball1;
	Actor ball2;
	Actor ball3;

	startangle = P_Random();
	_Special1 = 0;

	// Spawn triad into world
	ball1 = SpawnActor(Origin, BridgeBall);
	ball1.Args[0] = startangle;
	ball1.Owner = self;

	ball2 = SpawnActor(Origin, BridgeBall);
	ball2.Args[0] = (startangle + 85) & 255;
	ball2.Owner = self;

	ball3 = SpawnActor(Origin, BridgeBall);
	ball3.Args[0] = (startangle + 170) & 255;
	ball3.Owner = self;

	ball1.A_BridgeOrbit();
	ball2.A_BridgeOrbit();
	ball3.A_BridgeOrbit();
}

//==========================================================================
//
//  Actor::A_BridgeRemove
//
//==========================================================================

void Actor::A_BridgeRemove(void)
{
	_Special1 = true;	// Removing the bridge
	bSolid = false;
	SetState(S_FREE_BRIDGE1);
}

//**************************************************************************
//
//  $Log$
//  Revision 1.16  2002/03/02 18:00:15  dj_jl
//  Some smaller changes, beautification.
//
//  Revision 1.15  2002/02/22 18:00:20  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.14  2002/02/14 19:20:58  dj_jl
//  Renamed Entity properties to new naming style
//
//  Revision 1.13  2002/02/06 17:28:52  dj_jl
//  Replaced Actor flags with boolean variables.
//
//  Revision 1.12  2002/01/25 18:04:35  dj_jl
//  Many global functions made Actor functions
//
//  Revision 1.11  2002/01/24 18:19:26  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//  Revision 1.10  2002/01/17 18:15:54  dj_jl
//  Renamed all map object classes
//
//  Revision 1.9  2002/01/15 18:27:00  dj_jl
//  Some property names with logical words starting with capital letter.
//  Moved everything from Entity class into Actor class.
//
//  Revision 1.8  2002/01/12 18:02:48  dj_jl
//  Replaced some C style casts with dynamic casts
//
//  Revision 1.7  2002/01/07 12:25:57  dj_jl
//  Changed copyright year
//
//  Revision 1.6  2001/12/28 16:28:11  dj_jl
//  Fixed bridge
//
//  Revision 1.5  2001/12/12 18:57:42  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
