//**************************************************************************
//**
//**	##   ##    ##    ##   ##   ####     ####   ###     ###
//**	##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**	 ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**	 ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**	  ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**	   #    ##    ##    #      ####     ####   ##       ##
//**
//**	$Id$
//**
//**	Copyright (C) 1999-2001 JÆnis Legzdi·ý
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**	$Log$
//**	Revision 1.2  2001/07/27 14:27:52  dj_jl
//**	Update with Id-s and Log-s, some fixes
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//============================================================================
//
//	A_EttinAttack
//
//============================================================================

void A_EttinAttack(mobj_t* actor)
{
	if (CheckMeleeRange(actor))
	{
		DamageMobj(actor->target, actor, actor, HITDICE(2));
	}
}

//============================================================================
//
//	A_DropMace
//
//============================================================================

void A_DropMace(mobj_t* actor)
{
	mobj_t*	mo;

	mo = P_SpawnMobj(actor->origin.x, actor->origin.y,
		actor->origin.z + actor->height / 2.0, MT_ETTIN_MACE);
	if (mo)
	{
		mo->velocity.x = (Random() - 0.5) * 8.0 * 35.0;
		mo->velocity.y = (Random() - 0.5) * 8.0 * 35.0;
		mo->velocity.z = (10.0 + Random() * 4.0) * 35.0;
		mo->target = actor;
	}
}

