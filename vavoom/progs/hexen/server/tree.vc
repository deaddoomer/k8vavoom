//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//============================================================================
//
//  Actor::A_LeafSpawn
//
//============================================================================

void Actor::A_LeafSpawn(void)
{
	mobj_t *mo;
	int i;

	for (i = (P_Random() & 3) + 1; i; i--)
	{
		mo = P_SpawnMobj(Origin.x + (Random() - Random()) * 64.0,
			Origin.y + (Random() - Random()) * 64.0,
			Origin.z + Random() * 64.0,
			P_Random() & 1 ? Leaf2 : Leaf1);
		if (mo)
		{
			mo->Thrust(Angles.yaw, Random() * 2.0 + 3.0);
			mo->Owner = self;
			mo->Special1 = 0;
		}
	}
}

//============================================================================
//
//  Actor::A_LeafThrust
//
//============================================================================

void Actor::A_LeafThrust(void)
{
	if (P_Random() > 96)
	{
		return;
	}
	Velocity.z += (Random() * 2.0 + 1.0) * 35.0;
}

//============================================================================
//
//  Actor::A_LeafCheck
//
//============================================================================

void Actor::A_LeafCheck(void)
{
	Special1++;
	if (Special1 >= 20)
	{
		SetState(S_NULL);
		return;
	}
	if (P_Random() > 64)
	{
		if (!Velocity.x && !Velocity.y)
		{
			Thrust(Owner.Angles.yaw, Random() * 2.0 + 1.0);
		}
		return;
	}
	SetState(S_LEAF1_8);
	Velocity.z = (Random() * 2.0 + 1.0) * 35.0;
	Thrust(Owner.Angles.yaw, Random() * 2.0 + 2.0);
	bMissile = true;
}

//===========================================================================
//
//  Actor::A_TreeDeath
//
//===========================================================================

void Actor::A_TreeDeath(void)
{
	if (!bFireDamage)
	{
		Height *= 4.0;
		bShootable = true;
		bDropOff = false;
		bCorpse = false;
		Health = 35;
		return;
	}
	else
	{
		SetState(MeleeState);
	}
}

//**************************************************************************
//
//  $Log$
//  Revision 1.14  2002/02/26 17:49:49  dj_jl
//  no message
//
//  Revision 1.13  2002/02/22 18:00:24  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.12  2002/02/14 19:20:59  dj_jl
//  Renamed Entity properties to new naming style
//
//  Revision 1.11  2002/02/06 17:28:53  dj_jl
//  Replaced Actor flags with boolean variables.
//
//  Revision 1.10  2002/01/24 18:19:27  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//  Revision 1.9  2002/01/17 18:15:55  dj_jl
//  Renamed all map object classes
//
//  Revision 1.8  2002/01/15 18:27:00  dj_jl
//  Some property names with logical words starting with capital letter.
//  Moved everything from Entity class into Actor class.
//
//  Revision 1.7  2002/01/07 12:25:58  dj_jl
//  Changed copyright year
//
//  Revision 1.6  2001/12/12 18:57:42  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.5  2001/10/22 17:23:13  dj_jl
//  Floatification of angles
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.2  2001/07/27 14:27:53  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
