//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

class FloorScroll:Thinker
{
	sector_t *sector;
	float xspeed;
	float yspeed;

//==========================================================================
//
//	Think
//
//==========================================================================

void Think(void)
{
	sector->floor.xoffs += xspeed * frametime;
	sector->floor.yoffs += yspeed * frametime;
}

//==========================================================================
//
//  Archive
//
//==========================================================================

void Archive(void)
{
	sector = SectorToNum(sector);
}

//==========================================================================
//
//  Unarchive
//
//==========================================================================

void Unarchive(void)
{
	//  Restore sector pointer
	sector = NumToSector(sector);
}

}

//==========================================================================
//
//  SpawnScrollingFloor
//
//==========================================================================

void SpawnScrollingFloor(sector_t * sector, int xdir, int ydir, int speed)
{
	FloorScroll Scroll;

	Scroll = NewSpecialThinker(FloorScroll);
	Scroll.sector = sector;
	Scroll.xspeed = itof(xdir) * itof(1 << speed) * 16.0;
	Scroll.yspeed = itof(ydir) * itof(1 << speed) * 16.0;
}

class WallScroll:Thinker
{
	int index;
	float xspeed;
	float yspeed;

//==========================================================================
//
//	Think
//
//==========================================================================

void Think(void)
{
	level->sides[index].textureoffset += xspeed * frametime;
	level->sides[index].rowoffset += yspeed * frametime;
}

}

//==========================================================================
//
//  SpawnWallScroller
//
//==========================================================================

void SpawnWallScroller(line_t * line, int xdir, int ydir)
{
	WallScroll Scroll;

	Scroll = NewSpecialThinker(WallScroll);
	Scroll.index = line->sidenum[0];
	Scroll.xspeed = itof(xdir * line->arg1) / 2.0;
	Scroll.yspeed = itof(ydir * line->arg1) / 2.0;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.6  2002/01/15 08:12:26  dj_jl
//  Replaced some pointers with references
//
//  Revision 1.5  2002/01/07 12:25:58  dj_jl
//  Changed copyright year
//
//  Revision 1.4  2001/09/24 17:18:15  dj_jl
//  Created thinker classes
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
