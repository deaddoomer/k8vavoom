//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//===========================================================================
// Bat Spawner Variables
//  special1    frequency counter
//  Special2    
//  args[0]     frequency of spawn (1=fastest, 10=slowest)
//  args[1]     spread angle (0..255)
//  args[2]     
//  args[3]     duration of bats (in octics)
//  args[4]     turn amount per move (in degrees)
//
// Bat Variables
//  Special2    lifetime counter
//  args[4]     turn amount per move (in degrees)
//===========================================================================

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//===========================================================================
//
//  Actor::A_BatSpawnInit
//
//===========================================================================

void Actor::A_BatSpawnInit(void)
{
	_Special1 = 0;	// Frequency count
}

//===========================================================================
//
//  Actor::A_BatSpawn
//
//===========================================================================

void Actor::A_BatSpawn(void)
{
	Actor mo;
	float delta;
	float angle;

	// Countdown until next spawn
	if (_Special1-- > 0)
		return;
	_Special1 = Args[0];	// Reset frequency count

	delta = itof(Args[1]);
	if (delta == 0.0)
		delta = 1.0;
	angle = AngleMod360(Angles.yaw +
		delta * (Random() - 0.5) * 360.0 / 256.0);
	mo = SpawnMissileAngle(Bat, angle, 0.0);
	if (mo)
	{
		mo.Args[0] = P_Random() & 63;	// floatbob index
		mo.Args[4] = Args[4];	// turn degrees
		mo._Special2 = Args[3] << 3;	// Set lifetime
		mo.Instigator = self;
	}
}

//===========================================================================
//
//  Actor::A_BatMove
//
//===========================================================================

void Actor::A_BatMove(void)
{
	float newangle;
	float newSpeed;

	if (_Special2 < 0)
	{
		SetState(DeathState);
	}
	_Special2 -= 2;	// Called every 2 tics

	if (P_Random() < 128)
	{
		newangle = AngleMod360(Angles.yaw + itof(Args[4]));
	}
	else
	{
		newangle = AngleMod360(Angles.yaw - itof(Args[4]));
	}

	// Adjust momentum vector to new direction
	newSpeed = Speed * Random() * 4.0;
	Velocity.x = newSpeed * cos(newangle);
	Velocity.y = newSpeed * sin(newangle);

	if (P_Random() < 15)
		PlaySound('BatScream', CHAN_VOICE);

	// Handle Z movement
	Origin.z = Instigator.Origin.z + 2.0 * FloatBobOffsets[Args[0]];
	Args[0] = (Args[0] + 3) & 63;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.17  2002/03/28 18:32:51  dj_jl
//  Little renaming, some bug fixes.
//
//  Revision 1.16  2002/03/02 18:00:15  dj_jl
//  Some smaller changes, beautification.
//
//  Revision 1.15  2002/02/26 17:49:48  dj_jl
//  no message
//
//  Revision 1.14  2002/02/22 18:00:20  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.13  2002/02/14 19:20:58  dj_jl
//  Renamed Entity properties to new naming style
//
//  Revision 1.12  2002/01/28 18:50:18  dj_jl
//  Made some functions Actor members.
//  Replaced some pointers with references.
//
//  Revision 1.11  2002/01/24 18:19:26  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//  Revision 1.10  2002/01/17 18:15:54  dj_jl
//  Renamed all map object classes
//
//  Revision 1.9  2002/01/15 18:27:00  dj_jl
//  Some property names with logical words starting with capital letter.
//  Moved everything from Entity class into Actor class.
//
//  Revision 1.8  2002/01/11 18:19:41  dj_jl
//  Started to use names in progs
//
//  Revision 1.7  2002/01/07 12:25:57  dj_jl
//  Changed copyright year
//
//  Revision 1.6  2001/12/12 18:57:42  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.5  2001/10/22 17:23:12  dj_jl
//  Floatification of angles
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/08/30 17:33:17  dj_jl
//  Added sound channels
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
