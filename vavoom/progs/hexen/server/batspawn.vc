//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//===========================================================================
// Bat Spawner Variables
//  special1    frequency counter
//  special2    
//  args[0]     frequency of spawn (1=fastest, 10=slowest)
//  args[1]     spread angle (0..255)
//  args[2]     
//  args[3]     duration of bats (in octics)
//  args[4]     turn amount per move (in degrees)
//
// Bat Variables
//  special2    lifetime counter
//  args[4]     turn amount per move (in degrees)
//===========================================================================

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//===========================================================================
//
//  Actor::A_BatSpawnInit
//
//===========================================================================

void Actor::A_BatSpawnInit(void)
{
	special1 = 0;	// Frequency count
}

//===========================================================================
//
//  Actor::A_BatSpawn
//
//===========================================================================

void Actor::A_BatSpawn(void)
{
	mobj_t *mo;
	float delta;
	float angle;

	// Countdown until next spawn
	if (special1-- > 0)
		return;
	special1 = args[0];	// Reset frequency count

	delta = itof(args[1]);
	if (delta == 0.0)
		delta = 1.0;
	angle = AngleMod360(angles.yaw +
		delta * (Random() - 0.5) * 360.0 / 256.0);
	mo = SpawnMissileAngle(this, Bat, angle, 0.0);
	if (mo)
	{
		mo->args[0] = P_Random() & 63;	// floatbob index
		mo->args[4] = args[4];	// turn degrees
		mo->special2 = args[3] << 3;	// Set lifetime
		mo->target = this;
	}
}

//===========================================================================
//
//  Actor::A_BatMove
//
//===========================================================================

void Actor::A_BatMove(void)
{
	float newangle;
	float newSpeed;

	if (special2 < 0)
	{
		SetMobjState(this, DeathState);
	}
	special2 -= 2;	// Called every 2 tics

	if (P_Random() < 128)
	{
		newangle = AngleMod360(angles.yaw + itof(args[4]));
	}
	else
	{
		newangle = AngleMod360(angles.yaw - itof(args[4]));
	}

	// Adjust momentum vector to new direction
	newSpeed = Speed * Random() * 4.0;
	velocity.x = newSpeed * cos(newangle);
	velocity.y = newSpeed * sin(newangle);

	if (P_Random() < 15)
		StartSoundName(this, 'BatScream', CHAN_VOICE);

	// Handle Z movement
	origin.z = target->origin.z + 2.0 * FloatBobOffsets[args[0]];
	args[0] = (args[0] + 3) & 63;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.10  2002/01/17 18:15:54  dj_jl
//  Renamed all map object classes
//
//  Revision 1.9  2002/01/15 18:27:00  dj_jl
//  Some property names with logical words starting with capital letter.
//  Moved everything from Entity class into Actor class.
//
//  Revision 1.8  2002/01/11 18:19:41  dj_jl
//  Started to use names in progs
//
//  Revision 1.7  2002/01/07 12:25:57  dj_jl
//  Changed copyright year
//
//  Revision 1.6  2001/12/12 18:57:42  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.5  2001/10/22 17:23:12  dj_jl
//  Floatification of angles
//
//  Revision 1.4  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.3  2001/08/30 17:33:17  dj_jl
//  Added sound channels
//  
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
