//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Entity:MapObject
	native
	abstract
{
	name SpriteName;
	float StateTime;	// state tic counter
	int StateNum;
	int NextState;
	bool bFixedModel;

	bool bNoGravity;	// don't apply gravity every tic
	bool bNoPassMobj;	// Disable z block checking.  If on,
						// this flag will prevent the mobj
						// from passing over/under other mobjs.
	bool bColideWithThings;
	bool bColideWithWorld;
	bool bCheckLineBlocking;
	bool bCheckLineBlockMonsters;

	//  Params
	float Mass;

	//  Water
	int WaterLevel;
	int WaterType;

native boolean SetState(int state);

native void PlaySound(name SoundName, int Channel);
native void PlayFullVolumeSound(name SoundName, int Channel);

native boolean CheckPosition(TVec Pos);
native boolean CheckRelPosition(TVec Pos);

native boolean CheckWater(void);

//==========================================================================
//
//	Remove
//
//==========================================================================

void Remove(void)
{
	RemoveMobjThinker(self);
}

//==========================================================================
//
//	Touch
//
//==========================================================================

boolean Touch(MapObject Other)
{
	return !Other.bSolid;
}

//==========================================================================
//
//	BlockedByLine
//
//==========================================================================

void BlockedByLine(line_t * ld)
{
}

//==========================================================================
//
//	ApplyFriction
//
//==========================================================================

void ApplyFriction(void)
{
}

#define GRAVITY			1225.0

native void UpdateVelocity(void);

native Entity CheckOnmobj(void);

//==========================================================================
//
//
//
//==========================================================================

defaultproperties
{
	bColideWithThings = true;
	bColideWithWorld = true;
}

}

struct tmtrace_t
{
	Entity Thing;
	TVec End;
	float BBox[4];
	float FloorZ;
	float CeilingZ;
	float DropOffZ;
	sec_plane_t *Floor;
	sec_plane_t *Ceiling;

	// keep track of the line that lowers the ceiling,
	// so missiles don't explode against sky hack walls
	line_t *CeilingLine;

	// keep track of special lines as they are hit,
	// but don't process them until the move is proven valid
	#define MAXSPECIALCROSS	32
	line_t *SpecHit[MAXSPECIALCROSS];
	int NumSpecHit;

	MapObject BlockingMobj;
};

tmtrace_t *tmtrace;

//**************************************************************************
//
//  $Log$
//  Revision 1.12  2002/03/28 18:20:11  dj_jl
//  Got rid of SetStateNF.
//
//  Revision 1.11  2002/03/16 17:51:16  dj_jl
//  Added function Remove to the Entity class.
//
//  Revision 1.10  2002/03/12 19:20:24  dj_jl
//  Added native and abstract class modifiers
//
//  Revision 1.9  2002/03/09 17:57:00  dj_jl
//  Got rid of function pointers, made most of the physics functions native.
//
//  Revision 1.8  2002/03/04 18:31:35  dj_jl
//  Replaced bNoClip with two seperate flags, beautification.
//
//  Revision 1.7  2002/03/02 17:39:06  dj_jl
//  Beautification
//
//  Revision 1.6  2002/02/22 18:00:05  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.5  2002/02/16 16:27:44  dj_jl
//  Added bool variables
//
//  Revision 1.4  2002/02/14 19:20:53  dj_jl
//  Renamed Entity properties to new naming style
//
//  Revision 1.3  2002/02/09 18:13:46  dj_jl
//  Added flags that determines what line blocking flags to check
//
//  Revision 1.2  2002/02/07 18:50:05  dj_jl
//  Made CheckPosition shared.
//
//  Revision 1.1  2002/01/24 18:19:25  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//**************************************************************************
