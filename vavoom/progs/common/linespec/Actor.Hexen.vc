//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//==========================================================================
//
//  A_SmBounce
//
//==========================================================================

final void A_SmBounce()
{
	// give some more momentum (x,y,&z)
	Origin.z = FloorZ + 1.0;
	Velocity.z = (2.0 + Random() * 4.0) * 35.0;
	Velocity.x = Random() * 3.0 * 35.0;
	Velocity.y = Random() * 3.0 * 35.0;
}

//==========================================================================
//
//  A_IceGuyMissileExplode
//
//==========================================================================

final void A_IceGuyMissileExplode()
{
	EntityEx mo;
	int i;

	for (i = 0; i < 8; i++)
	{
		mo = SpawnMissileAngle(IceGuyFX2, itof(i) * 45.0, -0.3 * 35.0, 3.0);
		if (mo)
		{
			mo.Target = Target;
		}
	}
}

//==========================================================================
//
//	A_SerpentHeadCheck
//
//==========================================================================

final void A_SerpentHeadCheck()
{
	if (Origin.z <= FloorZ)
	{
		if (GetFloorType()->bLiquid)
		{
			HitFloorType();
			SetState(none);
		}
		else
		{
			SetState(FindState('Death'));
		}
	}
}

//==========================================================================
//
//	A_FloatGib
//
//==========================================================================

final void A_FloatGib()
{
	FloorClip -= 1.0;
}

//==========================================================================
//
//	A_SinkGib
//
//==========================================================================

final void A_SinkGib()
{
	FloorClip += 1.0;
}

//==========================================================================
//
//	A_DelayGib
//
//==========================================================================

final void A_DelayGib()
{
	StateTime -= Random() * 2.0;
}
