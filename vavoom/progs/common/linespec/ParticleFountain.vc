//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id: ParticleFountain.vc 1583 2006-06-27 19:05:42Z dj_jl $
//**
//**    Copyright (C) 1999-2006 Janis Legzdinš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**	Based on code from ZDoom with following notice:
//**
//** Copyright 1998-2006 Randy Heit
//** All rights reserved.
//**
//** Redistribution and use in source and binary forms, with or without
//** modification, are permitted provided that the following conditions
//** are met:
//**
//** 1. Redistributions of source code must retain the above copyright
//**    notice, this list of conditions and the following disclaimer.
//** 2. Redistributions in binary form must reproduce the above copyright
//**    notice, this list of conditions and the following disclaimer in the
//**    documentation and/or other materials provided with the distribution.
//** 3. The name of the author may not be used to endorse or promote products
//**    derived from this software without specific prior written permission.
//**
//** THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
//** IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//** OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//** IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
//** INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//** THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//**
//**************************************************************************

class ParticleFountain : ScriptedEntity;

int	EffectColour;
int EffectColour2;
bool bFountain;

//==========================================================================
//
//	Activate
//
//==========================================================================

bool Activate()
{
	bFountain = true;
}

//==========================================================================
//
//	Deactivate
//
//==========================================================================

bool Deactivate()
{
	bFountain = false;
}

//==========================================================================
//
//	BeginPlay
//
//==========================================================================

void BeginPlay()
{
	if(!bDormant)
		bFountain = true;
}

//==========================================================================
//
//	ClientTick
//
//==========================================================================

void ClientTick(float deltaTime)
{
	if(bFountain)
	{
		particle_t *p = Level.NewParticle();

		if (p)
		{
			float an = itof(P_Random()) * 24.0 / 2.0;
			float val;
			int i;

			p->org.x = Origin.x + (Radius * Random() * 8.0 / 2.0) * cos(an);
			p->org.y = Origin.y + (Radius * Random() * 8.0 / 2.0) * sin(an);
			p->org.z = Origin.z + Height + 1.0;

			if (P_Random() < 30)
			{
				p->colour = EffectColour2;
			}
			else
			{
				p->colour = EffectColour;
			}

			// Set initial velocities
			for (i = 3; i; i--, val + 1.0)
				val = (1.0 / 4096.0) * (itof(P_Random()) - 128.0);

			p->vel.x = val;

			// Set initial accelerations
			for (i = 3; i; i--, val + 1.0)
				val = (1.0 / 16384.0) * (itof(P_Random()) - 128.0);

			p->accel = vector(val, val, val);

			p->die = Level.XLevel.Time + 1.0 * Random();
			// FIXME Add translucency for particles here
			//p->trans = 1.0 / 255.0;
			p->type = LineSpecialLevelInfo::pt_fountain;
		}
	}
}

defaultproperties
{
	Radius = 2.5;
	Height = 0.0;
	bNoBlockmap = true;
	bHidden = true;
	bNoGravity = true;
}