//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Weapon : Inventory
	abstract;

const float LOWERSPEED		= 6.0;
const float RAISESPEED		= 6.0;

const float WEAPONBOTTOM	= 128.0;
const float WEAPONTOP		= 32.0;

//	Type of ammo weapon needs to operate.
class<Ammo>		AmmoType1;
class<Ammo>		AmmoType2;
//	How much ammo to give when picked up.
int				AmmoGive1;
int				AmmoGive2;
//	How much ammo used in each shot.
int				AmmoUse1;
int				AmmoUse2;

state			UpState;
state			DownState;
state			ReadyState;
state			AttackState;
state			HoldAttackState;
state			FlashState;

//	Weapon slot this weapon is placed in.
int				Slot;
//	Weapons with lower values have greater priority
int				SelectionOrder;

//	Switch away if got ammo for more powerfull weapon.
bool			bWimpyWeapon;

bool CheckAmmo(bool AutoSwitch, optional bool RequireAmmo)
{
	return false;
}

defaultproperties
{
}
