//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**	A decoration that can be activated and deactivated.
//**
//**************************************************************************

class SwitchableDecoration : ScriptedEntity
	abstract;

//==========================================================================
//
//	Activate
//
//==========================================================================

bool Activate()
{
	SetState(FindState('Active'));
	bDynamicLight = true;
	DLightRadius = Args[0] ? itof(Args[0]) * 8.0 : LightRadius;
	DLightColour = LightColour;

	return true;
}

//==========================================================================
//
//	Deactivate
//
//==========================================================================

bool Deactivate()
{
	SetState(FindState('Inactive'));
	bDynamicLight = false;

	return true;
}

defaultproperties
{
	bPassMobj = true;
}
