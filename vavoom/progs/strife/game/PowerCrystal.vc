//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
// 201

class PowerCrystal : Actor
	__mobjinfo__(92);

//==========================================================================
//
//	A_Unknown112
//
//==========================================================================

final void A_Unknown112()
{
	int i;

	RadiusAttack(Target, 512, 512.0, true);
	if (Target && Target.bIsPlayer)
	{
		Target.Player.ExtraLight = 5;
	}
	
	RenderStyle = STYLE_Add;
}

//==========================================================================
//
//	A_LightGoesOut
//
//==========================================================================

final void A_LightGoesOut()
{
	int i;
	EntityEx foo;

	Sector->params.lightlevel = 0;
	Sector->floor.dist = Level.FindLowestFloorSurrounding(Sector, NULL);
	for (i = 0; i < 8; i++)
	{
		foo = Spawn(Rubble1, Origin);
		if (foo)
		{
			foo.Velocity.x = (Random() * 16.0 - Random() * 8.0) * 35.0;
			foo.Velocity.y = (Random() - Random()) * 8.0 * 35.0;
			foo.Velocity.z = (7.0 + Random() * 4.0) * 35.0;
		}
	}
}

//==========================================================================
//
//	A_Unknown114
//
//==========================================================================

final void A_Unknown114()
{
	if (Target && Target.bIsPlayer)
	{
		Target.Player.ExtraLight = 0;
	}
}

states
{
Spawn:
	CRYS A 16 A_ActiveSound
	CRYS B 5 A_ActiveSound
	CRYS CDEF 4 A_ActiveSound
	Loop
Death:
	BOOM A 1 Bright A_Unknown112
	BOOM B 3 Bright A_GiveQuestItem
	BOOM C 2 Bright A_LightGoesOut
	BOOM D 3 Bright A_Bang4Cloud
	BOOM EF 3 Bright
	BOOM G 3 Bright A_Bang4Cloud
	BOOM H 1 Bright A_Unknown112
	BOOM I 3 Bright
	BOOM JKL 3 Bright A_Bang4Cloud
	BOOM MN 3 Bright
	BOOM O 3 Bright A_Bang4Cloud
	BOOM PQRST 3 Bright
	BOOM U 3 Bright A_Unknown114
	BOOM VWXY 3 Bright
	Stop
}

defaultproperties
{
	Health = 50;
	Mass = 99999999.0;
	Speed = 14.0 * 35.0;	//	Quest type
	bSolid = true;
	bShootable = true;
	bNoGravity = true;
	bNoBlood = true;
	bFloorClip = true;
	ActiveSound = 'misc/reactor';
	DeathSound = 'misc/explosion';
}
