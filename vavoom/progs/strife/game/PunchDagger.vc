//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class PunchDagger : StrifeWeapon;

const float PUNCHRANGE		= 80.0;

//==========================================================================
//
//	A_Punch
//
//==========================================================================

final void A_Punch()
{
	int			power;
	int			damage;
	TAVec		angles;
	TVec		dir;
	EntityEx	AimTarget;

	power = Player(Owner.Player).Stamina / 10;
	damage = (P_Random() % (power + 8)) * (power + 2);

	angles = Owner.Angles;
	angles.yaw = AngleMod360(angles.yaw +
		(Random() - Random()) * 45.0 / 8.0);
	AimTarget = Actor(Owner).AimLineAttack(dir, angles, PUNCHRANGE);
	Actor(Owner).LineAttack(dir, PUNCHRANGE, damage, StrifeSpark);

	// turn to face target
	if (AimTarget)
	{
		if (AimTarget.bNoBlood)
		{
			Owner.PlaySound('misc/metalhit', CHAN_WEAPON);
		}
		else
		{
			Owner.PlaySound('misc/meathit', CHAN_WEAPON);
		}
		Owner.Angles.yaw = atan2(AimTarget.Origin.y - Owner.Origin.y,
			AimTarget.Origin.x - Owner.Origin.x);
		Owner.Player.bFixAngle = true;
		Actor(Owner).bJustAttacked = true;
		// Sys1eae0 (actor->player, linetarget);
	}
	else
	{
		Owner.PlaySound('misc/swish', CHAN_WEAPON);
	}
}

states
{
Ready:
	PNCH A 1 A_WeaponReady
	Loop
Deselect:
	PNCH A 1 A_Lower
	Loop
Select:
	PNCH A 1 A_Raise
	Loop
Fire:
	PNCH B 4
	PNCH C 4 A_Punch
	PNCH D 5
	PNCH C 4
	PNCH B 5 A_ReFire
	Goto Ready
}

defaultproperties
{
	Slot = 1;
	SelectionOrder = 3900;
	bNoAlert = true;
}
