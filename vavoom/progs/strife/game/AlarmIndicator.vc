//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class AlarmIndicator : Decoration
	__mobjinfo__(24);

//==========================================================================
//
//	A_AlarmActive
//
//==========================================================================

void A_AlarmActive()
{
	ReactionCount--;
	if (ReactionCount <= 0)
	{
		Enemy = none;
		ReactionCount = 60;
		if(Enemy == none)
		{
			SetState(IdleState);
		}
	}
	if (ReactionCount == 2)
	{
		// Should make enemies go to Idle state again
		StrifeLevelInfo(Level).NoiseAlert(none, self);
	}
	else if (ReactionCount > 50)
	{
		PlaySound('misc/alarm', CHAN_VOICE);
	}
}

__states__
{
	S_KLAX('KLAX', 0, 5.0 / 35.0, S_KLAX) { A_CheckAlarm(); }
	S_KLAX_ACT1('KLAX', 1, 6.0 / 35.0, S_KLAX_ACT2) { A_AlarmActive(); }
	S_KLAX_ACT2('KLAX', 2, 60.0 / 35.0, S_KLAX_ACT1) { }
}

defaultproperties
{
	ReactionCount = 60;
	bNoBlockmap = true;
	bStanding = true;
	bSpawnCeiling = true;
	bNoGravity = true;
	IdleState = S_KLAX;
	SeeState = S_KLAX_ACT1;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.6  2006/03/29 14:37:08  firebrand_kh
//  Made the alarm call NoiseAlert when shutting up
//
//  Revision 1.5  2006/03/24 15:41:46  firebrand_kh
//  Made alarms shut down properly
//
//  Revision 1.4  2005/11/19 13:43:50  dj_jl
//  Renamed sounds.
//
//  Revision 1.3  2004/10/18 06:35:20  dj_jl
//  Implemented many monsters, sigil and some more.
//
//  Revision 1.2  2004/02/04 07:32:58  dj_jl
//  Implemented many action functions
//
//  Revision 1.1  2002/11/02 08:20:56  dj_jl
//  New style classes.
//
//**************************************************************************
