//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class SpectralLightningBigBall1 : Projectile;

//==========================================================================
//
//	A_Unknown91
//
//==========================================================================

final void A_Unknown91()
{
	float angle;
	Actor A;
	float dir;

	A_Tracer();

	dir = Angles.yaw;

	A = Spawn(SpectralLightningH3, Origin);
	A.Target = Target;
	if (AlienSpectre5(Target))
	{
		A.bSpectral = false;
	}
	A.Angles.yaw = AngleMod360(dir + 90.0);
	A.Tracer = Tracer;
	A.Velocity.x = A.Speed * cos(A.Angles.yaw);
	A.Velocity.y = A.Speed * sin(A.Angles.yaw);

	A = Spawn(SpectralLightningH3, Origin);
	A.Target = Target;
	if (AlienSpectre5(Target))
	{
		A.bSpectral = false;
	}
	A.Angles.yaw = AngleMod360(dir - 90.0);
	A.Tracer = Tracer;
	A.Velocity.x = A.Speed * cos(A.Angles.yaw);
	A.Velocity.y = A.Speed * sin(A.Angles.yaw);

	A = Spawn(SpectralLightningH3, Origin);
	A.Target = Target;
	if (AlienSpectre5(Target))
	{
		A.bSpectral = false;
	}
	A.Angles.yaw = dir;
	A.Tracer = Tracer;
	A.Velocity.x = A.Speed * cos(A.Angles.yaw);
	A.Velocity.y = A.Speed * sin(A.Angles.yaw);
}

__states__
{
	S_SIGIL_FX3_1('ZAP7', 0 | FF_FULLBRIGHT, 4.0 / 35.0, S_SIGIL_FX3_2) = A_Unknown91
	S_SIGIL_FX3_2('ZAP7', 1 | FF_FULLBRIGHT, 4.0 / 35.0, S_SIGIL_FX3_3) = A_Unknown91
	S_SIGIL_FX3_3('ZAP7', 2 | FF_FULLBRIGHT, 6.0 / 35.0, S_SIGIL_FX3_4) = A_Unknown91
	S_SIGIL_FX3_4('ZAP7', 3 | FF_FULLBRIGHT, 6.0 / 35.0, S_SIGIL_FX3_5) = A_Unknown91
	S_SIGIL_FX3_5('ZAP7', 4 | FF_FULLBRIGHT, 6.0 / 35.0, S_SIGIL_FX3_1) = A_Unknown91
}

defaultproperties
{
	Radius = 20.0;
	Height = 40.0;
	Speed = 630.0;
	MaxStepHeight = 4.0;
	MissileDamage = 130;
	bSpectral = true;
	IdleState = S_SIGIL_FX3_1;
	DeathState = S_ZAP1_2;
	SightSound = 'weapons/sigil';
	DeathSound = 'weapons/sigilhit';
	Effects = EF_DL_WHITE;
}
