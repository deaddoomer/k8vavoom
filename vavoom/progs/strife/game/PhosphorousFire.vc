//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class PhosphorousFire : Effect;

//==========================================================================
//
//	A_Burnination
//
//==========================================================================

final void A_Burnination()
{
	float xofs;
	float yofs;
	Actor drop;

	Velocity.z -= 8.0 * 35.0;
	Velocity.x += (Random() - Random()) * 4.0 * 35.0;
	Velocity.y += (Random() - Random()) * 4.0 * 35.0;
	PlaySound('world/largefire', CHAN_VOICE);

	//	Only the main fire spawns more.
	if (!bDropped)
	{
		xofs = (Random() - 0.5) * 40.0;
		yofs = (Random() - 0.5) * 40.0;

		if (xofs < 0.0)
		{
			xofs -= 12.0;
		}
		else
		{
			xofs += 12.0;
		}

		if (yofs < 0.0)
		{
			yofs -= 12.0;
		}
		else
		{
			yofs += 12.0;
		}

		drop = Spawn(PhosphorousFire, Origin + vector(xofs, yofs, 4.0));
		if (drop)
		{
			drop.Velocity.x = Velocity.x + (Random() - Random()) * 8.0 * 35.0;
			drop.Velocity.y = Velocity.y + (Random() - Random()) * 8.0 * 35.0;
			drop.Velocity.z = Velocity.z - 1.0 * 35.0;
			drop.ReactionCount = (P_Random() & 3) + 2;
			drop.bDropped = true;
			drop.Target = Target;
		}
	}
}

__states__
{
	S_GRENADE_FLAME_1('BNG3', 1 | FF_FULLBRIGHT, 2.0 / 35.0, S_GRENADE_FLAME_2) = A_Explode
	S_GRENADE_FLAME_2('BNG3', 2 | FF_FULLBRIGHT, 2.0 / 35.0, S_GRENADE_FLAME_3) = A_DecReactionCount
	S_GRENADE_FLAME_3('FLBE', 0 | FF_FULLBRIGHT, 2.0 / 35.0, S_GRENADE_FLAME_4) = A_Burnination
	S_GRENADE_FLAME_4('FLBE', 1 | FF_FULLBRIGHT, 2.0 / 35.0, S_GRENADE_FLAME_5) = A_DecReactionCount
	S_GRENADE_FLAME_5('FLBE', 2 | FF_FULLBRIGHT, 2.0 / 35.0, S_GRENADE_FLAME_6) = A_Explode
	S_GRENADE_FLAME_6('FLBE', 3 | FF_FULLBRIGHT, 3.0 / 35.0, S_GRENADE_FLAME_7) = A_DecReactionCount
	S_GRENADE_FLAME_7('FLBE', 4 | FF_FULLBRIGHT, 3.0 / 35.0, S_GRENADE_FLAME_8) = A_Explode
	S_GRENADE_FLAME_8('FLBE', 5 | FF_FULLBRIGHT, 3.0 / 35.0, S_GRENADE_FLAME_9) = A_DecReactionCount
	S_GRENADE_FLAME_9('FLBE', 6 | FF_FULLBRIGHT, 3.0 / 35.0, S_GRENADE_FLAME_6) = A_Burnination
	S_GRENADE_FLAME_X1('FLBE', 7 | FF_FULLBRIGHT, 2.0 / 35.0, S_GRENADE_FLAME_X2) = none
	S_GRENADE_FLAME_X2('FLBE', 8 | FF_FULLBRIGHT, 2.0 / 35.0, S_GRENADE_FLAME_X3) = A_Burnination
	S_GRENADE_FLAME_X3('FLBE', 9 | FF_FULLBRIGHT, 2.0 / 35.0, S_GRENADE_FLAME_X4) = none
	S_GRENADE_FLAME_X4('FLBE', 10 | FF_FULLBRIGHT, 2.0 / 35.0, none) = none
}

defaultproperties
{
	ReactionCount = 120;
	bNoGravity = false;
	DamageType = 'Fire';
	IdleState = S_GRENADE_FLAME_1;
	DeathState = S_GRENADE_FLAME_X1;
	ExplodeEffect = RGB(199, 91, 0);
}
