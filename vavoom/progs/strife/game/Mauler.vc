//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Mauler : StrifeWeapon
	__mobjinfo__(2004);

const float			MAULERRANGE		= (33.0 * 64.0);

//==========================================================================
//
//	A_FireBlaster1
//
//==========================================================================

final void A_FireBlaster1()
{
	int i;
	int damage;
	TAVec rot;
	TVec aimDir;
	TVec dir;

	if (!bIsPlayer)
	{
		return;
	}
	Weapon Wpn = PlayerEx(Player).ReadyWeapon;

	PlaySound('weapons/mauler1', CHAN_WEAPON);

	Wpn.DepleteAmmo();

	Aim(aimDir, 16.0 * 64.0);
	for (i = 0; i < 20; i++)
	{
		rot.pitch = (Random() - Random()) * 45.0 / 8.0;
		rot.yaw = (Random() - Random()) * 45.0 / 4.0;
		rot.roll = 0.0;
		dir = RotateDirectionVector(aimDir, rot);
		damage = 5 * (P_Random() % 3 + 1);
		LineAttack(dir, MAULERRANGE, damage, MaulerPuff,,,
			'Disintegrate');
	}
}

//==========================================================================
//
//	A_FireBlasterSound
//
//==========================================================================

final void A_FireBlasterSound()
{
	if (!bIsPlayer)
	{
		return;
	}
	Weapon Wpn = PlayerEx(Player).ReadyWeapon;

	PlaySound('weapons/mauler2charge', CHAN_WEAPON);
	Player.ViewStates[ps_weapon].SX += (Random() - Random()) * 4.0;
	Player.ViewStates[ps_weapon].SY += (Random() - Random()) * 4.0;
}

//==========================================================================
//
//	A_FireBlaster2
//
//==========================================================================

final void A_FireBlaster2()
{
	if (!bIsPlayer)
	{
		return;
	}
	Weapon Wpn = PlayerEx(Player).ReadyWeapon;

	SetState(MissileState);
	Wpn.DepleteAmmo();
	SpawnPlayerMissile(MaulerTorpedo);
	Damage(none, self, 20);
	Thrust(Angles.yaw + 180.0, 125.0 / 16.0);
}

states
{
Ready:
	MAUL FGHA 6 A_WeaponReady
	Loop
Deselect:
	MAUL A 1 A_Lower
	Loop
Select:
	MAUL A 1 A_Raise
	Loop
Fire:
	BLSF A 5 Bright A_FireBlaster1
	MAUL B 3 Bright A_Light1
	MAUL C 2 A_Light2
	MAUL DE 2
	MAUL A 7 A_Light0
	MAUL H 7
	MAUL G 7 A_CheckReload
	Goto Ready
Spawn:
	TRPD A -1
	Stop
}

defaultproperties
{
	SisterWeaponType = Mauler2;
	Slot = 7;
	SelectionOrder = 300;
	AmmoType1 = EnergyPod;
	AmmoUse1 = 20;
	AmmoGive1 = 40;
	ConversationID = 193;
	PickupMessage = "$txt_mauler";
}
