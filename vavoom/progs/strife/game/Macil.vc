//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Macil : Pawn
	__mobjinfo__(64);

//============================================================================
//
//	TakeSpecialDamage
//
//	Before you storm the castle, Macil is a god and unkillable. The effort
// required to take the castle apparently drops him to mere godlike status.
//
//============================================================================

int TakeSpecialDamage(Actor inflictor, Actor source, int damage)
{
	if ((Random() < PainChance))
	{
		SetState(PainState);
	}

	return -1;
}

__states__
{
	S_MACIL_STAND('LEDR', 2, 5.0 / 35.0, S_MACIL_STAND) { A_Stand(); }
	S_MACIL_STAND_R('LEDR', 0, 8.0 / 35.0, S_MACIL_STAND) { }
	S_MACIL_STAND_L('LEDR', 1, 8.0 / 35.0, S_MACIL_STAND) { }
	S_MACIL_WALK1('LEAD', 0, 6.0 / 35.0, S_MACIL_WALK2) { A_Walk(); }
	S_MACIL_WALK2('LEAD', 1, 6.0 / 35.0, S_MACIL_WALK3) { A_Walk(); }
	S_MACIL_WALK3('LEAD', 2, 6.0 / 35.0, S_MACIL_WALK4) { A_Walk(); }
	S_MACIL_WALK4('LEAD', 3, 6.0 / 35.0, S_MACIL_STAND) { A_Walk(); }
	S_MACIL_RUN1('LEAD', 0, 3.0 / 35.0, S_MACIL_RUN2) { A_Chase(); }
	S_MACIL_RUN2('LEAD', 0, 3.0 / 35.0, S_MACIL_RUN3) { A_Chase(); }
	S_MACIL_RUN3('LEAD', 1, 3.0 / 35.0, S_MACIL_RUN4) { A_Chase(); }
	S_MACIL_RUN4('LEAD', 1, 3.0 / 35.0, S_MACIL_RUN5) { A_Chase(); }
	S_MACIL_RUN5('LEAD', 2, 3.0 / 35.0, S_MACIL_RUN6) { A_Chase(); }
	S_MACIL_RUN6('LEAD', 2, 3.0 / 35.0, S_MACIL_RUN7) { A_Chase(); }
	S_MACIL_RUN7('LEAD', 3, 3.0 / 35.0, S_MACIL_RUN8) { A_Chase(); }
	S_MACIL_RUN8('LEAD', 3, 3.0 / 35.0, S_MACIL_RUN1) { A_Chase(); }
	S_MACIL_ATK1_1('LEAD', 4, 2.0 / 35.0, S_MACIL_ATK1_2) { A_FaceTarget(); }
	S_MACIL_ATK1_2('LEAD', 5 | FF_FULLBRIGHT, 2.0 / 35.0, S_MACIL_ATK1_3) { A_RiffleAttack(); }
	S_MACIL_ATK1_3('LEAD', 4, 1.0 / 35.0, S_MACIL_ATK1_1) { A_CheckRefire(); }
	S_MACIL_PAIN1('LEAD', 24, 3.0 / 35.0, S_MACIL_PAIN2) { }
	S_MACIL_PAIN2('LEAD', 24, 3.0 / 35.0, S_MACIL_RUN1) { A_Pain(); }
}

defaultproperties
{
	ConversationID = 49;
	ClassName = 'MACIL';
	Health = 95;
	Radius = 20.0;
	Height = 56.0;
	Mass = 100.0;
	StepSpeed = 8.0;
	PainChance = 0.9765625;
	bNoDeathmatch = true;
	IdleState = S_MACIL_STAND;
	IdleRightState = S_MACIL_STAND_R;
	IdleLeftState = S_MACIL_STAND_L;
	WalkState = S_MACIL_WALK1;
	SeeState = S_MACIL_RUN1;
	MissileState = S_MACIL_ATK1_1;
	PainState = S_MACIL_PAIN1;
	DeathState = S_MACIL_RUN1;
	SightSound = 'macil/sight';
	ActiveSound = 'macil/active';
	PainSound = 'macil/pain';
}

//**************************************************************************
//
//  $Log$
//  Revision 1.4  2006/04/06 11:48:52  dj_jl
//  Fixed several bugs.
//
//  Revision 1.3  2006/03/12 20:01:24  dj_jl
//  States as objects, added state variable type.
//
//  Revision 1.2  2005/11/19 13:43:50  dj_jl
//  Renamed sounds.
//
//  Revision 1.1  2002/11/02 08:20:56  dj_jl
//  New style classes.
//
//**************************************************************************
