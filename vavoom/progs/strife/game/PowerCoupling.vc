//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
// 289 287

class PowerCoupling : Actor
	__mobjinfo__(220);

//==========================================================================
//
//	GetClassFromID
//
//==========================================================================

void Died(EntityEx source, EntityEx inflictor)
{
	int i;

	::Died(source, inflictor);

	for (i = 0; i < MAXPLAYERS; ++i)
	{
		if (Level.Game.Players[i] && Level.Game.Players[i].bSpawned &&
			Level.Game.Players[i].Health > 0)
		{
			break;
		}
	}

	if (i == MAXPLAYERS)
	{
		return;
	}

	//	Temporarely link it to the world, since we need sector
	LinkToWorld();
	StrifeLevelInfo(Level).NoiseAlert(source, self);
	UnlinkFromWorld();
	StrifeLevelInfo(Level).EV_DoDoor(225, 16, 0, 0, 0,
		VerticalDoor::DOOREV_Close, NULL, Actor(Level.Game.Players[i].MO));
	StrifeLevelInfo(Level).EV_DoFloor(44, 8, 0, 0, 0,
		FloorMover::FLOOREV_LowerToHighest, NULL);
	EntityEx(Level.Game.Players[i].MO).GiveInventoryType(class<Inventory>(FindClass('QuestItem6')));
	Player(Level.Game.Players[i]).ClientVoice(13);
	Player(Level.Game.Players[i]).SetObjectives(13);
	Spawn(BrokenPowerCoupling, Origin);
}

states
{
Spawn:
	COUP AB 5
	Loop
}

defaultproperties
{
	Health = 40;
	Radius = 17.0;
	Height = 64.0;
	Mass = 999999.0;
	Speed = 6.0 * 35.0;
	bSolid = true;
	bShootable = true;
//	bUnknown5 = true;
	bInCombat = true;
	bDropped = true;
	bNoBlood = true;
	bNoDeathmatch = true;
}
