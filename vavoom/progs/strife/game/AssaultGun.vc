//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class AssaultGun : StrifeWeapon
	__mobjinfo__(2002);

//==========================================================================
//
//	A_FireRiffle
//
//==========================================================================

final void A_FireRiffle()
{
	TVec dir;
	TAVec angles;
	int damage;

	Owner.PlaySound('weapons/assaultgun', CHAN_WEAPON);

	if (!DepleteAmmo())
		return;

	Owner.SetState(Actor(Owner).MissileState);

	Actor(Owner).Aim(dir, 16.0 * 64.0);
	if (Player(Owner.Player).Refire)
	{
		VectorAngles(&dir, &angles);
		angles.yaw = AngleMod360(angles.yaw +
			(Random() - Random()) * 45.0 / 2.0 / itof(1 << (Player(Owner.Player).Accuracy * 5 / 100)));
		AngleVector(&angles, &dir);
	}
	damage = 4 * (P_Random() % 3 + 1);
	Actor(Owner).LineAttack(dir, MISSILERANGE, damage, StrifePuff);
	EntityEx(Owner).bMuzzleFlash = true;
	EntityEx(Owner).DLightRadius = 118.0;
	EntityEx(Owner).DLightColour = RGB(203, 111, 0);
}

states
{
Ready:
	RIFG A 1 A_WeaponReady
	Loop
Deselect:
	RIFG B 1 A_Lower
	Loop
Select:
	RIFG A 1 A_Raise
	Loop
Fire:
	RIFF ABD 3 A_FireRiffle
	RIFG C 0 A_ReFire
	RIFG B 2 A_Light0
	Goto Ready
Spawn:
	RIFL A -1
	Stop
}

defaultproperties
{
	Slot = 3;
	SelectionOrder = 600;
	AmmoType1 = ClipOfBullets;
	AmmoUse1 = 1;
	AmmoGive1 = 20;
	ConversationID = 188;
	PickupMessage = "$txt_assaultgun";
}
