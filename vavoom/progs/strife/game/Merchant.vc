//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Merchant : Pawn
	abstract;

//==========================================================================
//
//	A_CloseUpShop
//
//==========================================================================

final void A_CloseUpShop()
{
	StrifeLevelInfo(Level).EV_DoDoor(999, 64, 960, 0, 0,
		VerticalDoor::DOOREV_CloseWaitOpen, NULL, none);
	if (Target && Target.bIsPlayer)
	{
		StrifeLevelInfo(Level).NoiseAlert(Target, self);
	}
}

//==========================================================================
//
//	A_ClearSoundTarget
//
//==========================================================================

final void A_ClearSoundTarget()
{
	Sector->SoundTarget = none;
}

__states__
{
	S_MERCHANDER_YES1('MRYS', 0, 30.0 / 35.0, S_MERCHANDER_STAND1) = none
	S_MERCHANDER_NO1('MRNO', 0, 6.0 / 35.0, S_MERCHANDER_NO2) = none
	S_MERCHANDER_NO2('MRNO', 1, 6.0 / 35.0, S_MERCHANDER_NO3) = none
	S_MERCHANDER_NO3('MRNO', 2, 10.0 / 35.0, S_MERCHANDER_NO4) = none
	S_MERCHANDER_NO4('MRNO', 1, 6.0 / 35.0, S_MERCHANDER_NO5) = none
	S_MERCHANDER_NO5('MRNO', 0, 6.0 / 35.0, S_MERCHANDER_STAND1) = none
	S_MERCHANDER_STAND1('MRST', 0, 10.0 / 35.0, S_MERCHANDER_STAND1) = A_Stand
	S_MERCHANDER_LOOK1('MRLK', 0, 30.0 / 35.0, S_MERCHANDER_STAND1) = A_ActiveSound
	S_MERCHANDER_LOOK2('MRLK', 1, 30.0 / 35.0, S_MERCHANDER_STAND1) = none
	S_MERCHANDER_BD1('MRBD', 0, 4.0 / 35.0, S_MERCHANDER_BD2) = none
	S_MERCHANDER_BD2('MRBD', 1, 4.0 / 35.0, S_MERCHANDER_BD3) = none
	S_MERCHANDER_BD3('MRBD', 2, 4.0 / 35.0, S_MERCHANDER_BD4) = none
	S_MERCHANDER_BD4('MRBD', 3, 4.0 / 35.0, S_MERCHANDER_BD5) = none
	S_MERCHANDER_BD5('MRBD', 4, 4.0 / 35.0, S_MERCHANDER_BD6) = none
	S_MERCHANDER_BD6('MRBD', 3, 4.0 / 35.0, S_MERCHANDER_BD7) = none
	S_MERCHANDER_BD7('MRBD', 2, 4.0 / 35.0, S_MERCHANDER_BD8) = none
	S_MERCHANDER_BD8('MRBD', 1, 4.0 / 35.0, S_MERCHANDER_BD9) = none
	S_MERCHANDER_BD9('MRBD', 0, 5.0 / 35.0, S_MERCHANDER_BD10) = none
	S_MERCHANDER_BD10('MRBD', 5, 6.0 / 35.0, S_MERCHANDER_STAND1) = none
	S_MERCHANDER_PAIN1('MRPN', 0, 3.0 / 35.0, S_MERCHANDER_PAIN2) = none
	S_MERCHANDER_PAIN2('MRPN', 1, 3.0 / 35.0, S_MERCHANDER_PAIN3) = A_Pain
	S_MERCHANDER_PAIN3('MRPN', 2, 3.0 / 35.0, S_MERCHANDER_PAIN4) = none
	S_MERCHANDER_PAIN4('MRPN', 3, 9.0 / 35.0, S_MERCHANDER_PAIN5) = A_CloseUpShop
	S_MERCHANDER_PAIN5('MRPN', 2, 4.0 / 35.0, S_MERCHANDER_PAIN6) = none
	S_MERCHANDER_PAIN6('MRPN', 1, 3.0 / 35.0, S_MERCHANDER_PAIN7) = none
	S_MERCHANDER_PAIN7('MRPN', 0, 3.0 / 35.0, S_MERCHANDER_STAND1) = A_ClearSoundTarget
	S_MERCHANDER_GT1('MRGT', 0, 5.0 / 35.0, S_MERCHANDER_GT2) = none
	S_MERCHANDER_GT2('MRGT', 1, 5.0 / 35.0, S_MERCHANDER_GT3) = none
	S_MERCHANDER_GT3('MRGT', 2, 5.0 / 35.0, S_MERCHANDER_GT4) = none
	S_MERCHANDER_GT4('MRGT', 3, 5.0 / 35.0, S_MERCHANDER_GT5) = none
	S_MERCHANDER_GT5('MRGT', 4, 5.0 / 35.0, S_MERCHANDER_GT6) = none
	S_MERCHANDER_GT6('MRGT', 5, 5.0 / 35.0, S_MERCHANDER_GT7) = none
	S_MERCHANDER_GT7('MRGT', 6, 5.0 / 35.0, S_MERCHANDER_GT8) = none
	S_MERCHANDER_GT8('MRGT', 7, 5.0 / 35.0, S_MERCHANDER_GT9) = none
	S_MERCHANDER_GT9('MRGT', 8, 5.0 / 35.0, S_MERCHANDER_STAND1) = none
}

defaultproperties
{
	Health = 10000000;
	Radius = 20.0;
	Height = 56.0;
	Mass = 5000.0;
	PainChance = 0.5859375;
	bCountKill = false;
	bCkeckNoMonsters = false;
	bActivateMCross = false;
	bNoDeathmatch = true;
	IdleState = S_MERCHANDER_STAND1;
	IdleRightState = S_MERCHANDER_LOOK1;
	IdleLeftState = S_MERCHANDER_LOOK2;
	WalkState = S_MERCHANDER_BD1;
	SeeState = S_MERCHANDER_PAIN1;
	PainState = S_MERCHANDER_PAIN1;
}
