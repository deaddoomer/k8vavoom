//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class HealthTraining : InventoryItem;

//==========================================================================
//
//	TryPickup
//
//==========================================================================

bool TryPickup(EntityEx Toucher)
{
	bool		Ret;

	Ret = ::TryPickup(Toucher);
	if (Ret && !bDropped)
	{
		Player(Toucher.Player).GiveInvItem(StrifeDefs::ITEM_Accuracy, 1);
		Player(Toucher.Player).GiveInvItem(StrifeDefs::ITEM_Coin,
			Player(Toucher.Player).Accuracy * 5 + 300);
	}
	return Ret;
}

__states__
{
	S_TOUGHNESS('HELT', 0, -1.0, none) = none
}

defaultproperties
{
	ConversationID = 309;
	PickupMessage = "Toughness";
	MaxAmount = 100;
	IdleState = S_TOUGHNESS;
	ItemType = StrifeDefs::ITEM_Toughness;
}
