//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class InventoryItem : Inventory
	abstract;

int ItemType;

//==========================================================================
//
//	TryPickup
//
//==========================================================================

bool TryPickup(EntityEx Toucher)
{
	if (Player(Toucher.Player).Inventory[ItemType] &&
		Player(Toucher.Player).Inventory[ItemType].Amount >= Player(Toucher.Player).Inventory[ItemType].MaxAmount)
	{
		return false;
	}
	if (!Player(Toucher.Player).Inventory[ItemType])
	{
		Player(Toucher.Player).Inventory[ItemType] = Spawn(MainGameInfo(Level.Game).InvItemCID[ItemType]);
		Player(Toucher.Player).Inventory[ItemType].AttachToOwner(EntityEx(Player(Toucher.Player).MO));
		Player(Toucher.Player).Inventory[ItemType].Amount = 0;
	}
	Player(Toucher.Player).Inventory[ItemType].Amount += Amount;
	if (Player(Toucher.Player).Inventory[ItemType].Amount > Player(Toucher.Player).Inventory[ItemType].MaxAmount)
	{
		Player(Toucher.Player).Inventory[ItemType].Amount = Player(Toucher.Player).Inventory[ItemType].MaxAmount;
	}
	if (!Player(Toucher.Player).InvCursor)
	{
		Player(Toucher.Player).InvCursor = Player(Toucher.Player).Inventory[ItemType];
		Player(Toucher.Player).InvFirst = Player(Toucher.Player).Inventory[ItemType];
	}
	Player(Toucher.Player).AdjustInvFirst();
	GoAwayAndDie();
	GiveQuest(Toucher);
	return true;
}

defaultproperties
{
	bFloorClip = true;
	bInvBar = true;
}
