//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class StrifeBishop : Pawn
	__mobjinfo__(187);

//==========================================================================
//
//	GetExplodeParms
//
//==========================================================================

void GetExplodeParms(out int damage, out float distance, out byte damageSelf)
{
	damage = 64;
	distance = 64.0;
}

//==========================================================================
//
//	A_BishopAttack
//
//==========================================================================

final void A_BishopAttack()
{
	EntityEx missile;

	if (!Target)
		return;

	missile = SpawnMissile(Target, BishopMissile, 64.0);
	if (missile)
	{
		missile.Tracer = Target;
	}
}

//==========================================================================
//
//	A_BishopAttack
//
//==========================================================================

final void A_BishopDeath()
{
	Actor A;

	//	Spawn Bishop's specter
	A = Spawn(AlienSpectre2, Origin + vector(0.0, 0.0, Height));
	A.Velocity.z += 2.0 * 35.0;
	A.Angles.yaw = Angles.yaw;
}

states
{
Spawn:
	MLDR A 10 A_Look
	Loop
See:
	MLDR AABBCCDD 3 A_Chase
	Loop
Missile:
	MLDR E 3 A_FaceTarget
	MLDR F 2 Bright A_BishopAttack
	Goto See
Pain:
	MLDR D 1 A_Pain
	Goto See
Death:
	MLDR G 3 Bright
	MLDR H 5 Bright A_Scream
	MLDR I 4 Bright A_TossGib
	MLDR J 4 Bright A_ExplodeAndAlert
	MLDR KL 4 Bright
	MLDR M 4 Bright A_Fall
	MLDR N 4 Bright
	MLDR O 4 Bright A_TossGib
	MLDR P 4 Bright
	MLDR Q 4 Bright A_TossGib
	MLDR R 4 Bright
	MLDR S 4 Bright A_TossGib
	MLDR T 4 Bright
	MLDR U 4 Bright A_TossGib
	MLDR V 4 A_BishopDeath
	Stop
}

defaultproperties
{
	Health = 500;
	Radius = 40.0;
	Height = 56.0;
	Mass = 500.0;
	Speed = 8.0 * 35.0;
	PainChance = 0.5;
	bInCombat = true;
	bNoBlood = true;
	bNoDeathmatch = true;
	bExplodeParticles = true;
	SightSound = 'bishop/sight';
	ActiveSound = 'bishop/active';
	PainSound = 'bishop/pain';
	DeathSound = 'bishop/death';
	DLightRadius = 128.0;
	Obituary = "$ob_stfbishop";
	DropItemList.Num = 1;
	DropItemList[0].Type = CrateOfMissiles; DropItemList[0].Amount = 0; DropItemList[0].Chance = 1.0;
}
