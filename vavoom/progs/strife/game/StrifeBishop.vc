//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class StrifeBishop : Pawn
	__mobjinfo__(187);

//==========================================================================
//
//	NoBlockingSet
//
//==========================================================================

void NoBlockingSet()
{
	DropItem(CrateOfMissiles, 0, 1.0);
}

//==========================================================================
//
//	A_BishopAttack
//
//==========================================================================

final void A_BishopAttack()
{
	EntityEx missile;

	if (!Target)
		return;

	missile = SpawnMissile(Target, BishopMissile, 64.0);
	if (missile)
	{
		missile.Tracer = Target;
	}
}

//==========================================================================
//
//	A_BishopAttack
//
//==========================================================================

final void A_BishopDeath()
{
	Actor A;

	//	Spawn Bishop's specter
	A = Spawn(AlienSpectre2, Origin + vector(0.0, 0.0, Height));
	A.Velocity.z += 2.0 * 35.0;
	A.Angles.yaw = Angles.yaw;
}

__states__
{
	S_BISHOP_LOOK('MLDR', 0, 10.0 / 35.0, S_BISHOP_LOOK) = A_Look
	S_BISHOP_RUN1('MLDR', 0, 3.0 / 35.0, S_BISHOP_RUN2) = A_Chase
	S_BISHOP_RUN2('MLDR', 0, 3.0 / 35.0, S_BISHOP_RUN3) = A_Chase
	S_BISHOP_RUN3('MLDR', 1, 3.0 / 35.0, S_BISHOP_RUN4) = A_Chase
	S_BISHOP_RUN4('MLDR', 1, 3.0 / 35.0, S_BISHOP_RUN5) = A_Chase
	S_BISHOP_RUN5('MLDR', 2, 3.0 / 35.0, S_BISHOP_RUN6) = A_Chase
	S_BISHOP_RUN6('MLDR', 2, 3.0 / 35.0, S_BISHOP_RUN7) = A_Chase
	S_BISHOP_RUN7('MLDR', 3, 3.0 / 35.0, S_BISHOP_RUN8) = A_Chase
	S_BISHOP_RUN8('MLDR', 3, 3.0 / 35.0, S_BISHOP_RUN1) = A_Chase
	S_BISHOP_ATK1('MLDR', 4, 3.0 / 35.0, S_BISHOP_ATK2) = A_FaceTarget
	S_BISHOP_ATK2('MLDR', 5 | FF_FULLBRIGHT, 2.0 / 35.0, S_BISHOP_RUN1) = A_BishopAttack
	S_BISHOP_PAIN1('MLDR', 3, 1.0 / 35.0, S_BISHOP_RUN1) = A_Pain
	S_BISHOP_DIE1('MLDR', 6 | FF_FULLBRIGHT, 3.0 / 35.0, S_BISHOP_DIE2) = none
	S_BISHOP_DIE2('MLDR', 7 | FF_FULLBRIGHT, 5.0 / 35.0, S_BISHOP_DIE3) = A_Scream
	S_BISHOP_DIE3('MLDR', 8 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHOP_DIE4) = A_XDying
	S_BISHOP_DIE4('MLDR', 9 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHOP_DIE5) = A_Explode
	S_BISHOP_DIE5('MLDR', 10 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHOP_DIE6) = none
	S_BISHOP_DIE6('MLDR', 11 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHOP_DIE7) = none
	S_BISHOP_DIE7('MLDR', 12 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHOP_DIE8) = A_Fall
	S_BISHOP_DIE8('MLDR', 13 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHOP_DIE9) = none
	S_BISHOP_DIE9('MLDR', 14 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHOP_DIE10) = A_XDying
	S_BISHOP_DIE10('MLDR', 15 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHOP_DIE11) = none
	S_BISHOP_DIE11('MLDR', 16 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHOP_DIE12) = A_XDying
	S_BISHOP_DIE12('MLDR', 17 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHOP_DIE13) = none
	S_BISHOP_DIE13('MLDR', 18 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHOP_DIE14) = A_XDying
	S_BISHOP_DIE14('MLDR', 19 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHOP_DIE15) = none
	S_BISHOP_DIE15('MLDR', 20 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHOP_DIE16) = A_XDying
	S_BISHOP_DIE16('MLDR', 21, 4.0 / 35.0, none) = A_BishopDeath
}

defaultproperties
{
	Health = 500;
	Radius = 40.0;
	Height = 56.0;
	Mass = 500.0;
	StepSpeed = 8.0;
	PainChance = 0.5;
	bInCombat = true;
	bNoBlood = true;
	bNoDeathmatch = true;
	IdleState = S_BISHOP_LOOK;
	SeeState = S_BISHOP_RUN1;
	MissileState = S_BISHOP_ATK1;
	PainState = S_BISHOP_PAIN1;
	DeathState = S_BISHOP_DIE1;
	SightSound = 'bishop/sight';
	ActiveSound = 'bishop/active';
	PainSound = 'bishop/pain';
	DeathSound = 'bishop/death';
}
