//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Specter1 : Pawn
	__mobjinfo__(129);

__states__
{
	S_SPECTER_LOOK1('ALN1', 0, 10.0 / 35.0, S_SPECTER_LOOK2) { A_Look(); }
	S_SPECTER_LOOK2('ALN1', 1, 10.0 / 35.0, S_SPECTER_LOOK1) { A_FlightChase(); }
	S_SPECTER_RUN1('ALN1', 0 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_RUN2) { A_Chase(); }
	S_SPECTER_RUN2('ALN1', 1 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_RUN3) { A_Chase(); }
	S_SPECTER_RUN3('ALN1', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_RUN4) { A_FlightChase(); }
	S_SPECTER_RUN4('ALN1', 3 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_RUN5) { A_Chase(); }
	S_SPECTER_RUN5('ALN1', 4 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_RUN6) { A_Chase(); }
	S_SPECTER_RUN6('ALN1', 5 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_RUN7) { A_Chase(); }
	S_SPECTER_RUN7('ALN1', 6 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_RUN8) { A_FlightChase(); }
	S_SPECTER_RUN8('ALN1', 7 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_RUN9) { A_Chase(); }
	S_SPECTER_RUN9('ALN1', 8 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_RUN10) { A_Chase(); }
	S_SPECTER_RUN10('ALN1', 9 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_RUN11) { A_Chase(); }
	S_SPECTER_RUN11('ALN1', 10 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_RUN1) { A_FlightChase(); }
	S_SPECTER_MELEE1('ALN1', 9 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_MELEE2) { A_FaceTarget(); }
	S_SPECTER_MELEE2('ALN1', 8 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_MELEE3) { A_SpecterMelee(); }
	S_SPECTER_MELEE3('ALN1', 7 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_RUN3) { }
	S_SPECTER_ATK1('ALN1', 9 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_ATK2) { A_FaceTarget(); }
	S_SPECTER_ATK2('ALN1', 8 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_ATK3) { A_SpecterAttack(); }
	S_SPECTER_ATK3('ALN1', 7 | FF_FULLBRIGHT, 4.0 / 35.0, S_SPECTER_RUN11) { }
	S_SPECTER_PAIN1('ALN1', 9, 2.0 / 35.0, S_SPECTER_RUN7) { A_Pain(); }
	S_SPECTER_DIE1('AL1P', 0 | FF_FULLBRIGHT, 6.0 / 35.0, S_SPECTER_DIE2) { A_SpecterTossChunk(); }
	S_SPECTER_DIE2('AL1P', 1 | FF_FULLBRIGHT, 6.0 / 35.0, S_SPECTER_DIE3) { A_Scream(); }
	S_SPECTER_DIE3('AL1P', 2 | FF_FULLBRIGHT, 6.0 / 35.0, S_SPECTER_DIE4) { A_SpecterTossChunk(); }
	S_SPECTER_DIE4('AL1P', 3 | FF_FULLBRIGHT, 6.0 / 35.0, S_SPECTER_DIE5) { }
	S_SPECTER_DIE5('AL1P', 4 | FF_FULLBRIGHT, 6.0 / 35.0, S_SPECTER_DIE6) { }
	S_SPECTER_DIE6('AL1P', 5 | FF_FULLBRIGHT, 6.0 / 35.0, S_SPECTER_DIE7) { A_SpecterTossChunk(); }
	S_SPECTER_DIE7('AL1P', 6 | FF_FULLBRIGHT, 6.0 / 35.0, S_SPECTER_DIE8) { }
	S_SPECTER_DIE8('AL1P', 7 | FF_FULLBRIGHT, 6.0 / 35.0, S_SPECTER_DIE9) { A_SpecterTossChunk(); }
	S_SPECTER_DIE9('AL1P', 8 | FF_FULLBRIGHT, 6.0 / 35.0, S_SPECTER_DIE10) { }
	S_SPECTER_DIE10('AL1P', 9 | FF_FULLBRIGHT, 6.0 / 35.0, S_SPECTER_DIE11) { }
	S_SPECTER_DIE11('AL1P', 10 | FF_FULLBRIGHT, 6.0 / 35.0, S_SPECTER_DIE12) { }
	S_SPECTER_DIE12('AL1P', 11 | FF_FULLBRIGHT, 5.0 / 35.0, S_SPECTER_DIE13) { }
	S_SPECTER_DIE13('AL1P', 12 | FF_FULLBRIGHT, 5.0 / 35.0, S_SPECTER_DIE14) { }
	S_SPECTER_DIE14('AL1P', 13 | FF_FULLBRIGHT, 5.0 / 35.0, S_SPECTER_DIE15) { A_SpecterTossHead(); }
	S_SPECTER_DIE15('AL1P', 14 | FF_FULLBRIGHT, 5.0 / 35.0, S_SPECTER_DIE16) { }
	S_SPECTER_DIE16('AL1P', 15 | FF_FULLBRIGHT, 5.0 / 35.0, S_SPECTER_DIE17) { }
	S_SPECTER_DIE17('AL1P', 16 | FF_FULLBRIGHT, 5.0 / 35.0, S_SPECTER_DIE18) { }
	S_SPECTER_DIE18('AL1P', 17 | FF_FULLBRIGHT, 5.0 / 35.0, none) { A_BossDeath(); }
}

defaultproperties
{
	Health = 1000;
	Radius = 64.0;
	Height = 8.0;
	Mass = 1000.0;
	StepSpeed = 12.0;
	PainChance = 0.9765625;
	Alpha = 0.333;
	bSpecial = true;
	bNoGravity = true;
	bLookAllAround = true;
	bFloat = true;
	bInCombat = true;
	bUnknown2 = true;
	bSpectral = true;
	bNoDeathmatch = true;
	IdleState = S_SPECTER_LOOK1;
	SeeState = S_SPECTER_RUN1;
	MeleeState = S_SPECTER_MELEE1;
	MissileState = S_SPECTER_ATK1;
	PainState = S_SPECTER_PAIN1;
	DeathState = S_SPECTER_DIE1;
	SightSound = 'alienspectre/sight';
	ActiveSound = 'alienspectre/active';
	AttackSound = 'alienspectre/blade';
	PainSound = 'alienspectre/pain';
	DeathSound = 'alienspectre/death';
}
