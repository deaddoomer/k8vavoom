//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class StrifeWeapon : Weapon
	abstract;

const float
	MELEERANGE		= 64.0,
	PUNCHRANGE		= 80.0,
	MISSILERANGE	= (32.0 * 64.0),
	MAULERRANGE		= (33.0 * 64.0),
	ROBOTRANGE		= 264.0;

state FireDeathWaveState;

bool bRaiseNoiseAlert;

//===========================================================================
//
//  DecAmmo
//
//===========================================================================

final void DecAmmo()
{
	if (Ammo1)
	{
		Ammo1.Amount -= AmmoUse1;
	}
}

//==========================================================================
//
//	A_ClearFlash
//
//==========================================================================

final void A_ClearFlash()
{
	Owner.Player.SetViewState(ps_flash, none);
}

__states__
{
	S_LIGHTDONE('', 0, 0.0 / 35.0, none) = A_Light0
	S_WAVE1('WAVE', 0 | FF_FULLBRIGHT, 3.0 / 35.0, S_WAVE2) = none
	S_WAVE2('WAVE', 1 | FF_FULLBRIGHT, 3.0 / 35.0, S_WAVE3) = none
	S_WAVE3('WAVE', 2 | FF_FULLBRIGHT, 3.0 / 35.0, S_WAVE4) = none
	S_WAVE4('WAVE', 3 | FF_FULLBRIGHT, 3.0 / 35.0, S_WAVE1) = none
	S_RBPY_1('RBPY', 0 | FF_FULLBRIGHT, 3.0 / 35.0, S_RBPY_2) = none
	S_RBPY_2('RBPY', 1 | FF_FULLBRIGHT, 3.0 / 35.0, S_RBPY_3) = none
	S_RBPY_3('RBPY', 2 | FF_FULLBRIGHT, 3.0 / 35.0, S_RBPY_4) = none
	S_RBPY_4('RBPY', 3 | FF_FULLBRIGHT, 3.0 / 35.0, S_RBPY_1) = none
	S_TARGETER1('TRGT', 0, -1.0, none) = none
	S_TARGETER2('TRGT', 1, -1.0, none) = none
	S_TARGETER3('TRGT', 2, -1.0, none) = none
}

defaultproperties
{
	bRaiseNoiseAlert = true;
	bFloorClip = true;
	FireDeathWaveState = S_WAVE1;
}
