//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class AmmoSatchel : Inventory
	__mobjinfo__(183)
	__scriptid__(144);

//==========================================================================
//
//	TryPickup
//
//==========================================================================

bool TryPickup(EntityEx Toucher)
{
	class<Ammo>	Cls;

	if (!Player(Toucher.Player).Backpack)
	{
		foreach AllClasses(Ammo, Cls)
		{
			//	Only direct descendants.
			if (GetClassParent(Cls) != Ammo)
			{
				continue;
			}
			Inventory AmmoItem = Toucher.FindInventory(Cls);
			if (!AmmoItem)
			{
				AmmoItem = Spawn(Cls);
				AmmoItem.AttachToOwner(Toucher);
				AmmoItem.Amount = 0;
			}
			AmmoItem.MaxAmount *= 2;
		}
		Player(Toucher.Player).Backpack = true;
	}
	Player(Toucher.Player).GiveAmmo(ClipOfBullets, 10);
	Player(Toucher.Player).GiveAmmo(ElectricBolts, 4);
	Player(Toucher.Player).GiveAmmo(PoisonBolts, 2);
	Player(Toucher.Player).GiveAmmo(EnergyPod, 20);
	Player(Toucher.Player).GiveAmmo(MiniMissiles, 4);
	Player(Toucher.Player).GiveAmmo(HEGrenadeRounds, 6);
	Player(Toucher.Player).GiveAmmo(PhosphorusGrenadeRounds, 4);
	GoAwayAndDie();
	GiveQuest(Toucher);
	return true;
}

__states__
{
	S_BACKPACK('BKPK', 0, -1.0, none) = none
}

defaultproperties
{
	bFloorClip = true;
	ConversationID = 187;
	PickupMessage = "$txt_ammosatchel";
	IdleState = S_BACKPACK;
}
