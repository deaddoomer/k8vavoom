//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponPunch : Weapon;

//==========================================================================
//
//	A_Punch
//
//==========================================================================

void A_Punch()
{
	int power;
	int damage;
	TAVec angles;
	TVec dir;

	power = Player.Stamina / 10;
	damage = (P_Random() % (power + 8)) * (power + 2);

	if (Player.Powers[pw_strength])
		damage *= 10;

	angles = Player.MO.Angles;
	angles.yaw = AngleMod360(angles.yaw +
		(Random() - Random()) * 45.0 / 8.0);
	dir = AimLineAttack(Player.MO, angles, PUNCHRANGE);
	LineAttack(Player.MO, dir, PUNCHRANGE, damage);

	// turn to face target
	if (linetarget)
	{
		if (linetarget.bNoBlood)
		{
			Player.MO.PlaySound('PunchHitMetal', CHAN_WEAPON);
		}
		else
		{
			Player.MO.PlaySound('PunchHitMeat', CHAN_WEAPON);
		}
		Player.MO.Angles.yaw =
			atan2(linetarget.Origin.y - Player.MO.Origin.y,
			linetarget.Origin.x - Player.MO.Origin.x);
		Player.bFixAngle = true;
		Player.MO.bJustAttacked = true;
		// Sys1eae0 (actor->player, linetarget);
	}
	else
	{
		Player.MO.PlaySound('PunchMiss', CHAN_WEAPON);
	}
}

__states__
{
	S_PUNCH('PNCH', 0, 1.0 / 35.0, S_PUNCH) { A_WeaponReady(); }
	S_PUNCHDOWN('PNCH', 0, 1.0 / 35.0, S_PUNCHDOWN) { A_Lower(); }
	S_PUNCHUP('PNCH', 0, 1.0 / 35.0, S_PUNCHUP) { A_Raise(); }
	S_PUNCH1('PNCH', 1, 4.0 / 35.0, S_PUNCH2) { }
	S_PUNCH2('PNCH', 2, 4.0 / 35.0, S_PUNCH3) { A_Punch(); }
	S_PUNCH3('PNCH', 3, 5.0 / 35.0, S_PUNCH4) { }
	S_PUNCH4('PNCH', 2, 4.0 / 35.0, S_PUNCH5) { }
	S_PUNCH5('PNCH', 1, 5.0 / 35.0, S_PUNCH) { A_ReFire(); }
}

defaultproperties
{
	Ammo = am_noammo;
	UpState = S_PUNCHUP;
	DownState = S_PUNCHDOWN;
	ReadyState = S_PUNCH;
	AttackState = S_PUNCH1;
	FlashState = S_LIGHTDONE;
	bRaiseNoiseAlert = false;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.5  2004/01/30 17:40:09  dj_jl
//  Implemented many action functions.
//
//  Revision 1.4  2003/11/12 16:51:33  dj_jl
//  Changed player structure into a class
//
//  Revision 1.3  2003/09/11 17:21:04  dj_jl
//  Silent weapons
//
//  Revision 1.2  2003/03/08 12:42:31  dj_jl
//  Removed old macro.
//
//  Revision 1.1  2002/11/02 08:20:57  dj_jl
//  New style classes.
//
//**************************************************************************
