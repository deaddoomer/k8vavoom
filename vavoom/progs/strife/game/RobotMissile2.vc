//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class RobotMissile2 : MiniMissile;

//==========================================================================
//
//	A_RocketTrail
//
//==========================================================================

final void A_RocketTrail()
{
	Actor mpuff;

	mpuff = Spawn(ReactorPuff, Origin);
	if (mpuff.SightSound)
		mpuff.PlaySound(mpuff.SightSound, CHAN_BODY);
}

__states__
{
	S_ROBOT_MISSILE2_1('MISS', 0 | FF_FULLBRIGHT, 4.0 / 35.0, S_ROBOT_MISSILE2_2) = A_RocketTrail
	S_ROBOT_MISSILE2_2('MISS', 1 | FF_FULLBRIGHT, 3.0 / 35.0, S_ROBOT_MISSILE2_1) = A_Tracer
}

defaultproperties
{
	bActivateImpact = false;
	IdleState = S_ROBOT_MISSILE2_1;
	SightSound = 'bishop/misl';
	DeathSound = 'bishop/mislx';
}
