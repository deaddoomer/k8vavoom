//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponMissileLauncher : Weapon;

//==========================================================================
//
//	A_FireMissile
//
//==========================================================================

void A_FireMissile()
{
	float savedangle;

	savedangle = Player.MO.Angles.yaw;
	Player.MO.Angles.yaw = AngleMod360(Player.MO.Angles.yaw +
		(Random() - Random()) * 45.0 / 4.0 / itof(1 << (Player.Accuracy * 5 / 100)));
	Player.Ammo[Ammo]--;
	Player.MO.SetState(Player.MO.MissileState);
	Player.SpawnPlayerMissile(MiniMissile);
	Player.MO.Angles.yaw = savedangle;
}

__states__
{
	S_MISSILE('MMIS', 0, 1.0 / 35.0, S_MISSILE) { A_WeaponReady(); }
	S_MISSILEDOWN('MMIS', 0, 1.0 / 35.0, S_MISSILEDOWN) { A_Lower(); }
	S_MISSILEUP('MMIS', 0, 1.0 / 35.0, S_MISSILEUP) { A_Raise(); }
	S_MISSILE1('MMIS', 0, 4.0 / 35.0, S_MISSILE2) { A_FireMissile(); }
	S_MISSILE2('MMIS', 1, 4.0 / 35.0, S_MISSILE3) { A_Light1(); }
	S_MISSILE3('MMIS', 2 | FF_FULLBRIGHT, 5.0 / 35.0, S_MISSILE4) { }
	S_MISSILE4('MMIS', 3 | FF_FULLBRIGHT, 2.0 / 35.0, S_MISSILE5) { A_Light2(); }
	S_MISSILE5('MMIS', 4 | FF_FULLBRIGHT, 2.0 / 35.0, S_MISSILE6) { }
	S_MISSILE6('MMIS', 5 | FF_FULLBRIGHT, 2.0 / 35.0, S_MISSILE7) { A_Light0(); }
	S_MISSILE7('MMIS', 5, 0.0 / 35.0, S_MISSILE) { A_ReFire(); }
}

defaultproperties
{
	Ammo = StrifeDefs::am_misl;
	UpState = S_MISSILEUP;
	DownState = S_MISSILEDOWN;
	ReadyState = S_MISSILE;
	AttackState = S_MISSILE1;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.5  2006/02/17 19:06:53  dj_jl
//  Moved common defs to classes.
//
//  Revision 1.4  2004/08/22 19:23:27  dj_jl
//  Moved many functions to player class.
//
//  Revision 1.3  2004/01/30 17:40:09  dj_jl
//  Implemented many action functions.
//
//  Revision 1.2  2003/11/12 16:51:33  dj_jl
//  Changed player structure into a class
//
//  Revision 1.1  2002/11/02 08:20:57  dj_jl
//  New style classes.
//
//**************************************************************************
