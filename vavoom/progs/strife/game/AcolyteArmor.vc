//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class AcolyteArmor : AcolyteBase
	__mobjinfo__(201);

//============================================================================
//
// A_HideDecepticon
//
// Hide the Acolyte-to-be							->
// Hide the guy transforming into an Acolyte		->
// Hide the transformer								->
// Transformers are Autobots and Decepticons, and
// Decepticons are the bad guys, so...				->
//
// Hide the Decepticon!
//
//============================================================================

final void A_HideDecepticon()
{
	StrifeLevelInfo(Level).EV_DoDoor(999, 64, 0, 0, 0,
		VerticalDoor::DOOREV_Close, NULL, none);
	if (Enemy && Enemy.bIsPlayer)
	{
		StrifeLevelInfo(Level).NoiseAlert(Enemy, self);
	}
}

__states__
{
	S_ACOLYTEARM_STAND('ARMR', 0, -1.0, none) = none
	S_ACOLYTEARM_PAIN('ARMR', 0, -1.0, none) = A_HideDecepticon
}

defaultproperties
{
	ConversationID = 6;
	Health = 61;
	Radius = 20.0;
	Height = 56.0;
	Mass = 100.0;
	PainChance = 1.0;
	IdleState = S_ACOLYTEARM_STAND;
	PainState = S_ACOLYTEARM_PAIN;
	DeathState = S_ACOLYTE_XDIE1;
	DeathSound = 'becoming/death';
}
