//**************************************************************************
//**
//**	##   ##    ##    ##   ##   ####     ####   ###     ###
//**	##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**	 ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**	 ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**	  ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**	   #    ##    ##    #      ####     ####   ##       ##
//**
//**	$Id$
//**
//**	Copyright (C) 1999-2001 JÆnis Legzdi·ý
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**	$Log$
//**	Revision 1.2  2001/07/27 14:27:53  dj_jl
//**	Update with Id-s and Log-s, some fixes
//**
//**************************************************************************

//==========================================================================
//
//	TranslateLevel
//
//==========================================================================

void TranslateLevel(void)
{
}

//==========================================================================
//
//	AfterUnarchiveThinkers
//
//==========================================================================

void AfterUnarchiveThinkers(void)
{
}

//==========================================================================
//
//	G_InitNew
//
//==========================================================================

void G_InitNew(int skill)
{
	int		i;

    respawnmonsters = skill == sk_nightmare || GetCvar("RespawnMonsters");
    nomonsters = GetCvar("NoMonsters");
    fastparm = skill == sk_nightmare || GetCvar("Fast");

    if (fastparm && (GetCvar("Fast") || gameskill != sk_nightmare))
    { 
#ifdef FIXME
		for (i = S_SARG_RUN1 ; i <= S_SARG_PAIN2 ; i++)
        {
	    	states[i].time /= 2.0;
		}
		mobjinfo[MT_BRUISERSHOT].speed = 700.0;
		mobjinfo[MT_HEADSHOT].speed = 700.0;
		mobjinfo[MT_TROOPSHOT].speed = 700.0;
#endif
    } 
    else if (skill != sk_nightmare && gameskill == sk_nightmare) 
    { 
#ifdef FIXME
		for (i = S_SARG_RUN1 ; i <= S_SARG_PAIN2 ; i++)
        {
	    	states[i].time *= 2.0;
		}
		mobjinfo[MT_BRUISERSHOT].speed = 525.0;
		mobjinfo[MT_HEADSHOT].speed = 350.0;
		mobjinfo[MT_TROOPSHOT].speed = 350.0;
#endif
    } 
}

//==========================================================================
//
//  StartLevelLoading
//
//==========================================================================

void StartLevelLoading(void)
{
    bodyqueslot = 0;
}

//==========================================================================
//
//  EndLevelLoading
//
//==========================================================================

void EndLevelLoading(void)
{
    // clear special respawning que
    iquehead = iquetail = 0;
}

//==========================================================================
//
//	main
//
//==========================================================================

void main(void)
{
	shareware = GetCvar("shareware");
}
