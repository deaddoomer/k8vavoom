//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//**************************************************************************
//
//	Reaver
//
//**************************************************************************

class Reaver:Pawn
	__mobjinfo__(3001)
{

__states__
{
	S_REAVER_LOOK1('ROB1', 0, 10.0 / 35.0, S_REAVER_LOOK2) { A_Look(); }
	S_REAVER_LOOK2('ROB1', 0, 10.0 / 35.0, S_REAVER_LOOK1) { A_Look(); }
	S_REAVER_RUN1('ROB1', 1, 3.0 / 35.0, S_REAVER_RUN2) { A_Chase(); }
	S_REAVER_RUN2('ROB1', 1, 3.0 / 35.0, S_REAVER_RUN3) { A_Chase(); }
	S_REAVER_RUN3('ROB1', 2, 3.0 / 35.0, S_REAVER_RUN4) { A_Chase(); }
	S_REAVER_RUN4('ROB1', 2, 3.0 / 35.0, S_REAVER_RUN5) { A_Chase(); }
	S_REAVER_RUN5('ROB1', 3, 3.0 / 35.0, S_REAVER_RUN6) { A_Chase(); }
	S_REAVER_RUN6('ROB1', 3, 3.0 / 35.0, S_REAVER_RUN7) { A_Chase(); }
	S_REAVER_RUN7('ROB1', 4, 3.0 / 35.0, S_REAVER_RUN8) { A_Chase(); }
	S_REAVER_RUN8('ROB1', 4, 3.0 / 35.0, S_REAVER_RUN1) { A_Chase(); }
	S_REAVER_ATK1_1('ROB1', 7, 6.0 / 35.0, S_REAVER_ATK1_2) { A_FaceTarget(); }
	S_REAVER_ATK1_2('ROB1', 8, 8.0 / 35.0, S_REAVER_ATK1_3) { A_RobotMelee(); }
	S_REAVER_ATK1_3('ROB1', 7, 6.0 / 35.0, S_REAVER_RUN1) { }
	S_REAVER_ATK2_1('ROB1', 5, 8.0 / 35.0, S_REAVER_ATK2_2) { A_FaceTarget(); }
	S_REAVER_ATK2_2('ROB1', 6 | FF_FULLBRIGHT, 11.0 / 35.0, S_REAVER_RUN1) { A_RobotMissile(); }
	S_REAVER_PAIN1('ROB1', 0, 2.0 / 35.0, S_REAVER_PAIN2) { }
	S_REAVER_PAIN2('ROB1', 0, 2.0 / 35.0, S_REAVER_RUN1) { A_Pain(); }
	S_REAVER_DIE1('ROB1', 9 | FF_FULLBRIGHT, 6.0 / 35.0, S_REAVER_DIE2) { }
	S_REAVER_DIE2('ROB1', 10 | FF_FULLBRIGHT, 6.0 / 35.0, S_REAVER_DIE3) { A_Scream(); }
	S_REAVER_DIE3('ROB1', 11 | FF_FULLBRIGHT, 5.0 / 35.0, S_REAVER_DIE4) { }
	S_REAVER_DIE4('ROB1', 12 | FF_FULLBRIGHT, 5.0 / 35.0, S_REAVER_DIE5) { A_Fall(); }
	S_REAVER_DIE5('ROB1', 13 | FF_FULLBRIGHT, 5.0 / 35.0, S_REAVER_DIE6) { }
	S_REAVER_DIE6('ROB1', 14 | FF_FULLBRIGHT, 5.0 / 35.0, S_REAVER_DIE7) { }
	S_REAVER_DIE7('ROB1', 15 | FF_FULLBRIGHT, 5.0 / 35.0, S_REAVER_DIE8) { }
	S_REAVER_DIE8('ROB1', 16 | FF_FULLBRIGHT, 6.0 / 35.0, S_REAVER_DIE9) { A_Unknown24(); }
	S_REAVER_XDIE1('ROB1', 11 | FF_FULLBRIGHT, 5.0 / 35.0, S_REAVER_XDIE2) { A_XDying(); }
	S_REAVER_XDIE2('ROB1', 12 | FF_FULLBRIGHT, 5.0 / 35.0, S_REAVER_XDIE3) { A_XScream(); }
	S_REAVER_XDIE3('ROB1', 13 | FF_FULLBRIGHT, 5.0 / 35.0, S_REAVER_XDIE4) { A_XDying(); }
	S_REAVER_XDIE4('ROB1', 14 | FF_FULLBRIGHT, 5.0 / 35.0, S_REAVER_XDIE5) { A_Fall(); }
	S_REAVER_XDIE5('ROB1', 15 | FF_FULLBRIGHT, 5.0 / 35.0, S_REAVER_XDIE6) { A_XDying(); }
	S_REAVER_XDIE6('ROB1', 16 | FF_FULLBRIGHT, 5.0 / 35.0, S_REAVER_XDIE7) { A_Unknown24(); }
	S_REAVER_XDIE7('ROB1', 17, -1.0, S_NULL) { }
}

defaultproperties
{
	Health = 150;
	GibsHealth = -75;
	Radius = 20.0;
	Height = 60.0;
	Mass = 500.0;
	StepSpeed = 12.0;
	PainChance = 0.5;
	bUnknown4 = true;
	bNoBlood = true;
	IdleState = S_REAVER_LOOK1;
	SeeState = S_REAVER_RUN1;
	MeleeState = S_REAVER_ATK1_1;
	MissileState = S_REAVER_ATK2_1;
	PainState = S_REAVER_PAIN1;
	DeathState = S_REAVER_DIE1;
	GibsDeathState = S_REAVER_XDIE1;
	SightSound = 'ReaverSight';
	ActiveSound = 'ReaverActive';
	PainSound = 'ReaverPain';
	DeathSound = 'ReaverDeath';
}

}

//**************************************************************************
//
//	ReaverCarcass
//
//**************************************************************************

class ReaverCarcass:Decoration
	__mobjinfo__(20)
{

defaultproperties
{
	IdleState = S_REAVER_DIE9;
}

}

//**************************************************************************
//
//  $Log$
//  Revision 1.4  2002/06/29 15:54:35  dj_jl
//  Floatized PainChance.
//
//  Revision 1.3  2002/06/22 07:17:45  dj_jl
//  Beautification.
//
//  Revision 1.2  2002/05/18 17:00:04  dj_jl
//  Renamed SpawnState to IdleState, other changes.
//
//  Revision 1.1  2002/04/27 17:04:55  dj_jl
//  Merged all creatures.
//
//**************************************************************************
