//**************************************************************************
//**
//**	##   ##    ##    ##   ##   ####     ####   ###     ###
//**	##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**	 ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**	 ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**	  ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**	   #    ##    ##    #      ####     ####   ##       ##
//**
//**	$Id$
//**
//**	Copyright (C) 1999-2001 JÆnis Legzdi·ý
//**
//**	This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**	This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**	Mobj info table
//**
//**	Generated by makeinfo.
//**
//**************************************************************************

void generic_mobj_start(mobj_t *self, mthing_t *mthing);

//==========================================================================
//
//	misc_0
//
//==========================================================================

class misc_0:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_0::OnMapSpawn(mthing_t *mthing)
{
	health = 10;
	spawnhealth = health;
	radius = 2.0;
	height = 1.0;
	mass = 10000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SHOOTABLE|MF_NOSECTOR;
	spawnstate = S_1295;
	deathstate = S_239;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_player
//
//==========================================================================

class misc_player:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_player::OnMapSpawn(mthing_t *mthing)
{
	health = 100;
	spawnhealth = health;
	gibshealth = -50;
	radius = 18.0;
	height = 56.0;
	mass = 100.0;
	painchance = 255;
	flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_TRANSLATION1;
	spawnstate = S_PLAY;
	seestate = S_PLAY_RUN1;
	missilestate = S_PLAY_ATK1;
	painstate = S_PLAY_PAIN;
	deathstate = S_PLAY_DIE1;
	xdeathstate = S_PLAY_XDIE1;
	sound_pain = GetSoundID("Sound10");
	sound_death = GetSoundID("Sound17");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	npc_merchander1
//
//==========================================================================

class npc_merchander1:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void npc_merchander1::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Weapon_Smith";
	health = 10000000;
	spawnhealth = health;
	radius = 20.0;
	height = 56.0;
	mass = 5000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 150;
	flags = MF_SOLID|MF_SHOOTABLE;
	spawnstate = S_MERCHANDER_STAND1;
	seestate = S_MERCHANDER_PAIN1;
	painstate = S_MERCHANDER_PAIN1;
	sound_pain = GetSoundID("Sound12");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	npc_merchander2
//
//==========================================================================

class npc_merchander2:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void npc_merchander2::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Bar_Keep";
	translation = 5;
	health = 10000000;
	spawnhealth = health;
	radius = 20.0;
	height = 56.0;
	mass = 5000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 150;
	flags = MF_SOLID|MF_SHOOTABLE;
	spawnstate = S_MERCHANDER_STAND1;
	seestate = S_MERCHANDER_PAIN1;
	painstate = S_MERCHANDER_PAIN1;
	sound_active = GetSoundID("Sound52");
	sound_pain = GetSoundID("Sound53");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	npc_merchander3
//
//==========================================================================

class npc_merchander3:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void npc_merchander3::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Amorer";
	translation = 6;
	health = 10000000;
	spawnhealth = health;
	radius = 20.0;
	height = 56.0;
	mass = 5000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 150;
	flags = MF_SOLID|MF_SHOOTABLE;
	spawnstate = S_MERCHANDER_STAND1;
	seestate = S_MERCHANDER_PAIN1;
	painstate = S_MERCHANDER_PAIN1;
	sound_pain = GetSoundID("Sound12");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	npc_merchander4
//
//==========================================================================

class npc_merchander4:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void npc_merchander4::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Medic";
	translation = 7;
	health = 10000000;
	spawnhealth = health;
	radius = 20.0;
	height = 56.0;
	mass = 50000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 150;
	flags = MF_SOLID|MF_SHOOTABLE;
	spawnstate = S_MERCHANDER_STAND1;
	seestate = S_MERCHANDER_PAIN1;
	painstate = S_MERCHANDER_PAIN1;
	sound_pain = GetSoundID("Sound12");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_6
//
//==========================================================================

class misc_6:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_6::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 140.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_7
//
//==========================================================================

class misc_7:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_7::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 175.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_8
//
//==========================================================================

class misc_8:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_8::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 175.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_9
//
//==========================================================================

class misc_9:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_9::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 1;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 245.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_10
//
//==========================================================================

class misc_10:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_10::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 1;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 245.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_11
//
//==========================================================================

class misc_11:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_11::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 1;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 245.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_12
//
//==========================================================================

class misc_12:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_12::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 3;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_13
//
//==========================================================================

class misc_13:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_13::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 3;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_14
//
//==========================================================================

class misc_14:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_14::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 3;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_15
//
//==========================================================================

class misc_15:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_15::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 2;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_16
//
//==========================================================================

class misc_16:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_16::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 2;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 245.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_17
//
//==========================================================================

class misc_17:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_17::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 2;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_18
//
//==========================================================================

class misc_18:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_18::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 4;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_19
//
//==========================================================================

class misc_19:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_19::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 4;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_20
//
//==========================================================================

class misc_20:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_20::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 4;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_21
//
//==========================================================================

class misc_21:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_21::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 6;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_22
//
//==========================================================================

class misc_22:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_22::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 6;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_23
//
//==========================================================================

class misc_23:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_23::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 6;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_24
//
//==========================================================================

class misc_24:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_24::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 5;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_25
//
//==========================================================================

class misc_25:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_25::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 5;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_26
//
//==========================================================================

class misc_26:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_26::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 5;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_27
//
//==========================================================================

class misc_27:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_27::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 7;
	health = 31;
	spawnhealth = health;
	gibshealth = -15;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_385;
	seestate = S_386;
	meleestate = S_394;
	painstate = S_397;
	crashstate = S_399;
	deathstate = S_402;
	xdeathstate = S_410;
	sound_sight = GetSoundID("Sound47");
	sound_active = GetSoundID("Sound47");
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_28
//
//==========================================================================

class misc_28:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_28::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translation = 1;
	health = 31;
	spawnhealth = health;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
	spawnstate = S_420;
	painstate = S_421;
	deathstate = S_410;
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_29
//
//==========================================================================

class misc_29:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_29::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	health = 61;
	spawnhealth = health;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 255;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
	spawnstate = S_422;
	painstate = S_423;
	deathstate = S_633;
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_30
//
//==========================================================================

class misc_30:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_30::OnMapSpawn(mthing_t *mthing)
{
	health = 20;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SHOOTABLE|MF_NOSECTOR;
	spawnstate = S_424;
	sound_active = GetSoundID("Sound54");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_31
//
//==========================================================================

class misc_31:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_31::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 192.0;
	mass = 50000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_426;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_32
//
//==========================================================================

class misc_32:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_32::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 192.0;
	mass = 50000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_429;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_33
//
//==========================================================================

class misc_33:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_33::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 192.0;
	mass = 50000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_432;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_34
//
//==========================================================================

class misc_34:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_34::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 56.0;
	mass = 50000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_435;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_35
//
//==========================================================================

class misc_35:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_35::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 56.0;
	mass = 50000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_438;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_36
//
//==========================================================================

class misc_36:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_36::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 56.0;
	mass = 50000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_441;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_37
//
//==========================================================================

class misc_37:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_37::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	health = 51;
	spawnhealth = health;
	radius = 6.0;
	height = 6.0;
	mass = 50000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 255;
	flags = MF_SOLID|MF_SHOOTABLE|MF_NOBLOOD|MF_COUNTKILL;
	spawnstate = S_444;
	seestate = S_444;
	painstate = S_446;
	crashstate = S_449;
	deathstate = S_451;
	sound_active = GetSoundID("Sound99");
	sound_pain = GetSoundID("Sound100");
	sound_death = GetSoundID("Sound100");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_38
//
//==========================================================================

class misc_38:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_38::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Beggar";
	health = 20;
	spawnhealth = health;
	gibshealth = -10;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 105.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 250;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_458;
	seestate = S_459;
	meleestate = S_465;
	painstate = S_469;
	deathstate = S_471;
	xdeathstate = S_480;
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_39
//
//==========================================================================

class misc_39:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_39::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Beggar";
	health = 20;
	spawnhealth = health;
	gibshealth = -10;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 105.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 250;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_458;
	seestate = S_459;
	meleestate = S_465;
	painstate = S_469;
	deathstate = S_471;
	xdeathstate = S_480;
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_40
//
//==========================================================================

class misc_40:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_40::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Beggar";
	health = 20;
	spawnhealth = health;
	gibshealth = -10;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 105.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 250;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_458;
	seestate = S_459;
	meleestate = S_465;
	painstate = S_469;
	deathstate = S_471;
	xdeathstate = S_480;
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_41
//
//==========================================================================

class misc_41:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_41::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Beggar";
	health = 20;
	spawnhealth = health;
	gibshealth = -10;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 105.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 250;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_458;
	seestate = S_459;
	meleestate = S_465;
	painstate = S_469;
	deathstate = S_471;
	xdeathstate = S_480;
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_42
//
//==========================================================================

class misc_42:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_42::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Beggar";
	health = 20;
	spawnhealth = health;
	gibshealth = -10;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 105.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 250;
	flags = MF_SOLID|MF_SHOOTABLE|MF_JUSTHIT|MF_COUNTKILL;
	spawnstate = S_458;
	seestate = S_459;
	meleestate = S_465;
	painstate = S_469;
	deathstate = S_471;
	xdeathstate = S_480;
	sound_attack = GetSoundID("Sound2");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound61");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_43
//
//==========================================================================

class misc_43:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_43::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Rebel";
	health = 60;
	spawnhealth = health;
	gibshealth = -30;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 170;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL|MF_TRANSLATION1;
	spawnstate = S_481;
	seestate = S_492;
	missilestate = S_500;
	painstate = S_503;
	deathstate = S_505;
	xdeathstate = S_513;
	sound_sight = GetSoundID("Sound4");
	sound_active = GetSoundID("Sound47");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound20");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_44
//
//==========================================================================

class misc_44:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_44::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Rebel";
	health = 60;
	spawnhealth = health;
	gibshealth = -30;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 170;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL|MF_TRANSLATION1;
	spawnstate = S_481;
	seestate = S_492;
	missilestate = S_500;
	painstate = S_503;
	deathstate = S_505;
	xdeathstate = S_513;
	sound_sight = GetSoundID("Sound4");
	sound_active = GetSoundID("Sound47");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound20");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_45
//
//==========================================================================

class misc_45:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_45::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Rebel";
	health = 60;
	spawnhealth = health;
	gibshealth = -30;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 170;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL|MF_TRANSLATION1;
	spawnstate = S_481;
	seestate = S_492;
	missilestate = S_500;
	painstate = S_503;
	deathstate = S_505;
	xdeathstate = S_513;
	sound_sight = GetSoundID("Sound4");
	sound_active = GetSoundID("Sound47");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound20");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_46
//
//==========================================================================

class misc_46:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_46::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Rebel";
	health = 60;
	spawnhealth = health;
	gibshealth = -30;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 170;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL|MF_TRANSLATION1;
	spawnstate = S_481;
	seestate = S_492;
	missilestate = S_500;
	painstate = S_503;
	deathstate = S_505;
	xdeathstate = S_513;
	sound_sight = GetSoundID("Sound4");
	sound_active = GetSoundID("Sound47");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound20");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_47
//
//==========================================================================

class misc_47:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_47::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Rebel";
	health = 60;
	spawnhealth = health;
	gibshealth = -30;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 170;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL|MF_TRANSLATION1;
	spawnstate = S_481;
	seestate = S_492;
	missilestate = S_500;
	painstate = S_503;
	deathstate = S_505;
	xdeathstate = S_513;
	sound_sight = GetSoundID("Sound4");
	sound_active = GetSoundID("Sound47");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound20");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_48
//
//==========================================================================

class misc_48:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_48::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Rebel";
	health = 60;
	spawnhealth = health;
	gibshealth = -30;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 170;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL|MF_TRANSLATION1;
	spawnstate = S_481;
	seestate = S_492;
	missilestate = S_500;
	painstate = S_503;
	deathstate = S_505;
	xdeathstate = S_513;
	sound_sight = GetSoundID("Sound4");
	sound_active = GetSoundID("Sound47");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound20");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_49
//
//==========================================================================

class misc_49:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_49::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "MACIL";
	health = 95;
	spawnhealth = health;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 250;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
	spawnstate = S_521;
	seestate = S_528;
	missilestate = S_536;
	painstate = S_539;
	deathstate = S_528;
	sound_sight = GetSoundID("Sound9");
	sound_active = GetSoundID("Sound47");
	sound_pain = GetSoundID("Sound12");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_50
//
//==========================================================================

class misc_50:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_50::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "MACIL";
	health = 95;
	spawnhealth = health;
	gibshealth = -47;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL|MF_UNUSED4;
	spawnstate = S_521;
	seestate = S_528;
	missilestate = S_541;
	painstate = S_539;
	deathstate = S_544;
	xdeathstate = S_544;
	sound_sight = GetSoundID("Sound9");
	sound_active = GetSoundID("Sound47");
	sound_pain = GetSoundID("Sound12");
	sound_death = GetSoundID("Sound19");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_51
//
//==========================================================================

class misc_51:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_51::OnMapSpawn(mthing_t *mthing)
{
	translucency = 66;
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
	spawnstate = S_562;
	sound_sight = GetSoundID("Sound72");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_52
//
//==========================================================================

class misc_52:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_52::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	health = 150;
	spawnhealth = health;
	gibshealth = -75;
	radius = 20.0;
	height = 60.0;
	mass = 500.0;
	speed = 420.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 128;
	flags = MF_SOLID|MF_SHOOTABLE|MF_TELEPORT|MF_NOBLOOD|MF_COUNTKILL;
	spawnstate = S_569;
	seestate = S_571;
	meleestate = S_579;
	missilestate = S_582;
	painstate = S_584;
	deathstate = S_586;
	xdeathstate = S_595;
	sound_sight = GetSoundID("Sound91");
	sound_active = GetSoundID("Sound94");
	sound_pain = GetSoundID("Sound92");
	sound_death = GetSoundID("Sound93");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_53
//
//==========================================================================

class misc_53:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_53::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "ACOLYTE";
	health = 70;
	spawnhealth = health;
	gibshealth = -35;
	radius = 24.0;
	height = 64.0;
	mass = 400.0;
	speed = 245.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 150;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
	spawnstate = S_602;
	seestate = S_614;
	missilestate = S_618;
	painstate = S_624;
	deathstate = S_625;
	xdeathstate = S_633;
	sound_sight = GetSoundID("Sound9");
	sound_active = GetSoundID("Sound48");
	sound_attack = GetSoundID("Sound5");
	sound_pain = GetSoundID("Sound16");
	sound_death = GetSoundID("Sound21");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_54
//
//==========================================================================

class misc_54:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_54::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "ACOLYTE";
	translation = 1;
	health = 70;
	spawnhealth = health;
	gibshealth = -35;
	radius = 24.0;
	height = 64.0;
	mass = 400.0;
	speed = 245.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 150;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
	spawnstate = S_602;
	seestate = S_614;
	missilestate = S_618;
	painstate = S_624;
	deathstate = S_625;
	xdeathstate = S_633;
	sound_sight = GetSoundID("Sound9");
	sound_active = GetSoundID("Sound49");
	sound_attack = GetSoundID("Sound5");
	sound_pain = GetSoundID("Sound16");
	sound_death = GetSoundID("Sound21");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_55
//
//==========================================================================

class misc_55:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_55::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "ACOLYTE";
	translation = 2;
	health = 70;
	spawnhealth = health;
	gibshealth = -35;
	radius = 24.0;
	height = 64.0;
	mass = 400.0;
	speed = 245.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 150;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
	spawnstate = S_602;
	seestate = S_614;
	missilestate = S_618;
	painstate = S_624;
	deathstate = S_625;
	xdeathstate = S_633;
	sound_sight = GetSoundID("Sound9");
	sound_active = GetSoundID("Sound50");
	sound_attack = GetSoundID("Sound5");
	sound_pain = GetSoundID("Sound16");
	sound_death = GetSoundID("Sound21");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_56
//
//==========================================================================

class misc_56:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_56::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "ACOLYTE";
	translation = 3;
	health = 70;
	spawnhealth = health;
	gibshealth = -35;
	radius = 24.0;
	height = 64.0;
	mass = 400.0;
	speed = 245.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 150;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
	spawnstate = S_602;
	seestate = S_614;
	missilestate = S_618;
	painstate = S_624;
	deathstate = S_625;
	xdeathstate = S_633;
	sound_sight = GetSoundID("Sound9");
	sound_active = GetSoundID("Sound48");
	sound_attack = GetSoundID("Sound5");
	sound_pain = GetSoundID("Sound16");
	sound_death = GetSoundID("Sound21");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_57
//
//==========================================================================

class misc_57:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_57::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "ACOLYTE";
	translation = 4;
	health = 70;
	spawnhealth = health;
	gibshealth = -35;
	radius = 24.0;
	height = 64.0;
	mass = 400.0;
	speed = 245.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 150;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
	spawnstate = S_602;
	seestate = S_614;
	missilestate = S_618;
	painstate = S_624;
	deathstate = S_625;
	xdeathstate = S_633;
	sound_sight = GetSoundID("Sound9");
	sound_active = GetSoundID("Sound49");
	sound_attack = GetSoundID("Sound5");
	sound_pain = GetSoundID("Sound16");
	sound_death = GetSoundID("Sound21");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_58
//
//==========================================================================

class misc_58:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_58::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "ACOLYTE";
	translation = 5;
	health = 70;
	spawnhealth = health;
	gibshealth = -35;
	radius = 24.0;
	height = 64.0;
	mass = 400.0;
	speed = 245.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 150;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
	spawnstate = S_602;
	seestate = S_614;
	missilestate = S_618;
	painstate = S_624;
	deathstate = S_625;
	xdeathstate = S_633;
	sound_sight = GetSoundID("Sound9");
	sound_active = GetSoundID("Sound50");
	sound_attack = GetSoundID("Sound5");
	sound_pain = GetSoundID("Sound16");
	sound_death = GetSoundID("Sound21");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_59
//
//==========================================================================

class misc_59:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_59::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "ACOLYTE";
	health = 70;
	spawnhealth = health;
	gibshealth = -35;
	radius = 24.0;
	height = 64.0;
	mass = 400.0;
	speed = 245.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 150;
	flags = MF_SOLID|MF_SHOOTABLE|MF_COUNTKILL;
	spawnstate = S_602;
	seestate = S_613;
	missilestate = S_618;
	painstate = S_622;
	deathstate = S_625;
	xdeathstate = S_633;
	sound_sight = GetSoundID("Sound9");
	sound_active = GetSoundID("Sound49");
	sound_attack = GetSoundID("Sound5");
	sound_pain = GetSoundID("Sound16");
	sound_death = GetSoundID("Sound21");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_60
//
//==========================================================================

class misc_60:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_60::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	health = 400;
	spawnhealth = health;
	radius = 40.0;
	height = 56.0;
	mass = 400.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 128;
	flags = MF_SOLID|MF_SHOOTABLE|MF_TELEPORT|MF_NOBLOOD|MF_COUNTKILL;
	spawnstate = S_645;
	seestate = S_646;
	missilestate = S_654;
	painstate = S_664;
	deathstate = S_665;
	sound_sight = GetSoundID("Sound66");
	sound_active = GetSoundID("Sound67");
	sound_pain = GetSoundID("Sound64");
	sound_death = GetSoundID("Sound65");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_61
//
//==========================================================================

class misc_61:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_61::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	health = 500;
	spawnhealth = health;
	radius = 40.0;
	height = 56.0;
	mass = 500.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 128;
	flags = MF_SOLID|MF_SHOOTABLE|MF_TELEPORT|MF_NOBLOOD|MF_COUNTKILL;
	spawnstate = S_674;
	seestate = S_675;
	missilestate = S_683;
	painstate = S_685;
	deathstate = S_686;
	sound_sight = GetSoundID("Sound66");
	sound_active = GetSoundID("Sound67");
	sound_pain = GetSoundID("Sound64");
	sound_death = GetSoundID("Sound84");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_62
//
//==========================================================================

class misc_62:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_62::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Enforcer";
	health = 300;
	spawnhealth = health;
	radius = 20.0;
	height = 60.0;
	mass = 500.0;
	speed = 280.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 100;
	flags = MF_SOLID|MF_SHOOTABLE|MF_TELEPORT|MF_NOBLOOD|MF_COUNTKILL;
	spawnstate = S_702;
	seestate = S_706;
	meleestate = S_714;
	missilestate = S_716;
	painstate = S_718;
	deathstate = S_720;
	sound_sight = GetSoundID("Sound82");
	sound_active = GetSoundID("Sound85");
	sound_pain = GetSoundID("Sound83");
	sound_death = GetSoundID("Sound84");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_63
//
//==========================================================================

class misc_63:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_63::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "ORACLE";
	health = 31;
	spawnhealth = health;
	radius = 15.0;
	height = 56.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 200;
	flags = MF_SOLID|MF_SHOOTABLE|MF_NOBLOOD|MF_COUNTKILL;
	spawnstate = S_740;
	painstate = S_741;
	crashstate = S_741;
	deathstate = S_748;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_64
//
//==========================================================================

class misc_64:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_64::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "PRIEST";
	health = 800;
	spawnhealth = health;
	radius = 15.0;
	height = 56.0;
	mass = 100.0;
	speed = 350.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_PICKUP|MF_FLOAT|MF_TELEPORT|MF_NOBLOOD|MF_COUNTKILL;
	spawnstate = S_757;
	seestate = S_759;
	meleestate = S_767;
	missilestate = S_770;
	deathstate = S_773;
	sound_sight = GetSoundID("Sound112");
	sound_active = GetSoundID("Sound102");
	sound_attack = GetSoundID("Sound90");
	sound_pain = GetSoundID("Sound111");
	sound_death = GetSoundID("Sound19");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_65
//
//==========================================================================

class misc_65:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_65::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translucency = 66;
	health = 500;
	spawnhealth = health;
	radius = 64.0;
	height = 64.0;
	mass = 1000.0;
	speed = 350.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 250;
	flags = MF_SPECIAL|MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_PICKUP|MF_FLOAT|MF_TELEPORT|MF_COUNTKILL|MF_TRANSLATION2|MF_UNUSED4;
	spawnstate = S_797;
	seestate = S_799;
	meleestate = S_810;
	missilestate = S_813;
	painstate = S_816;
	deathstate = S_817;
	sound_sight = GetSoundID("Sound125");
	sound_active = GetSoundID("Sound127");
	sound_attack = GetSoundID("Sound90");
	sound_pain = GetSoundID("Sound126");
	sound_death = GetSoundID("Sound128");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_66
//
//==========================================================================

class misc_66:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_66::OnMapSpawn(mthing_t *mthing)
{
	translucency = 66;
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_TRANSLATION2;
	spawnstate = S_834;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_67
//
//==========================================================================

class misc_67:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_67::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
	spawnstate = S_843;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_68
//
//==========================================================================

class misc_68:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_68::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
	spawnstate = S_850;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_69
//
//==========================================================================

class misc_69:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_69::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translucency = 66;
	health = 500;
	spawnhealth = health;
	radius = 24.0;
	height = 64.0;
	mass = 1000.0;
	speed = 350.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 50;
	flags = MF_SPECIAL|MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_PICKUP|MF_FLOAT|MF_TELEPORT|MF_COUNTKILL|MF_TRANSLATION2|MF_UNUSED4;
	spawnstate = S_861;
	seestate = S_863;
	meleestate = S_874;
	missilestate = S_877;
	painstate = S_880;
	deathstate = S_817;
	sound_sight = GetSoundID("Sound125");
	sound_active = GetSoundID("Sound127");
	sound_attack = GetSoundID("Sound90");
	sound_pain = GetSoundID("Sound126");
	sound_death = GetSoundID("Sound128");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_70
//
//==========================================================================

class misc_70:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_70::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translucency = 66;
	health = 500;
	spawnhealth = health;
	radius = 24.0;
	height = 64.0;
	mass = 1000.0;
	speed = 350.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 50;
	flags = MF_SPECIAL|MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_PICKUP|MF_FLOAT|MF_TELEPORT|MF_COUNTKILL|MF_TRANSLATION2|MF_UNUSED4;
	spawnstate = S_881;
	seestate = S_892;
	meleestate = S_903;
	missilestate = S_906;
	painstate = S_909;
	deathstate = S_817;
	sound_sight = GetSoundID("Sound125");
	sound_active = GetSoundID("Sound127");
	sound_attack = GetSoundID("Sound90");
	sound_pain = GetSoundID("Sound126");
	sound_death = GetSoundID("Sound128");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_71
//
//==========================================================================

class misc_71:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_71::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translucency = 66;
	health = 500;
	spawnhealth = health;
	radius = 24.0;
	height = 64.0;
	mass = 1000.0;
	speed = 350.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 50;
	flags = MF_SPECIAL|MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_PICKUP|MF_FLOAT|MF_TELEPORT|MF_COUNTKILL|MF_TRANSLATION2|MF_UNUSED4;
	spawnstate = S_910;
	seestate = S_912;
	meleestate = S_923;
	missilestate = S_926;
	painstate = S_929;
	deathstate = S_817;
	sound_sight = GetSoundID("Sound125");
	sound_active = GetSoundID("Sound127");
	sound_attack = GetSoundID("Sound90");
	sound_pain = GetSoundID("Sound126");
	sound_death = GetSoundID("Sound128");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_72
//
//==========================================================================

class misc_72:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_72::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translucency = 66;
	health = 500;
	spawnhealth = health;
	radius = 24.0;
	height = 64.0;
	mass = 1000.0;
	speed = 350.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 50;
	flags = MF_SPECIAL|MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_PICKUP|MF_FLOAT|MF_TELEPORT|MF_COUNTKILL|MF_TRANSLATION2|MF_UNUSED4;
	spawnstate = S_930;
	seestate = S_932;
	meleestate = S_943;
	missilestate = S_946;
	painstate = S_949;
	deathstate = S_817;
	sound_sight = GetSoundID("Sound125");
	sound_active = GetSoundID("Sound127");
	sound_attack = GetSoundID("Sound90");
	sound_pain = GetSoundID("Sound126");
	sound_death = GetSoundID("Sound128");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_73
//
//==========================================================================

class misc_73:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_73::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translucency = 66;
	health = 1500;
	spawnhealth = health;
	radius = 130.0;
	height = 200.0;
	mass = 1000.0;
	speed = 350.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 255;
	flags = MF_SPECIAL|MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_PICKUP|MF_FLOAT|MF_TELEPORT|MF_COUNTKILL|MF_TRANSLATION2|MF_UNUSED4;
	spawnstate = S_950;
	seestate = S_964;
	meleestate = S_975;
	missilestate = S_978;
	painstate = S_981;
	deathstate = S_982;
	sound_sight = GetSoundID("Sound124");
	sound_active = GetSoundID("Sound127");
	sound_attack = GetSoundID("Sound90");
	sound_pain = GetSoundID("Sound126");
	sound_death = GetSoundID("Sound129");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_74
//
//==========================================================================

class misc_74:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_74::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	translucency = 66;
	health = 100;
	spawnhealth = health;
	radius = 130.0;
	height = 200.0;
	mass = 1000.0;
	speed = 455.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 255;
	flags = MF_SPECIAL|MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_PICKUP|MF_FLOAT|MF_TELEPORT|MF_COUNTKILL|MF_TRANSLATION2|MF_UNUSED4;
	spawnstate = S_988;
	seestate = S_989;
	meleestate = S_995;
	missilestate = S_998;
	painstate = S_1001;
	deathstate = S_1002;
	sound_sight = GetSoundID("Sound125");
	sound_active = GetSoundID("Sound127");
	sound_attack = GetSoundID("Sound90");
	sound_pain = GetSoundID("Sound126");
	sound_death = GetSoundID("Sound128");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_75
//
//==========================================================================

class misc_75:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_75::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 84.0;
	height = 47.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1017;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_76
//
//==========================================================================

class misc_76:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_76::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 25.0;
	height = 91.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1018;
	seestate = S_1019;
	sound_sight = GetSoundID("Sound19");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_77
//
//==========================================================================

class misc_77:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_77::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 8.0;
	height = 16.0;
	mass = 100.0;
	speed = 1050.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 70;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE|MF_UNUSED4;
	spawnstate = S_1024;
	deathstate = S_149;
	sound_sight = GetSoundID("Sound106");
	sound_death = GetSoundID("Sound107");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_78
//
//==========================================================================

class misc_78:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_78::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 8.0;
	height = 16.0;
	mass = 100.0;
	speed = 1050.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 20;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE|MF_UNUSED4;
	spawnstate = S_1024;
	deathstate = S_149;
	sound_sight = GetSoundID("Sound106");
	sound_death = GetSoundID("Sound107");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_79
//
//==========================================================================

class misc_79:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_79::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 8.0;
	height = 16.0;
	mass = 100.0;
	speed = 1050.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 70;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE|MF_UNUSED4;
	spawnstate = S_1027;
	deathstate = S_149;
	sound_sight = GetSoundID("Sound106");
	sound_death = GetSoundID("Sound107");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_80
//
//==========================================================================

class misc_80:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_80::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 8.0;
	height = 16.0;
	mass = 100.0;
	speed = 1050.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 20;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE|MF_UNUSED4;
	spawnstate = S_1027;
	deathstate = S_149;
	sound_sight = GetSoundID("Sound106");
	sound_death = GetSoundID("Sound107");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_81
//
//==========================================================================

class misc_81:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_81::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 8.0;
	height = 16.0;
	mass = 100.0;
	speed = 1050.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 10;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE|MF_UNUSED4;
	spawnstate = S_1024;
	deathstate = S_149;
	sound_sight = GetSoundID("Sound106");
	sound_death = GetSoundID("Sound107");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_82
//
//==========================================================================

class misc_82:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_82::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF;
	spawnstate = S_1032;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_83
//
//==========================================================================

class misc_83:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_83::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 40.0;
	mass = 100.0;
	speed = 630.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 130;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE|MF_UNUSED4;
	spawnstate = S_1035;
	deathstate = S_149;
	sound_sight = GetSoundID("Sound106");
	sound_death = GetSoundID("Sound107");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_84
//
//==========================================================================

class misc_84:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_84::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 40.0;
	mass = 100.0;
	speed = 630.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 30;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE|MF_UNUSED4;
	spawnstate = S_1035;
	deathstate = S_149;
	sound_sight = GetSoundID("Sound106");
	sound_death = GetSoundID("Sound107");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_85
//
//==========================================================================

class misc_85:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_85::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 8.0;
	height = 24.0;
	mass = 100.0;
	speed = 770.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 100;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE|MF_UNUSED4;
	spawnstate = S_1040;
	deathstate = S_153;
	sound_sight = GetSoundID("Sound106");
	sound_death = GetSoundID("Sound107");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_86
//
//==========================================================================

class misc_86:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_86::OnMapSpawn(mthing_t *mthing)
{
	translucency = 66;
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	speed = 630.0;
	if (gameskill != sk_nightmare)
		reactiontime = 90;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1045;
	deathstate = S_148;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_87
//
//==========================================================================

class misc_87:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_87::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 8.0;
	height = 16.0;
	mass = 100.0;
	speed = 980.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 120;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE|MF_UNUSED4;
	spawnstate = S_1049;
	deathstate = S_148;
	sound_sight = GetSoundID("Sound106");
	sound_death = GetSoundID("Sound107");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_88
//
//==========================================================================

class misc_88:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_88::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 8.0;
	height = 16.0;
	mass = 100.0;
	speed = 980.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 60;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE|MF_UNUSED4;
	spawnstate = S_1049;
	deathstate = S_148;
	sound_sight = GetSoundID("Sound106");
	sound_death = GetSoundID("Sound107");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_89
//
//==========================================================================

class misc_89:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_89::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	health = 100;
	spawnhealth = health;
	radius = 23.0;
	height = 53.0;
	mass = 300.0;
	speed = 245.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 255;
	flags = MF_SOLID|MF_SHOOTABLE|MF_SPAWNCEILING|MF_NOGRAVITY|MF_PICKUP|MF_FLOAT|MF_TELEPORT|MF_NOBLOOD|MF_COUNTKILL;
	spawnstate = S_1054;
	seestate = S_1055;
	missilestate = S_1056;
	painstate = S_1059;
	deathstate = S_1060;
	sound_sight = GetSoundID("Sound78");
	sound_active = GetSoundID("Sound80");
	sound_death = GetSoundID("Sound79");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_90
//
//==========================================================================

class misc_90:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_90::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	health = 80;
	spawnhealth = health;
	radius = 31.0;
	height = 25.0;
	mass = 100.0;
	speed = 560.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 40;
	flags = MF_SOLID|MF_SHOOTABLE|MF_SPAWNCEILING|MF_NOGRAVITY|MF_DROPOFF|MF_TELEPORT|MF_NOBLOOD|MF_COUNTKILL;
	spawnstate = S_1067;
	seestate = S_1070;
	meleestate = S_1076;
	painstate = S_1091;
	deathstate = S_1092;
	sound_sight = GetSoundID("Sound95");
	sound_active = GetSoundID("Sound95");
	sound_attack = GetSoundID("Sound98");
	sound_pain = GetSoundID("Sound98");
	sound_death = GetSoundID("Sound97");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_91
//
//==========================================================================

class misc_91:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_91::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	health = 1000;
	spawnhealth = health;
	radius = 40.0;
	height = 110.0;
	mass = 1000.0;
	speed = 420.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SHOOTABLE|MF_DROPOFF|MF_NOBLOOD|MF_COUNTKILL;
	spawnstate = S_1105;
	seestate = S_1107;
	missilestate = S_1115;
	deathstate = S_1125;
	sound_sight = GetSoundID("Sound116");
	sound_active = GetSoundID("Sound115");
	sound_death = GetSoundID("Sound114");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_92
//
//==========================================================================

class misc_92:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_92::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	health = 1100;
	spawnhealth = health;
	radius = 45.0;
	height = 60.0;
	mass = 800.0;
	speed = 910.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 64;
	damage = 4;
	flags = MF_SOLID|MF_SHOOTABLE|MF_NOGRAVITY|MF_PICKUP|MF_FLOAT|MF_NOBLOOD|MF_COUNTKILL;
	spawnstate = S_1146;
	seestate = S_1148;
	meleestate = S_1156;
	missilestate = S_1160;
	painstate = S_1164;
	deathstate = S_1166;
	sound_active = GetSoundID("Sound110");
	sound_attack = GetSoundID("Sound90");
	sound_pain = GetSoundID("Sound109");
	sound_death = GetSoundID("Sound65");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_93
//
//==========================================================================

class misc_93:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_93::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOBLOOD;
	spawnstate = S_1180;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_94
//
//==========================================================================

class misc_94:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_94::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 10.0;
	height = 14.0;
	mass = 100.0;
	speed = 700.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 2;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_240;
	deathstate = S_241;
	sound_sight = GetSoundID("Sound101");
	sound_active = GetSoundID("Sound1");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_95
//
//==========================================================================

class misc_95:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_95::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
	spawnstate = S_242;
	sound_sight = GetSoundID("Sound102");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_96
//
//==========================================================================

class misc_96:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_96::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 10.0;
	height = 14.0;
	mass = 100.0;
	speed = 700.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 10;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_243;
	deathstate = S_262;
	sound_sight = GetSoundID("Sound71");
	sound_death = GetSoundID("Sound6");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_97
//
//==========================================================================

class misc_97:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_97::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 10.0;
	height = 14.0;
	mass = 100.0;
	speed = 700.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 7;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_243;
	deathstate = S_261;
	sound_sight = GetSoundID("Sound71");
	sound_death = GetSoundID("Sound6");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_98
//
//==========================================================================

class misc_98:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_98::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 10.0;
	height = 14.0;
	mass = 100.0;
	speed = 700.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 10;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_244;
	deathstate = S_262;
	sound_sight = GetSoundID("Sound71");
	sound_death = GetSoundID("Sound6");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_99
//
//==========================================================================

class misc_99:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_99::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 10.0;
	height = 10.0;
	mass = 100.0;
	speed = 1050.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 10;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_246;
	deathstate = S_148;
	sound_sight = GetSoundID("Sound1");
	sound_active = GetSoundID("Sound1");
	sound_death = GetSoundID("Sound68");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_100
//
//==========================================================================

class misc_100:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_100::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 10.0;
	height = 10.0;
	mass = 100.0;
	speed = 1050.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 500;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_247;
	deathstate = S_248;
	sound_sight = GetSoundID("Sound1");
	sound_active = GetSoundID("Sound1");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_101
//
//==========================================================================

class misc_101:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_101::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 10.0;
	height = 8.0;
	mass = 100.0;
	speed = 1400.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_173;
	deathstate = S_135;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_102
//
//==========================================================================

class misc_102:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_102::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 10.0;
	height = 8.0;
	mass = 100.0;
	speed = 1400.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 1;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_173;
	deathstate = S_131;
	sound_sight = GetSoundID("Sound88");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_103
//
//==========================================================================

class misc_103:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_103::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 13.0;
	height = 13.0;
	mass = 20.0;
	speed = 525.0;
	if (gameskill != sk_nightmare)
		reactiontime = 30;
	damage = 1;
	flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_179;
	deathstate = S_194;
	sound_sight = GetSoundID("Sound103");
	sound_death = GetSoundID("Sound104");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_104
//
//==========================================================================

class misc_104:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_104::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 13.0;
	height = 13.0;
	mass = 20.0;
	speed = 525.0;
	if (gameskill != sk_nightmare)
		reactiontime = 40;
	damage = 1;
	flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_177;
	deathstate = S_216;
	sound_sight = GetSoundID("Sound103");
	sound_death = GetSoundID("Sound104");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_105
//
//==========================================================================

class misc_105:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_105::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 13.0;
	height = 13.0;
	mass = 20.0;
	speed = 525.0;
	if (gameskill != sk_nightmare)
		reactiontime = 40;
	damage = 1;
	flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_181;
	deathstate = S_230;
	sound_sight = GetSoundID("Sound103");
	sound_death = GetSoundID("Sound104");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_106
//
//==========================================================================

class misc_106:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_106::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 13.0;
	height = 13.0;
	mass = 15.0;
	speed = 875.0;
	if (gameskill != sk_nightmare)
		reactiontime = 15;
	flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_183;
	deathstate = S_185;
	sound_sight = GetSoundID("Sound103");
	sound_death = GetSoundID("Sound104");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_107
//
//==========================================================================

class misc_107:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_107::OnMapSpawn(mthing_t *mthing)
{
	translucency = 66;
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 80;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_TRANSLATION2;
	spawnstate = S_231;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_108
//
//==========================================================================

class misc_108:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_108::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 120;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_217;
	deathstate = S_226;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_109
//
//==========================================================================

class misc_109:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_109::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 13.0;
	height = 8.0;
	mass = 100.0;
	speed = 700.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 1;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_249;
	deathstate = S_253;
	sound_sight = GetSoundID("Sound87");
	sound_death = GetSoundID("Sound104");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_110
//
//==========================================================================

class misc_110:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_110::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 13.0;
	height = 13.0;
	mass = 100.0;
	speed = 1225.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 10;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_258;
	deathstate = S_260;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_111
//
//==========================================================================

class misc_111:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_111::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 8.0;
	height = 11.0;
	mass = 10.0;
	speed = 525.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 3;
	flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_1188;
	deathstate = S_1190;
	sound_sight = GetSoundID("Sound7");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_112
//
//==========================================================================

class misc_112:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_112::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 8.0;
	height = 11.0;
	mass = 50.0;
	speed = 1225.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	damage = 1;
	flags = MF_NOBLOCKMAP|MF_DROPOFF|MF_MISSILE;
	spawnstate = S_1188;
	deathstate = S_1190;
	sound_sight = GetSoundID("Sound7");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_113
//
//==========================================================================

class misc_113:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_113::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
	spawnstate = S_175;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_114
//
//==========================================================================

class misc_114:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_114::OnMapSpawn(mthing_t *mthing)
{
	translucency = 66;
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
	spawnstate = S_PUFF1;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_115
//
//==========================================================================

class misc_115:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_115::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
	spawnstate = S_140;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_116
//
//==========================================================================

class misc_116:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_116::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_159;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_teleport_fog
//
//==========================================================================

class misc_teleport_fog:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_teleport_fog::OnMapSpawn(mthing_t *mthing)
{
	translucency = 66;
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
	spawnstate = S_TFOG1;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_item_respawn_fog
//
//==========================================================================

class misc_item_respawn_fog:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_item_respawn_fog::OnMapSpawn(mthing_t *mthing)
{
	translucency = 66;
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOGRAVITY;
	spawnstate = S_IFOG1;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_teleport_spot
//
//==========================================================================

class misc_teleport_spot:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_teleport_spot::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOSECTOR|MF_NOBLOCKMAP;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_120
//
//==========================================================================

class misc_120:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_120::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 60;
	flags = MF_NOBLOCKMAP|MF_AMBUSH|MF_SPAWNCEILING|MF_NOGRAVITY;
	spawnstate = S_1196;
	seestate = S_1197;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_121
//
//==========================================================================

class misc_121:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_121::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	health = 125;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 10000000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SHOOTABLE|MF_AMBUSH|MF_SPAWNCEILING|MF_NOGRAVITY|MF_NOBLOOD|MF_COUNTKILL;
	spawnstate = S_1199;
	seestate = S_1200;
	missilestate = S_1201;
	painstate = S_1201;
	deathstate = S_1204;
	sound_death = GetSoundID("Sound6");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_122
//
//==========================================================================

class misc_122:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_122::OnMapSpawn(mthing_t *mthing)
{
	health = 100;
	spawnhealth = health;
	radius = 20.0;
	height = 76.0;
	mass = 10000000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SHOOTABLE|MF_TELEPORT|MF_NOBLOOD;
	spawnstate = S_1210;
	deathstate = S_1212;
	sound_death = GetSoundID("Sound104");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_123
//
//==========================================================================

class misc_123:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_123::OnMapSpawn(mthing_t *mthing)
{
	health = 80;
	spawnhealth = health;
	radius = 26.0;
	height = 128.0;
	mass = 100000.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SHOOTABLE|MF_TELEPORT|MF_NOBLOOD;
	spawnstate = S_1221;
	deathstate = S_1225;
	sound_death = GetSoundID("Sound104");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_124
//
//==========================================================================

class misc_124:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_124::OnMapSpawn(mthing_t *mthing)
{
	classname = "Med_patch";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 20.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1429;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_125
//
//==========================================================================

class misc_125:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_125::OnMapSpawn(mthing_t *mthing)
{
	classname = "Medical_kit";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 15.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1430;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_126
//
//==========================================================================

class misc_126:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_126::OnMapSpawn(mthing_t *mthing)
{
	classname = "full_health";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 5.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1298;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_127
//
//==========================================================================

class misc_127:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_127::OnMapSpawn(mthing_t *mthing)
{
	classname = "Thalite_Ore";
	health = 10;
	spawnhealth = health;
	radius = 16.0;
	height = 16.0;
	mass = 4.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL|MF_SOLID|MF_SHOOTABLE|MF_TELEPORT|MF_NOBLOOD;
	spawnstate = S_1239;
	deathstate = S_1240;
	sound_death = GetSoundID("Sound104");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_128
//
//==========================================================================

class misc_128:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_128::OnMapSpawn(mthing_t *mthing)
{
	classname = "Metal_Armor";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 3.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1348;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_129
//
//==========================================================================

class misc_129:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_129::OnMapSpawn(mthing_t *mthing)
{
	classname = "Leather_Armor";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 5.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1349;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_130
//
//==========================================================================

class misc_130:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_130::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_1401;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_131
//
//==========================================================================

class misc_131:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_131::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_1402;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_132
//
//==========================================================================

class misc_132:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_132::OnMapSpawn(mthing_t *mthing)
{
	classname = "Base_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_133
//
//==========================================================================

class misc_133:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_133::OnMapSpawn(mthing_t *mthing)
{
	classname = "Rebel_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_134
//
//==========================================================================

class misc_134:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_134::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Passcard";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1405;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_135
//
//==========================================================================

class misc_135:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_135::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "ID_Badge";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1403;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_136
//
//==========================================================================

class misc_136:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_136::OnMapSpawn(mthing_t *mthing)
{
	classname = "Prison_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1416;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_137
//
//==========================================================================

class misc_137:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_137::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Severed_Hand";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1409;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_138
//
//==========================================================================

class misc_138:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_138::OnMapSpawn(mthing_t *mthing)
{
	classname = "Power1_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1417;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_139
//
//==========================================================================

class misc_139:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_139::OnMapSpawn(mthing_t *mthing)
{
	classname = "Power2_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1418;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_140
//
//==========================================================================

class misc_140:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_140::OnMapSpawn(mthing_t *mthing)
{
	classname = "Power3_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1419;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_141
//
//==========================================================================

class misc_141:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_141::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Gold_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1406;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_142
//
//==========================================================================

class misc_142:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_142::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "ID_Card";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1404;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_143
//
//==========================================================================

class misc_143:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_143::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Silver_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1407;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_144
//
//==========================================================================

class misc_144:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_144::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Oracle_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1420;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_145
//
//==========================================================================

class misc_145:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_145::OnMapSpawn(mthing_t *mthing)
{
	classname = "Military_ID";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1421;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_146
//
//==========================================================================

class misc_146:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_146::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Order_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1422;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_147
//
//==========================================================================

class misc_147:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_147::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Warehouse_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1423;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_148
//
//==========================================================================

class misc_148:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_148::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Brass_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1408;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_149
//
//==========================================================================

class misc_149:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_149::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Red_Crystal_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1424;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_150
//
//==========================================================================

class misc_150:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_150::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Blue_Crystal_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1425;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_151
//
//==========================================================================

class misc_151:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_151::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Chapel_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1426;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_152
//
//==========================================================================

class misc_152:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_152::OnMapSpawn(mthing_t *mthing)
{
	classname = "Tunnel_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1427;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_153
//
//==========================================================================

class misc_153:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_153::OnMapSpawn(mthing_t *mthing)
{
	classname = "Security_Key";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1428;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_154
//
//==========================================================================

class misc_154:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_154::OnMapSpawn(mthing_t *mthing)
{
	classname = "New_Key1";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1428;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_155
//
//==========================================================================

class misc_155:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_155::OnMapSpawn(mthing_t *mthing)
{
	classname = "New_Key2";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1428;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_156
//
//==========================================================================

class misc_156:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_156::OnMapSpawn(mthing_t *mthing)
{
	classname = "New_Key3";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1428;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_157
//
//==========================================================================

class misc_157:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_157::OnMapSpawn(mthing_t *mthing)
{
	classname = "New_Key4";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1428;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_158
//
//==========================================================================

class misc_158:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_158::OnMapSpawn(mthing_t *mthing)
{
	classname = "New_Key5";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1428;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_159
//
//==========================================================================

class misc_159:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_159::OnMapSpawn(mthing_t *mthing)
{
	classname = "Shadow_armor";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 2.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1435;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_160
//
//==========================================================================

class misc_160:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_160::OnMapSpawn(mthing_t *mthing)
{
	classname = "Environmental_Suit";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 5.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1439;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_161
//
//==========================================================================

class misc_161:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_161::OnMapSpawn(mthing_t *mthing)
{
	classname = "Guard_Uniform";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1440;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_162
//
//==========================================================================

class misc_162:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_162::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Officer's_Uniform";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1441;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_163
//
//==========================================================================

class misc_163:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_163::OnMapSpawn(mthing_t *mthing)
{
	classname = "Map";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1442;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_164
//
//==========================================================================

class misc_164:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_164::OnMapSpawn(mthing_t *mthing)
{
	classname = "Map-Radar";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1444;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_165
//
//==========================================================================

class misc_165:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_165::OnMapSpawn(mthing_t *mthing)
{
	classname = "coin";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 99999.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL|MF_DROPPED;
	spawnstate = S_1431;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_166
//
//==========================================================================

class misc_166:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_166::OnMapSpawn(mthing_t *mthing)
{
	classname = "10_gold";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL|MF_DROPPED;
	spawnstate = S_1432;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_167
//
//==========================================================================

class misc_167:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_167::OnMapSpawn(mthing_t *mthing)
{
	classname = "25_gold";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL|MF_DROPPED;
	spawnstate = S_1433;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_168
//
//==========================================================================

class misc_168:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_168::OnMapSpawn(mthing_t *mthing)
{
	classname = "50_gold";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL|MF_DROPPED;
	spawnstate = S_1434;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_169
//
//==========================================================================

class misc_169:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_169::OnMapSpawn(mthing_t *mthing)
{
	classname = "ring";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1241;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_170
//
//==========================================================================

class misc_170:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_170::OnMapSpawn(mthing_t *mthing)
{
	classname = "Offering_Chalice";
	health = 1000;
	spawnhealth = health;
	radius = 10.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL|MF_DROPPED;
	spawnstate = S_1460;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_171
//
//==========================================================================

class misc_171:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_171::OnMapSpawn(mthing_t *mthing)
{
	classname = "ear";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1242;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_172
//
//==========================================================================

class misc_172:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_172::OnMapSpawn(mthing_t *mthing)
{
	if (deathmatch)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "Communicator";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1243;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_173
//
//==========================================================================

class misc_173:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_173::OnMapSpawn(mthing_t *mthing)
{
	classname = "Targeter";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1244;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_174
//
//==========================================================================

class misc_174:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_174::OnMapSpawn(mthing_t *mthing)
{
	classname = "HE-Grenade_Rounds";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1456;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_175
//
//==========================================================================

class misc_175:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_175::OnMapSpawn(mthing_t *mthing)
{
	classname = "Fire-Grenade_Rounds";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1457;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_176
//
//==========================================================================

class misc_176:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_176::OnMapSpawn(mthing_t *mthing)
{
	classname = "Gas-Grenade_Rounds";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1458;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_177
//
//==========================================================================

class misc_177:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_177::OnMapSpawn(mthing_t *mthing)
{
	classname = "bullets";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1446;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_178
//
//==========================================================================

class misc_178:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_178::OnMapSpawn(mthing_t *mthing)
{
	classname = "ammo";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1447;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_179
//
//==========================================================================

class misc_179:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_179::OnMapSpawn(mthing_t *mthing)
{
	classname = "rocket";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1448;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_180
//
//==========================================================================

class misc_180:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_180::OnMapSpawn(mthing_t *mthing)
{
	classname = "box_of_rockets";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1449;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_181
//
//==========================================================================

class misc_181:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_181::OnMapSpawn(mthing_t *mthing)
{
	classname = "energy_pod";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1450;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_182
//
//==========================================================================

class misc_182:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_182::OnMapSpawn(mthing_t *mthing)
{
	classname = "energy_pack";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1452;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_183
//
//==========================================================================

class misc_183:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_183::OnMapSpawn(mthing_t *mthing)
{
	classname = "poison_arrows";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1454;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_184
//
//==========================================================================

class misc_184:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_184::OnMapSpawn(mthing_t *mthing)
{
	classname = "electric_arrows";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1455;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_185
//
//==========================================================================

class misc_185:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_185::OnMapSpawn(mthing_t *mthing)
{
	classname = "Back_pack";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1459;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_186
//
//==========================================================================

class misc_186:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_186::OnMapSpawn(mthing_t *mthing)
{
	classname = "assault_gun";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1461;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_187
//
//==========================================================================

class misc_187:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_187::OnMapSpawn(mthing_t *mthing)
{
	classname = "pulse_rifle";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1462;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_188
//
//==========================================================================

class misc_188:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_188::OnMapSpawn(mthing_t *mthing)
{
	classname = "flame_thrower";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1463;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_189
//
//==========================================================================

class misc_189:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_189::OnMapSpawn(mthing_t *mthing)
{
	classname = "flame_thrower_Parts";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1464;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_190
//
//==========================================================================

class misc_190:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_190::OnMapSpawn(mthing_t *mthing)
{
	classname = "missile_gun";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1465;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_191
//
//==========================================================================

class misc_191:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_191::OnMapSpawn(mthing_t *mthing)
{
	classname = "blaster";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1466;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_192
//
//==========================================================================

class misc_192:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_192::OnMapSpawn(mthing_t *mthing)
{
	classname = "crossbow";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1468;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_193
//
//==========================================================================

class misc_193:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_193::OnMapSpawn(mthing_t *mthing)
{
	classname = "Grenade_launcher";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1467;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_194
//
//==========================================================================

class misc_194:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_194::OnMapSpawn(mthing_t *mthing)
{
	classname = "SIGIL";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1469;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_195
//
//==========================================================================

class misc_195:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_195::OnMapSpawn(mthing_t *mthing)
{
	classname = "SIGIL";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1470;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_196
//
//==========================================================================

class misc_196:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_196::OnMapSpawn(mthing_t *mthing)
{
	classname = "SIGIL";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1471;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_197
//
//==========================================================================

class misc_197:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_197::OnMapSpawn(mthing_t *mthing)
{
	classname = "SIGIL";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1472;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_198
//
//==========================================================================

class misc_198:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_198::OnMapSpawn(mthing_t *mthing)
{
	classname = "SIGIL";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1473;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_199
//
//==========================================================================

class misc_199:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_199::OnMapSpawn(mthing_t *mthing)
{
	health = 50;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SHOOTABLE|MF_NOBLOOD;
	spawnstate = S_1410;
	deathstate = S_1245;
	sound_active = GetSoundID("Sound130");
	sound_death = GetSoundID("Sound104");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_200
//
//==========================================================================

class misc_200:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_200::OnMapSpawn(mthing_t *mthing)
{
	if (nomonsters)
	{
		RemoveMobjThinker(this);
		return;
	}
	classname = "rat_buddy";
	health = 5;
	spawnhealth = health;
	radius = 10.0;
	height = 16.0;
	mass = 100.0;
	speed = 455.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SHOOTABLE|MF_NOBLOOD|MF_COUNTKILL;
	spawnstate = S_1270;
	seestate = S_1271;
	meleestate = S_1275;
	deathstate = S_1316;
	sound_sight = GetSoundID("Sound55");
	sound_active = GetSoundID("Sound55");
	sound_death = GetSoundID("Sound55");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_201
//
//==========================================================================

class misc_201:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_201::OnMapSpawn(mthing_t *mthing)
{
	health = 10;
	spawnhealth = health;
	radius = 10.0;
	height = 32.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SHOOTABLE|MF_TELEPORT|MF_NOBLOOD;
	spawnstate = S_1350;
	deathstate = S_1351;
	sound_death = GetSoundID("Sound60");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_202
//
//==========================================================================

class misc_202:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_202::OnMapSpawn(mthing_t *mthing)
{
	health = 30;
	spawnhealth = health;
	radius = 10.0;
	height = 32.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SHOOTABLE|MF_TELEPORT|MF_NOBLOOD;
	spawnstate = S_1358;
	deathstate = S_1359;
	sound_death = GetSoundID("Sound105");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_203
//
//==========================================================================

class misc_203:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_203::OnMapSpawn(mthing_t *mthing)
{
	health = 99999999;
	spawnhealth = health;
	radius = 10.0;
	height = 72.0;
	mass = 9999999.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	painchance = 255;
	flags = MF_SOLID|MF_SHOOTABLE|MF_TELEPORT|MF_NOBLOOD;
	spawnstate = S_1277;
	painstate = S_1278;
	sound_pain = GetSoundID("Sound3");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_204
//
//==========================================================================

class misc_204:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_204::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 4.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1477;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_205
//
//==========================================================================

class misc_205:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_205::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 4.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1478;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_206
//
//==========================================================================

class misc_206:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_206::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 4.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1479;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_207
//
//==========================================================================

class misc_207:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_207::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1474;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_208
//
//==========================================================================

class misc_208:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_208::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 128.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1551;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_209
//
//==========================================================================

class misc_209:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_209::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 128.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1552;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_210
//
//==========================================================================

class misc_210:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_210::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 80.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1553;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_211
//
//==========================================================================

class misc_211:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_211::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 40.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1554;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_212
//
//==========================================================================

class misc_212:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_212::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 24.0;
	height = 192.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1555;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_213
//
//==========================================================================

class misc_213:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_213::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 24.0;
	height = 192.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1518;
	sound_active = GetSoundID("Sound119");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_214
//
//==========================================================================

class misc_214:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_214::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 54.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
	spawnstate = S_1561;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_215
//
//==========================================================================

class misc_215:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_215::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 40.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
	spawnstate = S_1559;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_216
//
//==========================================================================

class misc_216:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_216::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 40.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1560;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_217
//
//==========================================================================

class misc_217:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_217::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 128.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
	spawnstate = S_1562;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_218
//
//==========================================================================

class misc_218:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_218::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 128.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1563;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_219
//
//==========================================================================

class misc_219:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_219::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 25.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1564;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_220
//
//==========================================================================

class misc_220:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_220::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_1475;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_221
//
//==========================================================================

class misc_221:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_221::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 40.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1476;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_222
//
//==========================================================================

class misc_222:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_222::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1520;
	sound_active = GetSoundID("Sound45");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_223
//
//==========================================================================

class misc_223:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_223::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1532;
	sound_active = GetSoundID("Sound44");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_224
//
//==========================================================================

class misc_224:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_224::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 1.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_SPAWNCEILING|MF_NOGRAVITY;
	spawnstate = S_1528;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_225
//
//==========================================================================

class misc_225:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_225::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1540;
	sound_active = GetSoundID("Sound46");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_226
//
//==========================================================================

class misc_226:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_226::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 56.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1544;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_227
//
//==========================================================================

class misc_227:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_227::OnMapSpawn(mthing_t *mthing)
{
	translucency = 66;
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1547;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_228
//
//==========================================================================

class misc_228:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_228::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_673;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_229
//
//==========================================================================

class misc_229:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_229::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_PLAY_DIE10;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_230
//
//==========================================================================

class misc_230:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_230::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_409;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_231
//
//==========================================================================

class misc_231:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_231::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_632;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_232
//
//==========================================================================

class misc_232:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_232::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_594;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_233
//
//==========================================================================

class misc_233:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_233::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_512;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_234
//
//==========================================================================

class misc_234:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_234::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_425;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_235
//
//==========================================================================

class misc_235:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_235::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_1280;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_236
//
//==========================================================================

class misc_236:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_236::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 32.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1372;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_237
//
//==========================================================================

class misc_237:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_237::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1376;
	sound_active = GetSoundID("Sound23");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_238
//
//==========================================================================

class misc_238:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_238::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 10.0;
	height = 32.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1380;
	sound_active = GetSoundID("Sound23");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_239
//
//==========================================================================

class misc_239:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_239::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 0.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1384;
	sound_active = GetSoundID("Sound23");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_240
//
//==========================================================================

class misc_240:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_240::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 0.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1400;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_241
//
//==========================================================================

class misc_241:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_241::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 93.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_SPAWNCEILING|MF_NOGRAVITY;
	spawnstate = S_1496;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_242
//
//==========================================================================

class misc_242:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_242::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 3.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_SPAWNCEILING|MF_NOGRAVITY;
	spawnstate = S_1500;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_243
//
//==========================================================================

class misc_243:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_243::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 64.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1497;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_244
//
//==========================================================================

class misc_244:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_244::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 56.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1498;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_245
//
//==========================================================================

class misc_245:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_245::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 4.0;
	height = 72.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1388;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_246
//
//==========================================================================

class misc_246:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_246::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 3.0;
	height = 80.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1370;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_247
//
//==========================================================================

class misc_247:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_247::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 3.0;
	height = 80.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1371;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_248
//
//==========================================================================

class misc_248:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_248::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1480;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_249
//
//==========================================================================

class misc_249:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_249::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1481;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_250
//
//==========================================================================

class misc_250:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_250::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1482;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_251
//
//==========================================================================

class misc_251:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_251::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1483;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_252
//
//==========================================================================

class misc_252:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_252::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1484;
	sound_active = GetSoundID("Sound43");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_253
//
//==========================================================================

class misc_253:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_253::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOCLIP;
	spawnstate = S_1488;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_254
//
//==========================================================================

class misc_254:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_254::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOCLIP;
	spawnstate = S_1489;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_255
//
//==========================================================================

class misc_255:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_255::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOCLIP;
	spawnstate = S_1490;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_256
//
//==========================================================================

class misc_256:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_256::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOCLIP;
	spawnstate = S_1491;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_257
//
//==========================================================================

class misc_257:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_257::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOCLIP;
	spawnstate = S_1492;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_258
//
//==========================================================================

class misc_258:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_258::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOCLIP;
	spawnstate = S_1493;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_259
//
//==========================================================================

class misc_259:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_259::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOCLIP;
	spawnstate = S_1494;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_260
//
//==========================================================================

class misc_260:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_260::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOCLIP;
	spawnstate = S_1495;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_261
//
//==========================================================================

class misc_261:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_261::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
	spawnstate = S_1499;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_262
//
//==========================================================================

class misc_262:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_262::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 10.0;
	height = 72.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1392;
	sound_active = GetSoundID("Sound23");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_263
//
//==========================================================================

class misc_263:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_263::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 10.0;
	height = 80.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1396;
	sound_active = GetSoundID("Sound23");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_264
//
//==========================================================================

class misc_264:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_264::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 15.0;
	height = 109.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1501;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_265
//
//==========================================================================

class misc_265:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_265::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 15.0;
	height = 109.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1502;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_266
//
//==========================================================================

class misc_266:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_266::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 15.0;
	height = 64.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1503;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_267
//
//==========================================================================

class misc_267:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_267::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 15.0;
	height = 80.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1504;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_268
//
//==========================================================================

class misc_268:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_268::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 15.0;
	height = 40.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1505;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_269
//
//==========================================================================

class misc_269:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_269::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 64.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1506;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_270
//
//==========================================================================

class misc_270:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_270::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 64.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1507;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_271
//
//==========================================================================

class misc_271:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_271::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 128.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1508;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_272
//
//==========================================================================

class misc_272:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_272::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 12.0;
	height = 24.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1509;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_273
//
//==========================================================================

class misc_273:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_273::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 12.0;
	height = 32.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1510;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_274
//
//==========================================================================

class misc_274:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_274::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 6.0;
	height = 24.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1511;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_275
//
//==========================================================================

class misc_275:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_275::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1512;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_276
//
//==========================================================================

class misc_276:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_276::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1513;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_277
//
//==========================================================================

class misc_277:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_277::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 32.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1514;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_278
//
//==========================================================================

class misc_278:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_278::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 11.0;
	height = 64.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1515;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_279
//
//==========================================================================

class misc_279:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_279::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 8.0;
	height = 64.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1516;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_280
//
//==========================================================================

class misc_280:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_280::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 24.0;
	height = 40.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1517;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_281
//
//==========================================================================

class misc_281:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_281::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 12.0;
	height = 24.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1519;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_282
//
//==========================================================================

class misc_282:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_282::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 24.0;
	height = 96.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1281;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_283
//
//==========================================================================

class misc_283:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_283::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1282;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_284
//
//==========================================================================

class misc_284:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_284::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1283;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_285
//
//==========================================================================

class misc_285:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_285::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP;
	spawnstate = S_1284;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_286
//
//==========================================================================

class misc_286:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_286::OnMapSpawn(mthing_t *mthing)
{
	health = 40;
	spawnhealth = health;
	radius = 16.0;
	height = 24.0;
	mass = 999999.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SHOOTABLE|MF_TELEPORT|MF_DROPPED|MF_NOBLOOD;
	spawnstate = S_1285;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_287
//
//==========================================================================

class misc_287:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_287::OnMapSpawn(mthing_t *mthing)
{
	classname = "POWER_COUPLING";
	health = 40;
	spawnhealth = health;
	radius = 16.0;
	height = 16.0;
	mass = 1.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL|MF_DROPPED;
	spawnstate = S_1287;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_288
//
//==========================================================================

class misc_288:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_288::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 128.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1288;
	sound_active = GetSoundID("Sound122");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_289
//
//==========================================================================

class misc_289:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_289::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 72.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1289;
	sound_active = GetSoundID("Sound123");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_290
//
//==========================================================================

class misc_290:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_290::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 72.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID|MF_SPAWNCEILING|MF_NOGRAVITY;
	spawnstate = S_1289;
	sound_active = GetSoundID("Sound121");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_291
//
//==========================================================================

class misc_291:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_291::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 16.0;
	height = 128.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1291;
	sound_active = GetSoundID("Sound120");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_292
//
//==========================================================================

class misc_292:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_292::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 32.0;
	height = 56.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SOLID;
	spawnstate = S_1292;
	sound_active = GetSoundID("Sound118");
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_293
//
//==========================================================================

class misc_293:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_293::OnMapSpawn(mthing_t *mthing)
{
	classname = "Teleportor_Beacon";
	health = 5;
	spawnhealth = health;
	radius = 16.0;
	height = 16.0;
	mass = 3.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL|MF_DROPPED;
	spawnstate = S_1345;
	seestate = S_1346;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_294
//
//==========================================================================

class misc_294:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_294::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOCLIP;
	spawnstate = S_1300;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_295
//
//==========================================================================

class misc_295:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_295::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOCLIP;
	spawnstate = S_1320;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_296
//
//==========================================================================

class misc_296:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_296::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_NOBLOCKMAP|MF_NOCLIP;
	spawnstate = S_1340;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_297
//
//==========================================================================

class misc_297:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_297::OnMapSpawn(mthing_t *mthing)
{
	classname = "Ammo";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_298
//
//==========================================================================

class misc_298:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_298::OnMapSpawn(mthing_t *mthing)
{
	classname = "Health";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_299
//
//==========================================================================

class misc_299:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_299::OnMapSpawn(mthing_t *mthing)
{
	classname = "info";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_300
//
//==========================================================================

class misc_300:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_300::OnMapSpawn(mthing_t *mthing)
{
	classname = "alarm";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_301
//
//==========================================================================

class misc_301:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_301::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_302
//
//==========================================================================

class misc_302:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_302::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_303
//
//==========================================================================

class misc_303:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_303::OnMapSpawn(mthing_t *mthing)
{
	classname = "Prison_pass";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_304
//
//==========================================================================

class misc_304:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_304::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_305
//
//==========================================================================

class misc_305:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_305::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_306
//
//==========================================================================

class misc_306:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_306::OnMapSpawn(mthing_t *mthing)
{
	classname = "report";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_307
//
//==========================================================================

class misc_307:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_307::OnMapSpawn(mthing_t *mthing)
{
	classname = "Toughness";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1296;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_308
//
//==========================================================================

class misc_308:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_308::OnMapSpawn(mthing_t *mthing)
{
	classname = "Accuracy";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1297;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_309
//
//==========================================================================

class misc_309:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_309::OnMapSpawn(mthing_t *mthing)
{
	classname = "Oracle_Pass";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	flags = MF_SPECIAL;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_310
//
//==========================================================================

class misc_310:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_310::OnMapSpawn(mthing_t *mthing)
{
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_311
//
//==========================================================================

class misc_311:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_311::OnMapSpawn(mthing_t *mthing)
{
	classname = "Blown_Up_the_Crystal";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_312
//
//==========================================================================

class misc_312:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_312::OnMapSpawn(mthing_t *mthing)
{
	classname = "Blown_Up_the_Gates";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_313
//
//==========================================================================

class misc_313:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_313::OnMapSpawn(mthing_t *mthing)
{
	classname = "quest4";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_314
//
//==========================================================================

class misc_314:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_314::OnMapSpawn(mthing_t *mthing)
{
	classname = "quest5";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

//==========================================================================
//
//	misc_315
//
//==========================================================================

class misc_315:mobj_t
{
	void OnMapSpawn(mthing_t *);
};

void misc_315::OnMapSpawn(mthing_t *mthing)
{
	classname = "quest6";
	health = 1000;
	spawnhealth = health;
	radius = 20.0;
	height = 16.0;
	mass = 100.0;
	if (gameskill != sk_nightmare)
		reactiontime = 8;
	spawnstate = S_1295;
	generic_mobj_start(this, mthing);
}

__mobjinfo__
{
	MT_0 { 25, misc_0 }
	MT_PLAYER { -1, misc_player }
	MT_MERCHANDER1 { 116, npc_merchander1 }
	MT_MERCHANDER2 { 72, npc_merchander2 }
	MT_MERCHANDER3 { 73, npc_merchander3 }
	MT_MERCHANDER4 { 74, npc_merchander4 }
	MT_6 { 3004, misc_6 }
	MT_7 { 130, misc_7 }
	MT_8 { 131, misc_8 }
	MT_9 { 65, misc_9 }
	MT_10 { 132, misc_10 }
	MT_11 { 133, misc_11 }
	MT_12 { 66, misc_12 }
	MT_13 { 134, misc_13 }
	MT_14 { 135, misc_14 }
	MT_15 { 67, misc_15 }
	MT_16 { 136, misc_16 }
	MT_17 { 137, misc_17 }
	MT_18 { 172, misc_18 }
	MT_19 { 173, misc_19 }
	MT_20 { 174, misc_20 }
	MT_21 { 175, misc_21 }
	MT_22 { 176, misc_22 }
	MT_23 { 177, misc_23 }
	MT_24 { 178, misc_24 }
	MT_25 { 179, misc_25 }
	MT_26 { 180, misc_26 }
	MT_27 { 181, misc_27 }
	MT_28 { 169, misc_28 }
	MT_29 { 201, misc_29 }
	MT_30 { 170, misc_30 }
	MT_31 { 209, misc_31 }
	MT_32 { 210, misc_32 }
	MT_33 { 211, misc_33 }
	MT_34 { 213, misc_34 }
	MT_35 { 214, misc_35 }
	MT_36 { 229, misc_36 }
	MT_37 { 204, misc_37 }
	MT_38 { 141, misc_38 }
	MT_39 { 155, misc_39 }
	MT_40 { 156, misc_40 }
	MT_41 { 157, misc_41 }
	MT_42 { 158, misc_42 }
	MT_43 { 9, misc_43 }
	MT_44 { 144, misc_44 }
	MT_45 { 145, misc_45 }
	MT_46 { 149, misc_46 }
	MT_47 { 150, misc_47 }
	MT_48 { 151, misc_48 }
	MT_49 { 64, misc_49 }
	MT_50 { 200, misc_50 }
	MT_51 { -1, misc_51 }
	MT_52 { 3001, misc_52 }
	MT_53 { 3002, misc_53 }
	MT_54 { 142, misc_54 }
	MT_55 { 143, misc_55 }
	MT_56 { 146, misc_56 }
	MT_57 { 147, misc_57 }
	MT_58 { 148, misc_58 }
	MT_59 { 58, misc_59 }
	MT_60 { 3005, misc_60 }
	MT_61 { 187, misc_61 }
	MT_62 { 3003, misc_62 }
	MT_63 { 199, misc_63 }
	MT_64 { 12, misc_64 }
	MT_65 { 129, misc_65 }
	MT_66 { -1, misc_66 }
	MT_67 { -1, misc_67 }
	MT_68 { -1, misc_68 }
	MT_69 { 75, misc_69 }
	MT_70 { 76, misc_70 }
	MT_71 { 167, misc_71 }
	MT_72 { 168, misc_72 }
	MT_73 { 128, misc_73 }
	MT_74 { -1, misc_74 }
	MT_75 { 26, misc_75 }
	MT_76 { 198, misc_76 }
	MT_77 { -1, misc_77 }
	MT_78 { -1, misc_78 }
	MT_79 { -1, misc_79 }
	MT_80 { -1, misc_80 }
	MT_81 { -1, misc_81 }
	MT_82 { -1, misc_82 }
	MT_83 { -1, misc_83 }
	MT_84 { -1, misc_84 }
	MT_85 { -1, misc_85 }
	MT_86 { -1, misc_86 }
	MT_87 { -1, misc_87 }
	MT_88 { -1, misc_88 }
	MT_89 { 3006, misc_89 }
	MT_90 { 186, misc_90 }
	MT_91 { 16, misc_91 }
	MT_92 { 71, misc_92 }
	MT_93 { -1, misc_93 }
	MT_94 { -1, misc_94 }
	MT_95 { -1, misc_95 }
	MT_96 { -1, misc_96 }
	MT_97 { -1, misc_97 }
	MT_98 { -1, misc_98 }
	MT_99 { -1, misc_99 }
	MT_100 { -1, misc_100 }
	MT_101 { -1, misc_101 }
	MT_102 { -1, misc_102 }
	MT_103 { -1, misc_103 }
	MT_104 { -1, misc_104 }
	MT_105 { -1, misc_105 }
	MT_106 { -1, misc_106 }
	MT_107 { -1, misc_107 }
	MT_108 { -1, misc_108 }
	MT_109 { -1, misc_109 }
	MT_110 { -1, misc_110 }
	MT_111 { -1, misc_111 }
	MT_112 { -1, misc_112 }
	MT_113 { -1, misc_113 }
	MT_PUFF { -1, misc_114 }
	MT_115 { -1, misc_115 }
	MT_116 { -1, misc_116 }
	MT_TFOG { -1, misc_teleport_fog }
	MT_IFOG { -1, misc_item_respawn_fog }
	MT_TELEPORTMAN { 14, misc_teleport_spot }
	MT_120 { 24, misc_120 }
	MT_121 { 27, misc_121 }
	MT_122 { 45, misc_122 }
	MT_123 { 182, misc_123 }
	MT_124 { 2011, misc_124 }
	MT_125 { 2012, misc_125 }
	MT_126 { 83, misc_126 }
	MT_127 { 59, misc_127 }
	MT_128 { 2019, misc_128 }
	MT_129 { 2018, misc_129 }
	MT_130 { 2014, misc_130 }
	MT_131 { 164, misc_131 }
	MT_132 { -1, misc_132 }
	MT_133 { -1, misc_133 }
	MT_134 { 185, misc_134 }
	MT_135 { 184, misc_135 }
	MT_136 { -1, misc_136 }
	MT_137 { 91, misc_137 }
	MT_138 { -1, misc_138 }
	MT_139 { -1, misc_139 }
	MT_140 { -1, misc_140 }
	MT_141 { 40, misc_141 }
	MT_142 { 13, misc_142 }
	MT_143 { 38, misc_143 }
	MT_144 { 61, misc_144 }
	MT_145 { -1, misc_145 }
	MT_146 { 86, misc_146 }
	MT_147 { 166, misc_147 }
	MT_148 { 39, misc_148 }
	MT_149 { 192, misc_149 }
	MT_150 { 193, misc_150 }
	MT_151 { 195, misc_151 }
	MT_152 { -1, misc_152 }
	MT_153 { -1, misc_153 }
	MT_154 { -1, misc_154 }
	MT_155 { -1, misc_155 }
	MT_156 { -1, misc_156 }
	MT_157 { -1, misc_157 }
	MT_158 { -1, misc_158 }
	MT_159 { 2024, misc_159 }
	MT_160 { 2025, misc_160 }
	MT_161 { 90, misc_161 }
	MT_162 { 52, misc_162 }
	MT_163 { 2026, misc_163 }
	MT_164 { 2027, misc_164 }
	MT_165 { 93, misc_165 }
	MT_166 { 138, misc_166 }
	MT_167 { 139, misc_167 }
	MT_168 { 140, misc_168 }
	MT_169 { -1, misc_169 }
	MT_170 { 205, misc_170 }
	MT_171 { -1, misc_171 }
	MT_172 { 206, misc_172 }
	MT_173 { 207, misc_173 }
	MT_174 { 152, misc_174 }
	MT_175 { 153, misc_175 }
	MT_176 { 84, misc_176 }
	MT_177 { 2007, misc_177 }
	MT_178 { 2048, misc_178 }
	MT_179 { 2010, misc_179 }
	MT_180 { 2046, misc_180 }
	MT_181 { 2047, misc_181 }
	MT_182 { 17, misc_182 }
	MT_183 { 115, misc_183 }
	MT_184 { 114, misc_184 }
	MT_185 { 183, misc_185 }
	MT_186 { 2002, misc_186 }
	MT_187 { 2006, misc_187 }
	MT_188 { 2005, misc_188 }
	MT_189 { -1, misc_189 }
	MT_190 { 2003, misc_190 }
	MT_191 { 2004, misc_191 }
	MT_192 { 2001, misc_192 }
	MT_193 { 154, misc_193 }
	MT_194 { 77, misc_194 }
	MT_195 { 78, misc_195 }
	MT_196 { 79, misc_196 }
	MT_197 { 80, misc_197 }
	MT_198 { 81, misc_198 }
	MT_199 { 92, misc_199 }
	MT_200 { 85, misc_200 }
	MT_201 { 82, misc_201 }
	MT_202 { 94, misc_202 }
	MT_203 { 208, misc_203 }
	MT_204 { 95, misc_204 }
	MT_205 { 96, misc_205 }
	MT_206 { 97, misc_206 }
	MT_207 { 2028, misc_207 }
	MT_208 { 48, misc_208 }
	MT_209 { 54, misc_209 }
	MT_210 { 55, misc_210 }
	MT_211 { 56, misc_211 }
	MT_212 { 57, misc_212 }
	MT_213 { 227, misc_213 }
	MT_214 { 98, misc_214 }
	MT_215 { 161, misc_215 }
	MT_216 { 160, misc_216 }
	MT_217 { 159, misc_217 }
	MT_218 { 162, misc_218 }
	MT_219 { 163, misc_219 }
	MT_220 { 34, misc_220 }
	MT_221 { 35, misc_221 }
	MT_222 { 103, misc_222 }
	MT_223 { 104, misc_223 }
	MT_224 { 53, misc_224 }
	MT_225 { 112, misc_225 }
	MT_226 { 113, misc_226 }
	MT_227 { 23, misc_227 }
	MT_228 { 22, misc_228 }
	MT_229 { 15, misc_229 }
	MT_230 { 18, misc_230 }
	MT_231 { 21, misc_231 }
	MT_232 { 20, misc_232 }
	MT_233 { 19, misc_233 }
	MT_234 { 212, misc_234 }
	MT_235 { 54, misc_235 }
	MT_236 { 70, misc_236 }
	MT_237 { 105, misc_237 }
	MT_238 { 106, misc_238 }
	MT_239 { 107, misc_239 }
	MT_240 { 108, misc_240 }
	MT_241 { 109, misc_241 }
	MT_242 { 28, misc_242 }
	MT_243 { 110, misc_243 }
	MT_244 { 44, misc_244 }
	MT_245 { 111, misc_245 }
	MT_246 { 43, misc_246 }
	MT_247 { 46, misc_247 }
	MT_248 { 99, misc_248 }
	MT_249 { 100, misc_249 }
	MT_250 { 101, misc_250 }
	MT_251 { 102, misc_251 }
	MT_252 { 215, misc_252 }
	MT_253 { 29, misc_253 }
	MT_254 { 30, misc_254 }
	MT_255 { 31, misc_255 }
	MT_256 { 32, misc_256 }
	MT_257 { 36, misc_257 }
	MT_258 { 37, misc_258 }
	MT_259 { 41, misc_259 }
	MT_260 { 42, misc_260 }
	MT_261 { 117, misc_261 }
	MT_262 { 47, misc_262 }
	MT_263 { 50, misc_263 }
	MT_264 { 51, misc_264 }
	MT_265 { 202, misc_265 }
	MT_266 { 203, misc_266 }
	MT_267 { 33, misc_267 }
	MT_268 { 60, misc_268 }
	MT_269 { 62, misc_269 }
	MT_270 { 63, misc_270 }
	MT_271 { 69, misc_271 }
	MT_272 { 165, misc_272 }
	MT_273 { 188, misc_273 }
	MT_274 { 189, misc_274 }
	MT_275 { 190, misc_275 }
	MT_276 { 191, misc_276 }
	MT_277 { 194, misc_277 }
	MT_278 { 196, misc_278 }
	MT_279 { 197, misc_279 }
	MT_280 { 68, misc_280 }
	MT_281 { 228, misc_281 }
	MT_282 { 216, misc_282 }
	MT_283 { 217, misc_283 }
	MT_284 { 218, misc_284 }
	MT_285 { 219, misc_285 }
	MT_286 { 220, misc_286 }
	MT_287 { 226, misc_287 }
	MT_288 { 221, misc_288 }
	MT_289 { 222, misc_289 }
	MT_290 { 223, misc_290 }
	MT_291 { 224, misc_291 }
	MT_292 { 225, misc_292 }
	MT_293 { 10, misc_293 }
	MT_294 { -1, misc_294 }
	MT_295 { -1, misc_295 }
	MT_296 { -1, misc_296 }
	MT_297 { -1, misc_297 }
	MT_298 { -1, misc_298 }
	MT_299 { -1, misc_299 }
	MT_300 { -1, misc_300 }
	MT_301 { -1, misc_301 }
	MT_302 { -1, misc_302 }
	MT_303 { -1, misc_303 }
	MT_304 { -1, misc_304 }
	MT_305 { -1, misc_305 }
	MT_306 { -1, misc_306 }
	MT_307 { -1, misc_307 }
	MT_308 { -1, misc_308 }
	MT_309 { -1, misc_309 }
	MT_310 { -1, misc_310 }
	MT_311 { -1, misc_311 }
	MT_312 { -1, misc_312 }
	MT_313 { -1, misc_313 }
	MT_314 { -1, misc_314 }
	MT_315 { -1, misc_315 }
}

//**************************************************************************
//
//	$Log$
//	Revision 1.4  2001/09/27 17:08:20  dj_jl
//	Removed spawn functions, added mobj classes
//
//	Revision 1.3  2001/09/20 16:20:00  dj_jl
//	Start using object-oriented stuff, beautification
//	
//	Revision 1.2  2001/07/27 14:27:53  dj_jl
//	Update with Id-s and Log-s, some fixes
//
//**************************************************************************
