//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

enum
{
	SCROLLEV_Side,
	SCROLLEV_Floor,
	SCROLLEV_Ceiling,
	SCROLLEV_Carry
};

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  SpawnScrollingFloor
//
//==========================================================================

void SpawnScrollingFloor(sector_t* Sector, int XDir, int YDir, int Speed)
{
	Scroller	Scroll;

	Scroll = NewSpecialThinker(Scroller);
	Scroll.InitFloor(Sector, XDir, YDir, Speed);
}

//==========================================================================
//
//  SpawnWallScroller
//
//==========================================================================

void SpawnWallScroller(line_t* Line, int XDir, int YDir)
{
	Scroller	Scroll;

	Scroll = NewSpecialThinker(Scroller);
	Scroll.InitWall(Line, XDir, YDir);
}

//==========================================================================
//
//  SpawnWallOffsetsScroller
//
//==========================================================================

void SpawnWallOffsetsScroller(line_t* Line)
{
	Scroller	Scroll;

	Scroll = NewSpecialThinker(Scroller);
	Scroll.InitWallOffsets(Line);
}

//==========================================================================
//
//  SpawnTextureBothScroller
//
//==========================================================================

void SpawnTextureBothScroller(line_t* Line)
{
	Scroller	Scroll;

	Scroll = NewSpecialThinker(Scroller);
	Scroll.InitTextureBoth(Line);
}

//==========================================================================
//
//  SpawnScrollCeiling
//
//==========================================================================

void SpawnScrollCeiling(line_t* Line)
{
	Scroller	Scroll;
	int			SecNum;

	for (SecNum = FindSectorFromTag(Line->arg1, -1); SecNum >= 0;
		SecNum = FindSectorFromTag(Line->arg1, SecNum))
	{
		Scroll = NewSpecialThinker(Scroller);
		Scroll.InitGen(SCROLLEV_Ceiling, Line, SecNum);
	}
}

//==========================================================================
//
//  SpawnScrollFloor
//
//==========================================================================

void SpawnScrollFloor(line_t* Line)
{
	Scroller	Scroll;
	int			SecNum;

	for (SecNum = FindSectorFromTag(Line->arg1, -1); SecNum >= 0;
		SecNum = FindSectorFromTag(Line->arg1, SecNum))
	{
		if (Line->arg3 != 1)
		{
			//	Scroll the floor texture
			Scroll = NewSpecialThinker(Scroller);
			Scroll.InitGen(SCROLLEV_Floor, Line, SecNum);
		}

		if (Line->arg3 > 0)
		{
			//	Carry objects on the floor
			Scroll = NewSpecialThinker(Scroller);
			Scroll.InitGen(SCROLLEV_Carry, Line, SecNum);
		}
	}
}

//==========================================================================
//
//  SpawnScrollTextureModel
//
//	Scroll wall according to linedef
// (same direction and speed as scrolling floors)
//
//==========================================================================

void SpawnScrollTextureModel(line_t* Line)
{
	Scroller	Scroll;
	int			Searcher;
	line_t*		Other;

	Searcher = -1;
	for (Other = P_FindLine(Line->arg1, &Searcher); Other;
		Other = P_FindLine(Line->arg1, &Searcher))
	{
		if (Line != Other)
		{
			Scroll = NewSpecialThinker(Scroller);
			Scroll.InitTextureModel(Other, Line);
		}
	}
}

//**************************************************************************
//
//  $Log$
//  Revision 1.4  2005/03/28 07:45:29  dj_jl
//  Some Boom line specials, fixed multiple bugs.
//
//  Revision 1.3  2005/03/16 15:04:43  dj_jl
//  More work on line specials.
//
//  Revision 1.2  2005/03/01 14:39:33  dj_jl
//  Big update of line specials.
//
//  Revision 1.1  2004/11/22 07:36:29  dj_jl
//  Implemented all sector specials in all games.
//
//**************************************************************************
