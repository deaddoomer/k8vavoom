//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  Cheat_God
//
//==========================================================================

void Cheat_God(void)
{
	players[0].Cheats ^= CF_GODMODE;
	if (players[0].Cheats & CF_GODMODE)
	{
		if (players[0].MO)
			players[0].MO.Health = GOD_HEALTH;
		players[0].Health = GOD_HEALTH;
		cprint(&players[0], "Degreelessness Mode On");
	}
	else
		cprint(&players[0], "Degreelessness Mode Off");
}

//==========================================================================
//
//  Cheat_NoClip
//
//==========================================================================

void Cheat_NoClip(void)
{
	players[0].Cheats ^= CF_NOCLIP;

	if (players[0].Cheats & CF_NOCLIP)
		cprint(&players[0], "No Clipping Mode ON");
	else
		cprint(&players[0], "No Clipping Mode OFF");
}

//==========================================================================
//
//  Cheat_Gimme
//
//==========================================================================

void Cheat_Gimme(void)
{
	int i;

	// Weapons
	if (Cmd_CheckParm("Weapons"))
	{
		for (i = 0; i < NUMWEAPONS; i++)
		{
			players[0].WeaponOwned[i] = true;
		}
	}

	// Ammo
	if (Cmd_CheckParm("Ammo"))
	{
		for (i = 0; i < NUMAMMO; i++)
		{
			players[0].Ammo[i] = maxammo[am_clip];
		}
	}

	// Keys
	if (Cmd_CheckParm("Keys"))
	{
		players[0].Keys = 0x03ffffff;
	}

	// Health
	if (Cmd_CheckParm("Health"))
	{
		players[0].Health = 100;
		players[0].MO.Health = 100;
	}
}

//==========================================================================
//
//  P_Massacre
//
//  Kills all monsters.
//
//==========================================================================

int P_Massacre(void)
{
	int count;
	Actor mo;

	count = 0;
	FOREACH(Actor, mo)
	{
		if (mo.bCountKill && (mo.Health > 0))
		{
			mo.Damage(none, none, 10000);
			count++;
		}
	}
	return count;
}

//==========================================================================
//
//  Cheat_KillAll
//
//==========================================================================

void Cheat_KillAll(void)
{
	cprint(&players[0], "%d MONSTERS KILLED", P_Massacre());
}

//**************************************************************************
//
//  $Log$
//  Revision 1.14  2002/05/03 17:17:31  dj_jl
//  Started work on weapons and items.
//
//  Revision 1.13  2002/03/28 18:15:35  dj_jl
//  Renamed mo in player_t to MO.
//
//  Revision 1.12  2002/03/20 19:07:47  dj_jl
//  Got rid of a lots of legacy, beautification.
//
//  Revision 1.11  2002/03/12 19:21:24  dj_jl
//  No need for linefeed in client-printing
//
//  Revision 1.10  2002/02/22 18:00:25  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.9  2002/02/06 17:28:53  dj_jl
//  Replaced Actor flags with boolean variables.
//
//  Revision 1.8  2002/01/28 18:50:20  dj_jl
//  Made some functions Actor members.
//  Replaced some pointers with references.
//
//  Revision 1.7  2002/01/24 18:19:27  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//  Revision 1.6  2002/01/15 18:27:01  dj_jl
//  Some property names with logical words starting with capital letter.
//  Moved everything from Entity class into Actor class.
//
//  Revision 1.5  2002/01/07 12:27:42  dj_jl
//  Changed copyright year
//
//  Revision 1.4  2001/11/02 18:42:08  dj_jl
//  Damage method
//
//  Revision 1.3  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.2  2001/07/27 14:27:53  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
