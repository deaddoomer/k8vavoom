//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2001 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**    Strife progs
//**
//**************************************************************************

#include "../../common/server.vc"
#define Thinker		thinker_t

#include "../strfdefs.vc"
#include "strings.vc"

//==========================================================================
//
//  Level special
//
//==========================================================================

class special_t;

typedef void (*special_func_t) (special_t *);

class special_t:Thinker
{
	special_func_t function;

	sector_t *sector;

	special_t *prev;
	special_t *next;

	//  Ceiling
	int type;
	float bottomheight;
	float topheight;
	float tic_speed;
	boolean crush;
	int direction;	// 1 = up, 0 = waiting, -1 = down
	int tag;
	int olddirection;
	//  Door
	int topwait;	// tics to wait at the top
	int topcountdown;	// (keep in case a door going down is reset)
	// when it reaches 0, start going down
	//  Floor
	int newspecial;
	int texture;
	float floordestheight;
	//  Plat
	float low;
	float high;
	int wait;
	int count;
	int status;
	int oldstatus;
	//  Lights
	int maxlight;
	int minlight;
	int maxtime;
	int mintime;

	void Think(void);
	void Archive(void);
	void Unarchive(void);
};

void special_t::Think(void)
{
	function(this);
}

#include "specutl.vc"
#include "ceilings.vc"
#include "doors.vc"
#include "floors.vc"
#include "plats.vc"
#include "lights.vc"
#include "spec.vc"

#include "world.vc"

#define S_GIBS		S_NULL
#define MT_BLOOD	MT_PUFF

#include "savegame.vc"
#include "states.vc"
#include "mobjinfo.vc"
#include "wpninfo.vc"
#include "inter.vc"
#include "user.vc"
#include "mobj.vc"
#include "move.vc"
#include "physics.vc"
#include "map.vc"
#include "teleport.vc"
#include "usersubs.vc"
#include "ai_subs.vc"
#include "weapons.vc"
#include "enemy.vc"
#include "cheat.vc"

#include "adummy.vc"

#include "svmain.vc"

//**************************************************************************
//
//  $Log$
//  Revision 1.4  2001/09/24 17:19:06  dj_jl
//  Created thinker classes
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//
//  Revision 1.2  2001/07/27 14:27:53  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
