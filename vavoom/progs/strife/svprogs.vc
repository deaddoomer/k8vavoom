//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**    Strife progs
//**
//**************************************************************************

#include <macros.vc>

import shared;
import svcommon;

enum
{
	PO_ANCHOR_TYPE = 9300,
	PO_SPAWN_TYPE,
	PO_SPAWNCRUSH_TYPE
};

//#define POLY_SEQ_NAME(num)		va("Sequence%d", num)
#define POLY_SEQ_NAME(num)		'Sequence0'

// CONSTANTS ---------------------------------------------------------------

// Power up artifacts.
enum
{
	pw_invulnerability,
	pw_strength,
	pw_invisibility,
	pw_ironfeet,
	pw_infrared,
	NUMPOWERS
};

enum
{
	FLOOR_SOLID,
	FLOOR_WATER,
	FLOOR_SLUDGE,
	FLOOR_LAVA
};

enum
{
	CONTENTS_EMPTY,
	CONTENTS_WATER,
	CONTENTS_SLUDGE,
	CONTENTS_LAVA,

	CONTENTS_SOLID = -1
};

enum
{
	CSHIFT_CONTENTS
};

enum
{
	CHAN_AUTO,
	CHAN_VOICE,
	CHAN_WEAPON,
	CHAN_ITEM,
	CHAN_BODY
};

enum
{
	QUEST_KilledBeldin,//1
	QUEST_StoleChalice,
	QUEST_Prison,
	QUEST_GovPowerCoupling,
	QUEST_GovDerwin,
	QUEST_BrokePowerCoupling,
	QUEST_7,
	QUEST_8,
	QUEST_GotDerwinsEar,
	QUEST_GotPrisonPass,//10
	QUEST_GotPrisonKey,
	QUEST_GotSeveredHand,
	QUEST_FreedPrisoners,
	QUEST_BlownUpCrystal,
	QUEST_GotGuardUniform,
	QUEST_BlownUpGates,
	QUEST_VisitOracle,
	QUEST_GotOraclePass,
	QUEST_DestroyComputer,
	QUEST_20,//20
	QUEST_KilledBishop,
	QUEST_KillMacil,
	QUEST_KilledOracle,
	QUEST_KilledMacil,
	QUEST_Factory,
	QUEST_KilledLoremaster,
	QUEST_BlownUpComputer,
	QUEST_GotCatacombKey,
	QUEST_FreedWorkers,
	QUEST_30,//30
	QUEST_31,

	NUMQUESTS
};

enum
{
	DOOREV_Close,
	DOOREV_Open,
	DOOREV_Raise,
	DOOREV_RaiseLocked,
	DOOREV_CloseWaitOpen,
	DOOREV_RaiseIn5Mins
};

enum
{
	FLOOREV_LowerToHighest,
	FLOOREV_RaiseToHighest,
	FLOOREV_LowerToLowest,
	FLOOREV_LowerToNearest,
	FLOOREV_RaiseToNearest,
	FLOOREV_RaiseToLowestCeiling,
	FLOOREV_LowerByValue,
	FLOOREV_RaiseByValue,
	FLOOREV_LowerByValueTimes8,
	FLOOREV_RaiseByValueTimes8,
	FLOOREV_LowerTimes8Instant,
	FLOOREV_RaiseTimes8Instant,
	FLOOREV_MoveToValueTimes8,
	FLOOREV_RaiseByTexture,
	FLOOREV_LowerToLowestChange,
	FLOOREV_RaiseToNearestChange,
	FLOOREV_RaiseByValueChange,
	FLOOREV_RaiseByValueChange2,
	FLOOREV_RaiseAndCrush,
	FLOOREV_RaiseBuildStep,
	FLOOREV_Generic,
	FLOOREV_GenericChange0,
	FLOOREV_GenericChangeT,
	FLOOREV_GenericChange,
	FLOOREV_Donut
};

enum
{
	ELEVEV_Down,
	ELEVEV_Up,
	ELEVEV_Current,
	ELEVEV_Raise,
	ELEVEV_Lower
};

enum
{
	STAIRSEV_DownNormal,
	STAIRSEV_UpNormal,
	STAIRSEV_DownSync,
	STAIRSEV_UpSync
};

enum
{
	WGLSTATE_EXPAND,
	WGLSTATE_STABLE,
	WGLSTATE_REDUCE
};

enum
{
	CEILEV_LowerToFloor,
	CEILEV_LowerToHighestFloor,
	CEILEV_LowerToLowest,
	CEILEV_RaiseToHighest,
	CEILEV_RaiseToNearest,
	CEILEV_LowerByValue,
	CEILEV_RaiseByValue,
	CEILEV_LowerByValueTimes8,
	CEILEV_RaiseByValueTimes8,
	CEILEV_LowerTimes8Instant,
	CEILEV_RaiseTimes8Instant,
	CEILEV_MoveToValueTimes8,
	CEILEV_LowerAndCrush,
	CEILEV_CrushAndRaise,
	CEILEV_CrushRaiseAndStay,
	CEILEV_CrushAndRaiseA,
	CEILEV_CrushAndRaiseSilA,
	CEILEV_CrushRaiseAndStayA,
	CEILEV_CrushRaiseAndStaySilA,
	CEILEV_Generic,
	CEILEV_GenericChange0,
	CEILEV_GenericChangeT,
	CEILEV_GenericChange,
	CEILEV_GenericCrush
};

enum
{
	PLAT_Up,
	PLAT_Down,
	PLAT_Waiting,
	PLAT_InStasis
};

enum
{
	PLATEV_PerpetualRaise,
	PLATEV_PerpetualRaiseLip,
	PLATEV_DownWaitUpStay,
	PLATEV_DownWaitUpStayLip,
	PLATEV_DownNearestWaitUpStay,
	PLATEV_DownLowestCeilingWaitUpStay,
	PLATEV_DownByValueWaitUpStay,
	PLATEV_UpWaitDownStay,
	PLATEV_UpNearestWaitDownStay,
	PLATEV_UpByValueWaitDownStay,
	PLATEV_Toggle,
	PLATEV_Generic
};

enum
{
	PODOOR_NONE,
	PODOOR_SLIDE,
	PODOOR_SWING
};

enum
{
	LIGHTEV_Fade,
	LIGHTEV_Glow,
	LIGHTEV_Flicker,
	LIGHTEV_Strobe
};

enum
{
	SCROLLEV_Side,
	SCROLLEV_Floor,
	SCROLLEV_Ceiling,
	SCROLLEV_Carry
};

enum
{
	PUSHER_Push,
	PUSHER_Pull,
	PUSHER_Wind,
	PUSHER_Current
};

// TYPES -------------------------------------------------------------------

class PolyobjThinker;

#include "game/classes.vc"

//**************************************************************************
//
//  $Log$
//  Revision 1.4  2006/03/26 13:08:41  dj_jl
//  Implemented support for modular progs.
//
//  Revision 1.3  2006/02/28 22:47:13  dj_jl
//  Replaced defines with constants.
//
//  Revision 1.2  2006/02/19 14:25:21  dj_jl
//  Some changes because of compiler changes.
//
//  Revision 1.1  2006/02/15 23:34:46  dj_jl
//  Moved all server progs global variables to classes.
//
//  Revision 1.28  2006/02/13 18:30:17  dj_jl
//  Moved all server progs global functions to classes.
//
//  Revision 1.27  2005/12/27 22:22:28  dj_jl
//  Created level info class, moved action special handling to it.
//
//  Revision 1.26  2005/12/01 19:46:35  dj_jl
//  Cleanup.
//
//  Revision 1.25  2005/03/28 07:45:29  dj_jl
//  Some Boom line specials, fixed multiple bugs.
//
//  Revision 1.24  2004/12/27 12:23:15  dj_jl
//  Multiple small changes for version 1.16
//
//  Revision 1.23  2004/11/22 07:36:29  dj_jl
//  Implemented all sector specials in all games.
//
//  Revision 1.22  2004/11/01 07:38:24  dj_jl
//  Almost all Hexen line specials are available in all games.
//
//  Revision 1.21  2004/08/28 12:35:25  dj_jl
//  Move general client functions to player class.
//
//  Revision 1.20  2004/08/23 19:24:02  dj_jl
//  Moved weapon utilites to player class.
//
//  Revision 1.19  2002/11/02 08:22:38  dj_jl
//  New style classes.
//
//  Revision 1.18  2002/07/15 17:54:19  dj_jl
//  Removed all data from teaser exe.
//
//  Revision 1.17  2002/07/13 07:56:42  dj_jl
//  Huge work on Strife: splitting, merging, implementing stuff, etc.
//
//  Revision 1.16  2002/06/29 15:59:27  dj_jl
//  Split out items, projectiles and decorations.
//
//  Revision 1.15  2002/05/03 17:17:32  dj_jl
//  Started work on weapons and items.
//
//  Revision 1.14  2002/04/27 17:04:55  dj_jl
//  Merged all creatures.
//
//  Revision 1.13  2002/04/22 17:22:32  dj_jl
//  Retail Strife data.
//
//  Revision 1.12  2002/03/20 19:07:47  dj_jl
//  Got rid of a lots of legacy, beautification.
//
//  Revision 1.11  2002/01/17 18:15:55  dj_jl
//  Renamed all map object classes
//
//  Revision 1.10  2002/01/15 18:27:01  dj_jl
//  Some property names with logical words starting with capital letter.
//  Moved everything from Entity class into Actor class.
//
//  Revision 1.9  2002/01/07 12:27:42  dj_jl
//  Changed copyright year
//
//  Revision 1.8  2001/12/18 18:29:22  dj_jl
//  Added Hexen action specials
//
//  Revision 1.7  2001/10/18 17:39:34  dj_jl
//  A lots of changes for Alpha 2
//
//  Revision 1.6  2001/10/09 17:35:46  dj_jl
//  Split server defines into seperate file
//
//  Revision 1.5  2001/09/25 17:12:09  dj_jl
//  Switched to Hexen map format, special thinker classes
//
//  Revision 1.4  2001/09/24 17:19:06  dj_jl
//  Created thinker classes
//
//  Revision 1.3  2001/09/20 16:20:00  dj_jl
//  Start using object-oriented stuff, beautification
//
//  Revision 1.2  2001/07/27 14:27:53  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
