//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2001 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**    Skill menu
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

struct menu_skill_t
{
	menu_t menu;
	menutext_t skill[5];
	menutext_t title;
};

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

menu_skill_t SkillMenu;
int MenuSkill;

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  SkillCallback
//
//==========================================================================

void SkillCallback(menucommon_t * item, int msg)
{
	if (msg == MMSG_ACTIVATE)
	{
		MenuSkill = item->id;
	}
}

//==========================================================================
//
//  NewGame
//
//==========================================================================

void NewGame(int skill)
{
	SetCvar("Skill", skill);

	CmdBuf_AddText("Disconnect\n");
	CmdBuf_AddText("MaxPlayers 1\n");

	if (shareware)
		CmdBuf_AddText("Map MAP33\n");
	else
		CmdBuf_AddText("Map MAP02\n");

	ForceMenuOff();
}

//==========================================================================
//
//  VerifyNightmare
//
//  Realy mightmare skill?
//
//==========================================================================

void VerifyNightmare(int ch)
{
	if (ch != 'y')
		return;

	NewGame(sk_nightmare);
}

//==========================================================================
//
//  skill_func
//
//  Let's play
//
//==========================================================================

void skill_func(void)
{
	if (MenuSkill == sk_nightmare)
	{
		MB_StartMessage
			("are you sure? this skill level\nisn't even remotely fair.\n\npress y or n.",
			VerifyNightmare, true);
		return;
	}

	NewGame(MenuSkill);
}

//==========================================================================
//
//  menu_skill
//
//==========================================================================

void menu_skill(void)
{
	int x;
	int y;
	int i;

	x = 48;
	y = 40;

	InitMenu(&SkillMenu.menu);

	MenuText_InitFunc(&SkillMenu.skill[0], x, y, "training", TEXT_BIG,
		skill_func);
	SkillMenu.skill[0].callback = SkillCallback;
	SkillMenu.skill[0].id = 0;
	AddMenuItem(&SkillMenu.menu, &SkillMenu.skill[0]);
	y += 18;

	MenuText_InitFunc(&SkillMenu.skill[1], x, y, "rookie", TEXT_BIG,
		skill_func);
	SkillMenu.skill[1].callback = SkillCallback;
	SkillMenu.skill[1].id = 1;
	AddMenuItem(&SkillMenu.menu, &SkillMenu.skill[1]);
	y += 18;

	MenuText_InitFunc(&SkillMenu.skill[2], x, y, "veteran", TEXT_BIG,
		skill_func);
	SkillMenu.skill[2].callback = SkillCallback;
	SkillMenu.skill[2].id = 2;
	AddMenuItem(&SkillMenu.menu, &SkillMenu.skill[2]);
	y += 18;

	MenuText_InitFunc(&SkillMenu.skill[3], x, y, "elite", TEXT_BIG,
		skill_func);
	SkillMenu.skill[3].callback = SkillCallback;
	SkillMenu.skill[3].id = 3;
	AddMenuItem(&SkillMenu.menu, &SkillMenu.skill[3]);
	y += 18;

	MenuText_InitFunc(&SkillMenu.skill[4], x, y, "bloodbath", TEXT_BIG,
		skill_func);
	SkillMenu.skill[4].callback = SkillCallback;
	SkillMenu.skill[4].id = 4;
	AddMenuItem(&SkillMenu.menu, &SkillMenu.skill[4]);

	MenuText_InitTitle(&SkillMenu.title, 160, 24, "CHOOSE SKILL LEVEL:",
		TEXT_BIGC);
	AddMenuItem(&SkillMenu.menu, &SkillMenu.title);

	PushMenu(&SkillMenu.menu);
	Menu_SetCursor(&SkillMenu.menu, 2);
}

//**************************************************************************
//
//  $Log$
//  Revision 1.5  2001/12/01 18:04:24  dj_jl
//  Started reworking menus
//
//  Revision 1.4  2001/09/25 17:11:04  dj_jl
//  Seperated menu API
//
//  Revision 1.3  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.2  2001/07/27 14:27:53  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
