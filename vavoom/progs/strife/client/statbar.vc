//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

int sb_height = 32;

int pic_invback;
int pic_invtop;
int pic_pause;
int pic_yellownum[11];
int pic_graynum[11];

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  SB_StartMap
//
//==========================================================================

void SB_StartMap(void)
{
	int namebuf[3];
	string Name = ARR2STR(namebuf);
	int i;

	pic_invback = R_RegisterPic("INVBACK", PIC_PATCH);
	pic_invtop = R_RegisterPic("INVTOP", PIC_PATCH);

	for (i = 0; i < 10; i++)
	{
		sprint(Name, "INVFONY%d", i);
		pic_yellownum[i] = R_RegisterPic(Name, PIC_PATCH);
		sprint(Name, "INVFONG%d", i);
		pic_graynum[i] = R_RegisterPic(Name, PIC_PATCH);
	}
	pic_yellownum[10] = R_RegisterPic("INVFONY%", PIC_PATCH);
	pic_graynum[10] = R_RegisterPic("INVFONG%", PIC_PATCH);

	pic_pause = R_RegisterPic("M_PAUSE", PIC_PATCH);
}

//==========================================================================
//
//	SB_DrawSmallNum
//
//==========================================================================

void SB_DrawSmallNum(int x, int y, int num)
{
	int w;
	picinfo_t info;

	if (num < 0)
	{
		num = -num;
	}

	R_GetPicInfo(pic_yellownum[0], &info);
	w = info.width;

	// in the special case of 0, you draw 0
	if (!num)
	{
		R_DrawPic(x - w, y, pic_yellownum[0]);
	}

	// draw the new number
	while (num)
	{
		x -= w;
		R_DrawPic(x, y, pic_yellownum[num % 10]);
		num /= 10;
	}
}

//==========================================================================
//
//	SB_DrawMainBar
//
//==========================================================================

void SB_DrawMainBar(void)
{
	//  background
	R_DrawPic(0, 168, pic_invback);
	R_DrawPic(0, 160, pic_invtop);

	// health percentage
	SB_DrawSmallNum(76, 162, cl->health);
}

//==========================================================================
//
//	SB_DrawPause
//
//==========================================================================

void SB_DrawPause(void)
{
	if (cl->bPaused && GetCvar("draw_pause"))
	{
		//  Pause
		R_DrawPic(126, 4, pic_pause);
	}
}

//==========================================================================
//
//  SB_Drawer
//
//==========================================================================

void SB_Drawer(int sb_view)
{
	if (sb_view != SB_VIEW_FULLSCREEN)
	{
		SB_DrawMainBar();
	}
	SB_DrawPause();
}

//==========================================================================
//
//  SB_UpdateWidgets
//
//==========================================================================

void SB_UpdateWidgets(void)
{
}

//**************************************************************************
//
//  $Log$
//  Revision 1.9  2003/09/15 16:42:25  dj_jl
//  Health indicator
//
//  Revision 1.8  2002/09/07 16:28:26  dj_jl
//  Added Level class.
//
//  Revision 1.7  2002/01/07 12:27:41  dj_jl
//  Changed copyright year
//
//  Revision 1.6  2001/10/02 17:37:19  dj_jl
//  Removed status bar widgets
//
//  Revision 1.5  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.4  2001/08/29 17:46:25  dj_jl
//  Moved view border and message box to progs
//  
//  Revision 1.3  2001/08/15 17:07:37  dj_jl
//  Fixed Strife status bar
//
//  Revision 1.2  2001/07/27 14:27:53  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
