//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

int pic_brdr_t;
int pic_brdr_b;
int pic_brdr_l;
int pic_brdr_r;
int pic_brdr_tl;
int pic_brdr_tr;
int pic_brdr_bl;
int pic_brdr_br;

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  InitBorder
//
//==========================================================================

void InitBorder(void)
{
	pic_brdr_t = R_RegisterPic("brdr_t", PIC_PATCH);
	pic_brdr_b = R_RegisterPic("brdr_b", PIC_PATCH);
	pic_brdr_l = R_RegisterPic("brdr_l", PIC_PATCH);
	pic_brdr_r = R_RegisterPic("brdr_r", PIC_PATCH);
	pic_brdr_tl = R_RegisterPic("brdr_tl", PIC_PATCH);
	pic_brdr_tr = R_RegisterPic("brdr_tr", PIC_PATCH);
	pic_brdr_bl = R_RegisterPic("brdr_bl", PIC_PATCH);
	pic_brdr_br = R_RegisterPic("brdr_br", PIC_PATCH);
}

//==========================================================================
//
//  DrawBorder
//
//  Draws border
//
//==========================================================================

void DrawBorder(int x, int y, int w, int h)
{
	int i;

	if (!pic_brdr_b)
	{
		InitBorder();
	}

	for (i = 0; i < w; i += 8)
		R_DrawPic(x + i, y - 8, pic_brdr_t);

	for (i = 0; i < w; i += 8)
		R_DrawPic(x + i, y + h, pic_brdr_b);

	for (i = 0; i < h; i += 8)
		R_DrawPic(x - 8, y + i, pic_brdr_l);

	for (i = 0; i < h; i += 8)
		R_DrawPic(x + w, y + i, pic_brdr_r);

	// Draw beveled edge.
	R_DrawPic(x - 8, y - 8, pic_brdr_tl);
	R_DrawPic(x + w, y - 8, pic_brdr_tr);
	R_DrawPic(x - 8, y + h, pic_brdr_bl);
	R_DrawPic(x + w, y + h, pic_brdr_br);
}

//==========================================================================
//
//  DrawViewBorder
//
//==========================================================================

void DrawViewBorder(int x, int y, int w, int h)
{
	R_FillRectWithFlat(0, 0, 320, 200 - 32, "F_PAVE01");
	DrawBorder(x, y, w, h);
}

//**************************************************************************
//
//  $Log$
//  Revision 1.3  2002/01/07 12:27:41  dj_jl
//  Changed copyright year
//
//  Revision 1.2  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.1  2001/08/29 17:46:25  dj_jl
//  Moved view border and message box to progs
//  
//**************************************************************************
